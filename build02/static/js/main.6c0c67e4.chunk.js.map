{"version":3,"sources":["layout/main/main.module.css","layout/navbar/navbar.module.css","App.module.css","layout/header/header.module.css","layout/navbar/navbar.js","layout/header/header.js","components/Appointments/Appointments.js","components/Boilers/BoilerItem.js","components/Boilers/BoilersList.js","components/Boilers/AddBoiler.js","redux/types/types-boilers.js","redux/actions/boilersActions.js","components/Boilers/Boilers.js","components/BoilersTypes/BoilersTypes.js","components/Buildings/AddBuilding.js","components/Buildings/BuildingItem.js","components/Buildings/BuildingsList.js","components/Buildings/Buildings.js","components/Customers/CustomerItem.js","components/Customers/CustomersList.js","components/Customers/AddCustomer.js","redux/types/types-customers.js","redux/actions/customersActions.js","components/Customers/Customers.js","components/Technicians/Technicians.js","App.js","reportWebVitals.js","redux/reducers/boilersReducer.js","redux/reducers/customersReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["module","exports","Navbar","className","styles","navbarContainer","logo","navbarLinks","to","Header","headerContainer","Appointment","BoilerItem","this","props","boiler","_id","maintainceRate","typeId","hourMaintainceCost","hourEventualCost","onClick","delBoiler","bind","btnStyle","editBoiler","Component","BoilersList","type","value","input","handleShowForm","table","boilers","map","AddBoiler","state","handleCleanForm","setState","handleEdit","boilerEdit","onSubmit","e","preventDefault","updateBoiler","addBoiler","onChange","target","name","placeholder","GET_BOILER_FETCHING","GET_BOILER_FULFILLED","GET_BOILER_REJECTED","ADD_BOILER_FETCHING","ADD_BOILER_FULFILLED","ADD_BOILER_REJECTED","DEL_BOILER_FETCHING","DEL_BOILER_FULFILLED","DEL_BOILER_REJECTED","EDIT_BOILER_FETCHING","EDIT_BOILER_FULFILLED","EDIT_BOILER_REJECTED","URL","getBoilers","dispatch","fetch","then","data","json","response","payload","catch","dataSend","requestOptions","method","headers","body","JSON","stringify","Boilers","showForm","window","scrollTo","info","connect","list","getBoilersActions","delBoilerActions","addBoilerActions","updateBoilerActions","BoilersTypes","AddBuilding","id","boilerId","businessName","email","phone","adress","buildingEdit","updateBuilding","addBuilding","formShow","title","form","inputStyle","BuildingItem","building","delBuilding","editBuilding","BuildingsList","btnStyleNew","buildings","Buildings","filter","newBuilding","uuidv4","getBuilding","require","CustomerItem","customer","customerType","buildingsIds","fiscalAddress","delCustomer","editCustomer","Customers","customers","index","AddCustomer","customerEdit","toString","updateCustomer","addCustomer","GET_CUSTOMER_FETCHING","GET_CUSTOMER_FULFILLED","GET_CUSTOMER_REJECTED","ADD_CUSTOMER_FETCHING","ADD_CUSTOMER_FULFILLED","ADD_CUSTOMER_REJECTED","DEL_CUSTOMER_FETCHING","DEL_CUSTOMER_FULFILLED","DEL_CUSTOMER_REJECTED","EDIT_CUSTOMER_FETCHING","EDIT_CUSTOMER_FULFILLED","EDIT_CUSTOMER_REJECTED","getCustomers","CustomersList","getCustomersActions","delCustomerActions","addCustomerActions","updateCustomerActions","Technicians","App","wrapper","mainContent","path","component","Appointments","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isLoading","error","boilersReducer","action","text","completed","customersReducer","rootReducer","combineReducers","appointments","appointmentsReducer","boilerTypes","boilerTypesReducer","buildingsReducer","technicians","techniciansReducer","middleware","thunk","store","enhancer","composeWithDevTools","createStore","compose","applyMiddleware","configureStore","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qGACAA,EAAOC,QAAU,CAAC,KAAO,mBAAmB,MAAQ,oBAAoB,MAAQ,oBAAoB,SAAW,uBAAuB,YAAc,0BAA0B,KAAO,mBAAmB,MAAQ,oBAAoB,SAAW,uBAAuB,MAAQ,oBAAoB,SAAW,yB,mBCA7SD,EAAOC,QAAU,CAAC,gBAAkB,gCAAgC,KAAO,uB,mBCA3ED,EAAOC,QAAU,CAAC,IAAM,iBAAiB,QAAU,qBAAqB,YAAc,2B,mBCAtFD,EAAOC,QAAU,CAAC,gBAAkB,kC,m3FC+CrBC,MA5Cf,WACI,OACQ,sBAAKC,UAAWC,IAAOC,gBAAvB,UACI,qBAAKF,UAAWC,IAAOE,KAAvB,SACI,0CAIJ,qBAAIH,UAAWC,IAAOG,YAAtB,UACI,cAAC,IAAD,CAAMC,GAAG,gBAAT,SACI,gDAIJ,cAAC,IAAD,CAAMA,GAAG,WAAT,SACI,2CAIJ,cAAC,IAAD,CAAMA,GAAG,gBAAT,SACI,gDAIJ,cAAC,IAAD,CAAMA,GAAG,aAAT,SACI,6CAIJ,cAAC,IAAD,CAAMA,GAAG,aAAT,SACI,6CAIJ,cAAC,IAAD,CAAMA,GAAG,eAAT,SACI,sD,iBC7BTC,MAPf,WACI,OACI,qBAAKN,UAAWC,IAAOM,mBCOhBC,MAVf,WACI,OACI,8BACI,gD,4CCyCGC,EA1Cf,uKAEY,IAAD,EAOHC,KAAKC,MAAMC,OALbC,EAFK,EAELA,IACAC,EAHK,EAGLA,eACAC,EAJK,EAILA,OACAC,EALK,EAKLA,mBACAC,EANK,EAMLA,iBAEF,OACE,+BACE,6BAAKJ,IACL,6BAAKE,IACL,6BAAKD,IACL,6BAAKE,IACL,6BAAKC,IACL,+BACE,wBACEC,QAASR,KAAKC,MAAMQ,UAAUC,KAAKV,KAAMG,GACzCb,UAAWC,IAAOoB,SAFpB,oBAMA,wBACEH,QAASR,KAAKC,MAAMW,WAAWF,KAAKV,KAAMA,KAAKC,MAAMC,QACrDZ,UAAWC,IAAOoB,SAFpB,4BAxBV,GAAgCE,aCkDjBC,E,uKAhDH,IAAD,SACP,OACE,gCACE,yCACU,IACR,uBACEC,KAAK,SACLC,MAAM,MACN1B,UAAWC,IAAO0B,MAClBT,QAAS,kBAAM,EAAKP,MAAMiB,uBAG9B,wBAAO5B,UAAWC,IAAO4B,MAAzB,UACE,gCACE,+BACE,oCACA,sCACA,4CACA,iDACA,+CACA,8CAGJ,0CACGnB,KAAKC,MAAMmB,eADd,aACG,EAAoBC,KAAI,SAACnB,GAAD,OACvB,cAAC,EAAD,CAEEA,OAAQA,EACRU,WAAY,EAAKX,MAAMW,WACvBH,UAAW,EAAKR,MAAMQ,WAHjBP,EAAOC,oB,GA3BFU,a,QCsHXS,EAvHf,4MACEC,MAAQ,CACNpB,IAAK,GACLE,OAAQ,GACRD,eAAgB,GAChBE,mBAAoB,GACpBC,iBAAkB,IANtB,EAeEiB,gBAAkB,WAChB,EAAKC,SAAS,CACZtB,IAAK,GACLE,OAAQ,GACRD,eAAgB,GAChBE,mBAAoB,GACpBC,iBAAkB,KAEpB,EAAKN,MAAMiB,kBAvBf,EA0BEQ,WAAa,SAACC,GACZ,EAAKF,SAAS,CACZtB,IAAKwB,EAAWxB,IAChBE,OAAQsB,EAAWtB,OACnBD,eAAgBuB,EAAWvB,eAC3BE,mBAAoBqB,EAAWrB,mBAC/BC,iBAAkBoB,EAAWpB,oBAhCnC,EAoCEqB,SAAW,SAACC,GACVA,EAAEC,iBACE,EAAKP,MAAMpB,IACb,EAAKF,MAAM8B,aACT,EAAKR,MAAMpB,IACX,EAAKoB,MAAMlB,OACX,EAAKkB,MAAMnB,eACX,EAAKmB,MAAMjB,mBACX,EAAKiB,MAAMhB,kBAGb,EAAKN,MAAM+B,UACT,EAAKT,MAAMlB,OACX,EAAKkB,MAAMnB,eACX,EAAKmB,MAAMjB,mBACX,EAAKiB,MAAMhB,kBAGf,EAAKiB,mBAtDT,EAyDES,SAAW,SAACJ,GAAD,OAAO,EAAKJ,SAAL,eAAiBI,EAAEK,OAAOC,KAAON,EAAEK,OAAOlB,SAzD9D,kEAUQhB,KAAKC,MAAM0B,YACb3B,KAAK0B,WAAW1B,KAAKC,MAAM0B,cAXjC,+BA4DI,OACE,gCACE,6BAAK3B,KAAKuB,MAAMpB,IAAM,cAAgB,mBACtC,uBAAMyB,SAAU5B,KAAK4B,SAArB,UACA,uBAAOb,KAAK,SAASoB,KAAK,MAAMnB,MAAOhB,KAAKuB,MAAMpB,MAChD,uBACEY,KAAK,OACLoB,KAAK,SACL7C,UAAWC,IAAO0B,MAClBmB,YAAY,iBACZpB,MAAOhB,KAAKuB,MAAMlB,OAClB4B,SAAUjC,KAAKiC,WAEjB,uBACElB,KAAK,OACLoB,KAAK,iBACL7C,UAAWC,IAAO0B,MAClBmB,YAAY,sBACZpB,MAAOhB,KAAKuB,MAAMnB,eAClB6B,SAAUjC,KAAKiC,WAEjB,uBACElB,KAAK,OACLoB,KAAK,qBACL7C,UAAWC,IAAO0B,MAClBmB,YAAY,2BACZpB,MAAOhB,KAAKuB,MAAMjB,mBAClB2B,SAAUjC,KAAKiC,WAEjB,uBACElB,KAAK,OACLoB,KAAK,mBACL7C,UAAWC,IAAO0B,MAClBmB,YAAY,2BACZpB,MAAOhB,KAAKuB,MAAMhB,iBAClB0B,SAAUjC,KAAKiC,WAGjB,uBAAOlB,KAAK,SAASC,MAAM,SAAS1B,UAAWC,IAAO0B,QACtD,uBACEF,KAAK,SACLC,MAAM,SACN1B,UAAWC,IAAO0B,MAClBT,QAASR,KAAKwB,4BAvG1B,GAA+BX,aCHlBwB,EAAsB,sBACtBC,EAAuB,uBACvBC,EAAsB,sBAGtBC,EAAsB,sBACtBC,EAAuB,uBACvBC,EAAsB,sBAGtBC,EAAqB,sBACrBC,EAAsB,uBACtBC,EAAqB,sBAGrBC,EAAsB,uBACtBC,EAAuB,wBACvBC,EAAsB,uBCF7BC,EAAM,mDAiBCC,EAAa,kBAAM,SAACC,GAE/B,OADAA,EAd+B,CAC/BpC,KAAMsB,IAcCe,MAAMH,GACVI,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLL,EAdmC,CACvCpC,KAAMuB,EACNmB,QAYgCD,OAE7BE,OAAM,WACLP,EAZ2B,CAC/BpC,KAAMwB,SA6BKP,EAAY,SACvB3B,EACAD,EACAE,EACAC,GAJuB,OAKpB,SAAC4C,GACJA,EAnB+B,CAC/BpC,KAAMyB,IAmBN,IAAMmB,EAAW,CACftD,SACAD,iBACAE,qBACAC,oBAEIqD,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAGvB,OAAOP,MAAMH,EAAKW,GACfP,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLL,EA/BmC,CACvCpC,KAAM0B,EACNgB,QA6BgCD,OAE7BH,MAAK,kBAAMF,EAASD,QACpBQ,OAAM,WACLP,EA9B2B,CAC/BpC,KAAM2B,SAgDKjC,EAAY,SAACN,GAAD,OAAS,SAACgD,GACjCA,EAd+B,CAC/BpC,KAAM4B,IAcN,IAAMgB,EAAW,CAAExD,OACbyD,EAAiB,CACrBC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAGvB,OAAOP,MAAM,GAAD,OAAIH,EAAJ,YAAW9C,GAAOyD,GAC3BP,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLL,EArBmC,CACvCpC,KAAM6B,EACNa,QAmBgCtD,OAE7BkD,MAAK,kBAAMF,EAASD,QACpBQ,OAAM,WACLP,EApB2B,CAC/BpC,KAAM8B,SAsCKjC,EAAa,SACxBT,EACAE,EACAD,EACAE,EACAC,GALwB,OAMrB,SAAC4C,GACJA,EApBgC,CAChCpC,KAAM+B,IAqBN,IAAMa,EAAW,CACfxD,MACAE,SACAD,iBACAE,qBACAC,oBAEIqD,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAGvB,OAAOP,MAAM,GAAD,OAAIH,EAAJ,YAAW9C,GAAOyD,GAC3BP,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLL,EAlCoC,CACxCpC,KAAMgC,EACNU,QAgCiCD,OAE9BH,MAAK,kBAAMF,EAASD,QACpBQ,OAAM,WACLP,EAjC4B,CAChCpC,KAAMiC,SC5HFkB,E,4MACJ3C,MAAQ,CACNI,WAAY,KACZwC,UAAU,G,EAQZjD,eAAiB,WACf,EAAKO,SAAS,CACZ0C,UAAW,EAAK5C,MAAM4C,SACtBxC,WAAY,OAEdyC,OAAOC,SAAS,EAAG,I,EAIrBzD,WAAa,SAACV,GACZ,EAAKuB,SAAS,CACZE,WAAYzB,EACZiE,UAAU,IAEZC,OAAOC,SAAS,EAAG,I,kEAlBnBrE,KAAKC,MAAMiD,e,+BAsBX,OACE,qBAAK5D,UAAWC,IAAO+E,KAAvB,SACGtE,KAAKuB,MAAM4C,SACV,cAAC,EAAD,CACEnC,UAAWhC,KAAKC,MAAM+B,UACtBD,aAAc/B,KAAKC,MAAM8B,aACzBJ,WAAY3B,KAAKuB,MAAMI,WACvBT,eAAgBlB,KAAKkB,iBAGvB,cAAC,EAAD,CACEE,QAASpB,KAAKC,MAAMmB,QACpBX,UAAWT,KAAKC,MAAMQ,UACtBG,WAAYZ,KAAKY,WACjBM,eAAgBlB,KAAKkB,eACrBiD,SAAUnE,KAAKuB,MAAM4C,iB,GA5CXtD,aAsFP0D,eAJS,SAAChD,GAAD,MAAY,CAClCH,QAASG,EAAMH,QAAQoD,SA/BE,SAACrB,GAAD,MAAe,CACxCD,WAAY,kBAAMC,EAASsB,MAC3BhE,UAAW,SAACN,GAAD,OAASgD,EAASuB,EAAiBvE,KAC9C6B,UAAW,SAAC3B,EAAQD,EAAgBE,EAAoBC,GAA7C,OACT4C,EACEwB,EACEtE,EACAD,EACAE,EACAC,KAGNwB,aAAc,SACZ5B,EACAE,EACAD,EACAE,EACAC,GALY,OAOZ4C,EACEyB,EACEzE,EACAE,EACAD,EACAE,EACAC,QASOgE,CAA6CL,GCtF7CW,MAVf,WACI,OACI,8BACI,iD,QCgJGC,EAjJd,4MACIvD,MAAQ,CACJwD,GAAG,GACHC,SAAS,GACTC,aAAa,GACbC,MAAM,GACNC,MAAM,GACNC,OAAO,IAPf,EAgBK5D,gBAAkB,WAChB,EAAKC,SAAS,CACdsD,GAAI,GACJC,SAAU,GACVC,aAAc,GACdC,MAAO,GACPC,MAAO,GACPC,OAAQ,KAER,EAAKnF,MAAMiB,kBAzBlB,EA4BKQ,WAAa,SAAC2D,GACZ,EAAK5D,SAAS,CACdsD,GAAIM,EAAaN,GACjBC,SAAUK,EAAaL,SACvBC,aAAcI,EAAaJ,aAC3BC,MAAOG,EAAaH,MACpBC,MAAOE,EAAaF,MACpBC,OAAQC,EAAaD,UAnC5B,EAuCIxD,SAAW,SAACC,GACRA,EAAEC,iBACE,EAAKP,MAAMwD,GACZ,EAAK9E,MAAMqF,eACP,EAAK/D,MAAMwD,GACX,EAAKxD,MAAMyD,SACX,EAAKzD,MAAM0D,aACX,EAAK1D,MAAM2D,MACX,EAAK3D,MAAM4D,MACX,EAAK5D,MAAM6D,QAGlB,EAAKnF,MAAMsF,YACR,EAAKhE,MAAMyD,SACX,EAAKzD,MAAM0D,aACX,EAAK1D,MAAM2D,MACX,EAAK3D,MAAM4D,MACX,EAAK5D,MAAM6D,QAGd,EAAK3D,SAAS,CACXsD,GAAI,GACHC,SAAS,GACTC,aAAa,GACbC,MAAM,GACNC,MAAM,GACNC,OAAO,MAjEnB,EAqEInD,SAAW,SAACJ,GAAD,OAAO,EAAKJ,SAAL,eAAiBI,EAAEK,OAAOC,KAAON,EAAEK,OAAOlB,SArEhE,kEAWWhB,KAAKC,MAAMoF,cACbrF,KAAK0B,WAAW1B,KAAKC,MAAMoF,gBAZpC,+BAwEO,OACI,sBAAK/F,UAAWC,IAAOiG,SAAvB,UACI,oBAAIlG,UAAWC,IAAOkG,MAAtB,SACCzF,KAAKuB,MAAMwD,GAAK,gBAAkB,qBAEnC,uBAAMnD,SAAW5B,KAAK4B,SAAUtC,UAAWC,IAAOmG,KAAlD,UACI,uBAAO3E,KAAK,SAASoB,KAAK,KAAKnB,MAAOhB,KAAKuB,MAAMwD,KACjD,uBACAhE,KAAK,OACLoB,KAAK,WACL7C,UAAWC,IAAOoG,WAClBvD,YAAY,gBACZpB,MAAOhB,KAAKuB,MAAMyD,SAClB/C,SAAUjC,KAAKiC,WAEf,uBACAlB,KAAK,OACLoB,KAAK,eACL7C,UAAWC,IAAOoG,WAClBvD,YAAY,oBACZpB,MAAOhB,KAAKuB,MAAM0D,aAClBhD,SAAUjC,KAAKiC,WAEf,uBACAlB,KAAK,OACLoB,KAAK,QACL7C,UAAWC,IAAOoG,WAClBvD,YAAY,aACZpB,MAAOhB,KAAKuB,MAAM2D,MAClBjD,SAAUjC,KAAKiC,WAEf,uBACAlB,KAAK,OACLoB,KAAK,SACL7C,UAAWC,IAAOoG,WAClBvD,YAAY,gBACZpB,MAAOhB,KAAKuB,MAAM6D,OAClBnD,SAAUjC,KAAKiC,WAEf,uBACAlB,KAAK,OACLoB,KAAK,QACL7C,UAAWC,IAAOoG,WAClBvD,YAAY,eACZpB,MAAOhB,KAAKuB,MAAM4D,MAClBlD,SAAUjC,KAAKiC,WAGf,uBACAlB,KAAK,SACLC,MAAO,SACP1B,UAAWC,IAAOoG,WAClBnF,QAASR,KAAKwB,kBAEd,uBACAT,KAAK,SACLC,MAAM,SACN1B,UAAWC,IAAOoG,uBAjIrC,GAAiC9E,aC6CnB+E,G,uKA3CD,IAAD,EAED5F,KAAKC,MAAM4F,SADPd,EADH,EACGA,GAAIC,EADP,EACOA,SAAUC,EADjB,EACiBA,aAAcC,EAD/B,EAC+BA,MAAOC,EADtC,EACsCA,MAAOC,EAD7C,EAC6CA,OAElD,OACW,+BACK,6BACKJ,IAEL,6BACKC,IAEL,6BACKC,IAEL,6BACKC,IAEL,6BACKC,IAEL,+BACI,wBACI5E,QAASR,KAAKC,MAAM6F,YAAYpF,KAAKV,KAAM+E,GAC3CzF,UAAWC,IAAOoB,SAFtB,eAKA,wBACIH,QAASR,KAAKC,MAAM8F,aAAarF,KAAKV,KAAMA,KAAKC,MAAM4F,UACvDvG,UAAWC,IAAOoB,SAFtB,4B,GA7BDE,aCmDZmF,G,uKA9CJ,IAAD,OACN,OACE,gCACI,qBAAI1G,UAAWC,IAAOkG,MAAtB,sBACY,IACV,uBACA1E,KAAK,SACLC,MAAM,IACN1B,UAAWC,IAAO0G,YAClBzF,QAAS,kBAAK,EAAKP,MAAMiB,uBAG3B,wBAAO5B,UAAWC,IAAO4B,MAAzB,UACI,+BACE,oCACA,+CACA,wCACA,uCACA,yCACA,4CAEN,gCACDnB,KAAKC,MAAMiG,UAAU7E,KAAI,SAACwE,GAAD,OACxB,cAAC,GAAD,CAEEA,SAAUA,EACVC,YAAa,EAAK7F,MAAM6F,YACxBC,aAAc,EAAK9F,MAAM8F,cAHpBF,EAASd,mB,GA3BElE,a,SCgHbsF,G,4MA5Gb5E,MAAQ,CACN2E,UAAW,GACXb,aAAc,KACdlB,UAAU,G,EAWdjD,eAAiB,WACb,EAAKO,SAAS,CACZ0C,UAAW,EAAK5C,MAAM4C,SACtBkB,aAAc,OAEhBjB,OAAOC,SAAS,EAAG,I,EAIvB0B,aAAe,SAACF,GACd,EAAKpE,SAAS,CACZ4D,aAAcQ,EACd1B,UAAU,IAEZC,OAAOC,SAAS,EAAG,I,EAIrBiB,eAAiB,SACfP,EACAC,EACAC,EACAC,EACAC,EACAC,GAGA,EAAK3D,SAAS,CACZyE,UAAW,EAAK3E,MAAM2E,UAAU7E,KAAI,SAACwE,GAQnC,OAPIA,EAASd,KAAOA,IAClBc,EAASb,SAAWA,EACpBa,EAASX,MAAQA,EACjBW,EAASZ,aAAeA,EACxBY,EAAST,OAASA,EAClBS,EAASV,MAAQA,GAEZU,KAET1B,UAAU,K,EAMd2B,YAAc,SAACf,GACb,EAAKtD,SAAS,CACVyE,UAAU,YACH,EAAK3E,MAAM2E,UAAUE,QAAO,SAACP,GAAD,OAAcA,EAASd,KAAMA,MAE9DZ,UAAU,K,EAMlBW,YAAc,SAACE,EAAUC,EAAaC,EAAMC,EAAMC,GAChD,IAAMiB,EAAa,CACjBtB,GAAIuB,eACJtB,WACAC,eACAC,QACAC,QACAC,UAEF,EAAK3D,SAAS,CACVyE,UAAU,GAAD,mBAAM,EAAK3E,MAAM2E,WAAjB,CAA4BG,IACvClC,UAAU,K,kEAvEZ,IAAMoC,EAAcC,EAAQ,IAC5BxG,KAAKyB,SAAS,CAACyE,UAAWK,M,+BA2ExB,OACE,qBAAKjH,UAAWC,IAAO+E,KAAvB,SACGtE,KAAKuB,MAAM4C,SACV,cAAC,EAAD,CACEW,YAAa9E,KAAK8E,YAClBQ,eAAgBtF,KAAKsF,eACrBD,aAAcrF,KAAKuB,MAAM8D,aACzBnE,eAAgBlB,KAAKkB,iBAGvB,cAAC,GAAD,CACEgF,UAAWlG,KAAKuB,MAAM2E,UACtBJ,YAAa9F,KAAK8F,YAClBC,aAAc/F,KAAK+F,aACnB7E,eAAgBlB,KAAKkB,eACrBiD,SAAUnE,KAAKuB,MAAM4C,iB,GArGTtD,aCsCT4F,GA1Cf,uKACY,IAAD,EAOHzG,KAAKC,MAAMyG,SALbvG,EAFK,EAELA,IACAwG,EAHK,EAGLA,aACAzB,EAJK,EAILA,MACA0B,EALK,EAKLA,aACAC,EANK,EAMLA,cAEF,OACE,+BACE,6BAAK1G,IACL,6BAAKwG,IACL,6BAAKzB,IACL,6BAAK0B,IACL,6BAAKC,IACL,+BACE,wBACErG,QAASR,KAAKC,MAAM6G,YAAYpG,KAAKV,KAAMG,GAC3Cb,UAAWC,IAAOoB,SAFpB,oBAMA,wBACEH,QAASR,KAAKC,MAAM8G,aAAarG,KAAKV,KAAMA,KAAKC,MAAMyG,UACvDpH,UAAWC,IAAOoB,SAFpB,4BAvBV,GAAkCE,aCkDnBmG,G,uKAhDH,IAAD,SACP,OACE,gCACE,2CACY,IACV,uBACEjG,KAAK,SACLC,MAAM,MACN1B,UAAWC,IAAO0B,MAClBT,QAAS,kBAAM,EAAKP,MAAMiB,uBAG9B,wBAAO5B,UAAWC,IAAO4B,MAAzB,UACE,gCACE,+BACE,oCACA,sCACA,uCACA,+CACA,gDACA,8CAGJ,0CACGnB,KAAKC,MAAMgH,iBADd,aACG,EAAsB5F,KAAI,SAACqF,EAAUQ,GAAX,OACzB,cAAC,GAAD,CAEER,SAAUA,EACVI,YAAa,EAAK7G,MAAM6G,YACxBC,aAAc,EAAK9G,MAAM8G,cAHpBG,kB,GA3BGrG,aCsHTsG,GAvHf,4MACE5F,MAAQ,CACNpB,IAAK,GACLwG,aAAc,GACdzB,MAAO,GACP0B,aAAc,GACdC,cAAe,IANnB,EAeErF,gBAAkB,WAChB,EAAKC,SAAS,CACZtB,IAAK,GACLE,OAAQ,GACRD,eAAgB,GAChBE,mBAAoB,GACpBC,iBAAkB,KAEpB,EAAKN,MAAMiB,kBAvBf,EA0BEQ,WAAa,SAAC0F,GACZ,EAAK3F,SAAS,CACZtB,IAAKiH,EAAajH,IAClBwG,aAAcS,EAAaT,aAC3BzB,MAAOkC,EAAalC,MACpB0B,aAAcQ,EAAaR,aAAaS,WACxCR,cAAeO,EAAaP,iBAhClC,EAoCEjF,SAAW,SAACC,GACVA,EAAEC,iBACE,EAAKP,MAAMpB,IACb,EAAKF,MAAMqH,eACT,EAAK/F,MAAMpB,IACX,EAAKoB,MAAMoF,aACX,EAAKpF,MAAM2D,MACX,EAAK3D,MAAMqF,aACX,EAAKrF,MAAMsF,eAGb,EAAK5G,MAAMsH,YACT,EAAKhG,MAAMoF,aACX,EAAKpF,MAAM2D,MACX,EAAK3D,MAAMqF,aACX,EAAKrF,MAAMsF,eAGf,EAAKrF,mBAtDT,EAyDES,SAAW,SAACJ,GAAD,OAAO,EAAKJ,SAAL,eAAiBI,EAAEK,OAAOC,KAAON,EAAEK,OAAOlB,SAzD9D,kEAUQhB,KAAKC,MAAMmH,cACbpH,KAAK0B,WAAW1B,KAAKC,MAAMmH,gBAXjC,+BA4DI,OACE,gCACE,6BAAKpH,KAAKuB,MAAMpB,IAAM,gBAAkB,qBACxC,uBAAMyB,SAAU5B,KAAK4B,SAArB,UACE,uBAAOb,KAAK,SAASoB,KAAK,MAAMnB,MAAOhB,KAAKuB,MAAMpB,MAClD,uBACEY,KAAK,OACLoB,KAAK,eACL7C,UAAWC,IAAO0B,MAClBmB,YAAY,mBACZpB,MAAOhB,KAAKuB,MAAMoF,aAClB1E,SAAUjC,KAAKiC,WAEjB,uBACElB,KAAK,OACLoB,KAAK,QACL7C,UAAWC,IAAO0B,MAClBmB,YAAY,YACZpB,MAAOhB,KAAKuB,MAAM2D,MAClBjD,SAAUjC,KAAKiC,WAEjB,uBACElB,KAAK,OACLoB,KAAK,eACL7C,UAAWC,IAAO0B,MAClBmB,YAAY,mCACZpB,MAAOhB,KAAKuB,MAAMqF,aAClB3E,SAAUjC,KAAKiC,WAEjB,uBACElB,KAAK,OACLoB,KAAK,gBACL7C,UAAWC,IAAO0B,MAClBmB,YAAY,qBACZpB,MAAOhB,KAAKuB,MAAMsF,cAClB5E,SAAUjC,KAAKiC,WAGjB,uBAAOlB,KAAK,SAASC,MAAM,SAAS1B,UAAWC,IAAO0B,QACtD,uBACEF,KAAK,SACLC,MAAM,SACN1B,UAAWC,IAAO0B,MAClBT,QAASR,KAAKwB,4BAvG1B,GAAiCX,aCHpB2G,GAAwB,wBACxBC,GAAyB,yBACzBC,GAAwB,wBAGxBC,GAAwB,wBACxBC,GAAyB,yBACzBC,GAAwB,wBAGxBC,GAAuB,wBACvBC,GAAwB,yBACxBC,GAAuB,wBAGvBC,GAAwB,yBACxBC,GAAyB,0BACzBC,GAAwB,yBCF/BlF,GAAM,qDAiBCmF,GAAe,kBAAM,SAACjF,GAEjC,OADAA,EAdiC,CACjCpC,KAAMyG,KAcCpE,MAAMH,IACVI,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLL,EAdqC,CACzCpC,KAAM0G,GACNhE,QAYkCD,OAE/BE,OAAM,WACLP,EAZ6B,CACjCpC,KAAM2G,UA6BKH,GAAc,SACzBZ,EACAzB,EACA0B,EACAC,GAJyB,OAKtB,SAAC1D,GACJA,EAnBiC,CACjCpC,KAAM4G,KAmBN,IAAMhE,EAAW,CAAEgD,eAAczB,QAAO0B,eAAcC,iBAChDjD,EAAiB,CACrBC,OAAQ,OACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAGvB,OAAOP,MAAMH,GAAKW,GACfP,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLL,EA1BqC,CACzCpC,KAAM6G,GACNnE,QAwBkCD,OAE/BH,MAAK,kBAAMF,EAASiF,SACpB1E,OAAM,WACLP,EAzB6B,CACjCpC,KAAM8G,UA2CKf,GAAc,SAAC3G,GAAD,OAAS,SAACgD,GACnCA,EAdiC,CACjCpC,KAAM+G,KAcN,IAAMnE,EAAW,CAAExD,OACbyD,EAAiB,CACrBC,OAAQ,SACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAGvB,OAAOP,MAAM,GAAD,OAAIH,GAAJ,YAAW9C,GAAOyD,GAC3BP,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLL,EArBqC,CACzCpC,KAAMgH,GACNtE,QAmBkCtD,OAE/BkD,MAAK,kBAAMF,EAASiF,SACpB1E,OAAM,WACLP,EApB6B,CACjCpC,KAAMiH,UAsCKjB,GAAe,SAC1B5G,EACAwG,EACAzB,EACA0B,EACAC,GAL0B,OAMvB,SAAC1D,GACJA,EApBkC,CAClCpC,KAAMkH,KAqBN,IAAMtE,EAAW,CAAExD,MAAKwG,eAAczB,QAAO0B,eAAcC,iBACrDjD,EAAiB,CACrBC,OAAQ,MACRC,QAAS,CAAE,eAAgB,oBAC3BC,KAAMC,KAAKC,UAAUN,IAGvB,OAAOP,MAAM,GAAD,OAAIH,GAAJ,YAAW9C,GAAOyD,GAC3BP,MAAK,SAACC,GAAD,OAAUA,EAAKC,UACpBF,MAAK,SAACG,GACLL,EA5BsC,CAC1CpC,KAAMmH,GACNzE,QA0BmCD,OAEhCH,MAAK,kBAAMF,EAASiF,SACpB1E,OAAM,WACLP,EA3B8B,CAClCpC,KAAMoH,UCvHFnB,G,4MACJzF,MAAQ,CACN6F,aAAc,KACdjD,UAAU,G,EAQZjD,eAAiB,WACf,EAAKO,SAAS,CACZ0C,UAAW,EAAK5C,MAAM4C,SACtBiD,aAAc,OAEhBhD,OAAOC,SAAS,EAAG,I,EAIrB0C,aAAe,SAACL,GACd,EAAKjF,SAAS,CACZ2F,aAAcV,EACdvC,UAAU,IAEZC,OAAOC,SAAS,EAAG,I,kEAlBnBrE,KAAKC,MAAMmI,iB,+BAsBX,OACE,qBAAK9I,UAAWC,IAAO+E,KAAvB,SACGtE,KAAKuB,MAAM4C,SACV,cAAC,GAAD,CACEoD,YAAavH,KAAKC,MAAMsH,YACxBD,eAAgBtH,KAAKC,MAAMqH,eAC3BF,aAAcpH,KAAKuB,MAAM6F,aACzBlG,eAAgBlB,KAAKkB,iBAGvB,cAACmH,GAAD,CACEpB,UAAWjH,KAAKC,MAAMgH,UACtBH,YAAa9G,KAAKC,MAAM6G,YACxBC,aAAc/G,KAAK+G,aACnB7F,eAAgBlB,KAAKkB,eACrBiD,SAAUnE,KAAKuB,MAAM4C,iB,GA5CTtD,aA2ET0D,gBAJS,SAAChD,GAAD,MAAY,CAClC0F,UAAW1F,EAAM0F,UAAUzC,SApBF,SAACrB,GAAD,MAAe,CACxCiF,aAAc,kBAAMjF,EAASmF,OAC7BxB,YAAa,SAAC3G,GAAD,OAASgD,EAASoF,GAAmBpI,KAClDoH,YAAa,SAACZ,EAAczB,EAAO0B,EAAcC,GAApC,OACX1D,EACEqF,GAAmB7B,EAAczB,EAAO0B,EAAcC,KAE1DS,eAAgB,SAACnH,EAAKwG,EAAczB,EAAO0B,EAAcC,GAAzC,OACd1D,EACEsF,GACEtI,EACAwG,EACAzB,EACA0B,EACAC,QASOtC,CAA6CyC,IC3E7C0B,OAVf,WACI,OACI,8BACI,gD,QC+BGC,OAvBf,WACE,OACE,cAAC,IAAD,UACE,qBAAKrJ,UAAU,MAAf,SACE,sBAAKA,UAAWC,IAAOqJ,QAAvB,UACE,cAAC,EAAD,IACA,sBAAKtJ,UAAWC,IAAOsJ,YAAvB,UACE,cAAC,EAAD,IACA,eAAC,KAAD,WACE,cAAC,KAAD,CAAOC,KAAK,gBAAgBC,UAAWC,IACvC,cAAC,KAAD,CAAOF,KAAK,WAAWC,UAAW7E,IAClC,cAAC,KAAD,CAAO4E,KAAK,gBAAgBC,UAAWlE,IACvC,cAAC,KAAD,CAAOiE,KAAK,aAAaC,UAAW5C,KACpC,cAAC,KAAD,CAAO2C,KAAK,aAAaC,UAAW/B,KACpC,cAAC,KAAD,CAAO8B,KAAK,eAAeC,UAAWL,mBCfrCO,GAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqB9F,MAAK,YAAkD,IAA/C+F,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,4BCQNO,GAAe,CACnBC,WAAW,EACXlF,KAAM,GACNmF,OAAO,GA6FMC,GA1FQ,WAAmC,IAAlCrI,EAAiC,uDAAzBkI,GAAcI,EAAW,uCACvD,OAAQA,EAAO9I,MACb,KAAKsB,EACH,OAAO,6BACFd,GADL,IAEEmI,WAAW,IAEf,KAAKpH,EACH,OAAO,6BACFf,GADL,IAEEmI,WAAW,EACXlF,KAAMqF,EAAOpG,UAEjB,KAAKlB,EACH,OAAO,6BACFhB,GADL,IAEEmI,WAAW,EACXC,OAAO,IAGX,KAAKnH,EACH,OAAO,6BACFjB,GADL,IAEEmI,WAAW,IAGf,KAAKjH,EACH,OAAO,6BACFlB,GADL,IAEEmI,WAAW,EACXlF,KAAK,GAAD,mBAAMjD,EAAMiD,MAAZ,CAAkBqF,EAAOpG,YAEjC,KAAKf,EACH,OAAO,6BACFnB,GADL,IAEEmI,WAAW,EACXC,OAAO,IAGX,KAAKhH,EACH,OAAO,6BACFpB,GADL,IAEEmI,WAAW,IAGf,KAAK9G,EACH,OAAO,6BACFrB,GADL,IAEEiD,KAAMjD,EAAMiD,KAAK4B,QAAO,SAAClG,GACvB,OAAOA,EAAO6E,KAAO8E,EAAOpG,aAGlC,KAAKZ,EACH,OAAO,6BACFtB,GADL,IAEEmI,WAAW,EACXC,OAAO,IAGX,KAAK7G,EACH,OAAO,6BACFvB,GADL,IAEEmI,WAAW,IAGf,KAAK3G,EACH,OAAO,6BACFxB,GADL,IAEEiD,KAAK,GAAD,mBACCjD,EAAMiD,MADP,CAEF,CACEO,GAAI8E,EAAO9E,GACX+E,KAAMD,EAAOC,KACbC,WAAW,OAKnB,KAAK/G,EACH,OAAO,6BACFzB,GADL,IAEEmI,WAAW,EACXC,OAAO,IAGX,QACE,OAAOpI,I,wCC5FTkI,GAAe,CACnBC,WAAW,EACXlF,KAAM,GACNmF,OAAO,GA6FMK,GA1FU,WAAmC,IAAlCzI,EAAiC,uDAAzBkI,GAAcI,EAAW,uCACzD,OAAQA,EAAO9I,MACb,KAAKyG,GACH,OAAO,6BACFjG,GADL,IAEEmI,WAAW,IAEf,KAAKjC,GACH,OAAO,6BACFlG,GADL,IAEEmI,WAAW,EACXlF,KAAMqF,EAAOpG,UAEjB,KAAKiE,GACH,OAAO,6BACFnG,GADL,IAEEmI,WAAW,EACXC,OAAO,IAGX,KAAKhC,GACH,OAAO,6BACFpG,GADL,IAEEmI,WAAW,IAGf,KAAK9B,GACH,OAAO,6BACFrG,GADL,IAEEmI,WAAW,EACXlF,KAAK,GAAD,mBAAMjD,EAAMiD,MAAZ,CAAkBqF,EAAOpG,YAEjC,KAAKoE,GACH,OAAO,6BACFtG,GADL,IAEEmI,WAAW,EACXC,OAAO,IAGX,KAAK7B,GACH,OAAO,6BACFvG,GADL,IAEEmI,WAAW,IAGf,KAAK3B,GACH,OAAO,6BACFxG,GADL,IAEEiD,KAAMjD,EAAMiD,KAAK4B,QAAO,SAACM,GACvB,OAAOA,EAAS3B,KAAO8E,EAAOpG,aAGpC,KAAKuE,GACH,OAAO,6BACFzG,GADL,IAEEmI,WAAW,EACXC,OAAO,IAGX,KAAK1B,GACH,OAAO,6BACF1G,GADL,IAEEmI,WAAW,IAGf,KAAKxB,GACH,OAAO,6BACF3G,GADL,IAEEiD,KAAK,GAAD,mBACCjD,EAAMiD,MADP,CAEF,CACEO,GAAI8E,EAAO9E,GACX+E,KAAMD,EAAOC,KACbC,WAAW,OAKnB,KAAK5B,GACH,OAAO,6BACF5G,GADL,IAEEmI,WAAW,EACXC,OAAO,IAGX,QACE,OAAOpI,I,oBC1FE0I,GATKC,0BAAgB,CAChCC,aAAcC,KACdhJ,QAASwI,GACTS,YAAaC,KACbpE,UAAWqE,KACXtD,UAAW+C,GACXQ,YAAaC,OCHXC,I,MAAa,CAACC,MAWdC,GATiB,WACrB,IAAMC,EAAWC,gCACjB,OAAOC,sBACLd,GACAY,EACAG,kBAAQC,kBAAe,WAAf,EAAmBP,MAIjBQ,GAEdC,IAASC,OACP,eAAC,IAAMC,WAAP,WACE,cAAC,IAAD,CAAUT,MAAOA,GAAjB,SACE,cAAC,GAAD,MAFJ,OAMAU,SAASC,eAAe,SAM1BtC,O","file":"static/js/main.6c0c67e4.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"main_info__1Fd05\",\"table\":\"main_table__3VlMu\",\"input\":\"main_input__3wphK\",\"btnStyle\":\"main_btnStyle__3VBsi\",\"btnStyleNew\":\"main_btnStyleNew__1DfNQ\",\"form\":\"main_form__1-41k\",\"title\":\"main_title__2OMFf\",\"building\":\"main_building__KP-oz\",\"Title\":\"main_Title__d-Fbm\",\"formShow\":\"main_formShow__1w6J-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"navbar_navbarContainer__11sRD\",\"logo\":\"navbar_logo__3ftqb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2E5Wi\",\"wrapper\":\"App_wrapper__2Zenk\",\"mainContent\":\"App_mainContent__1od5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__28mRj\"};","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './navbar.module.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n            <nav className={styles.navbarContainer}>\r\n                <div className={styles.logo}>\r\n                    <h3>\r\n                        CALDAR\r\n                    </h3>\r\n                </div>\r\n                <ul className={styles.navbarLinks}>\r\n                    <Link to=\"/Appointments\" >\r\n                        <li>\r\n                            Appointments\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/Boilers\">\r\n                        <li>\r\n                            Boilers\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/BoilersTypes\">\r\n                        <li>\r\n                            BoilersTypes\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/Buildings\">\r\n                        <li>\r\n                            Buildings\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/Customers\">\r\n                        <li>\r\n                            Customers\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/Technicians\">\r\n                        <li>\r\n                            Technicians\r\n                        </li>\r\n                    </Link>\r\n                </ul>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport styles from './header.module.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={styles.headerContainer}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React from 'react'\r\n\r\nfunction Appointment() {\r\n    return (\r\n        <div>\r\n            <h2>\r\n                appointment\r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Appointment\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class BoilerItem extends Component {\r\n\r\n  render() {\r\n    const {\r\n      _id,\r\n      maintainceRate,\r\n      typeId,\r\n      hourMaintainceCost,\r\n      hourEventualCost,\r\n    } = this.props.boiler;\r\n    return (\r\n      <tr>\r\n        <td>{_id}</td>\r\n        <td>{typeId}</td>\r\n        <td>{maintainceRate}</td>\r\n        <td>{hourMaintainceCost}</td>\r\n        <td>{hourEventualCost}</td>\r\n        <td>\r\n          <button\r\n            onClick={this.props.delBoiler.bind(this, _id)}\r\n            className={styles.btnStyle}\r\n          >\r\n            delete\r\n          </button>\r\n          <button\r\n            onClick={this.props.editBoiler.bind(this, this.props.boiler)}\r\n            className={styles.btnStyle}\r\n          >\r\n            edit\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nBoilerItem.propTypes = {\r\n  boiler: PropTypes.object.isRequired,\r\n  delBoiler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BoilerItem;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BoilerItem from \"./BoilerItem\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass BoilersList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          Boilers{\" \"}\r\n          <input\r\n            type=\"button\"\r\n            value=\"New\"\r\n            className={styles.input}\r\n            onClick={() => this.props.handleShowForm()}\r\n          />\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>id</th>\r\n              <th>Type</th>\r\n              <th>Maintaince</th>\r\n              <th>Maintaince Cost</th>\r\n              <th>Eventual Cost</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.boilers?.map((boiler) => (\r\n              <BoilerItem\r\n                key={boiler._id}\r\n                boiler={boiler}\r\n                editBoiler={this.props.editBoiler}\r\n                delBoiler={this.props.delBoiler}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nBoilersList.propTypes = {\r\n  boilers: PropTypes.array.isRequired,\r\n  delBoiler: PropTypes.func.isRequired,\r\n  editBoiler: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  showForm: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default BoilersList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class AddBoiler extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    typeId: \"\",\r\n    maintainceRate: \"\",\r\n    hourMaintainceCost: \"\",\r\n    hourEventualCost: \"\",\r\n};\r\n\r\n  componentDidMount() {\r\n    if (this.props.boilerEdit) {\r\n      this.handleEdit(this.props.boilerEdit);\r\n    }\r\n  }\r\n\r\n  handleCleanForm = () => {\r\n    this.setState({\r\n      _id: \"\",\r\n      typeId: \"\",\r\n      maintainceRate: \"\",\r\n      hourMaintainceCost: \"\",\r\n      hourEventualCost: \"\",\r\n    });\r\n    this.props.handleShowForm();\r\n  };\r\n\r\n  handleEdit = (boilerEdit) => {\r\n    this.setState({\r\n      _id: boilerEdit._id,\r\n      typeId: boilerEdit.typeId,\r\n      maintainceRate: boilerEdit.maintainceRate,\r\n      hourMaintainceCost: boilerEdit.hourMaintainceCost,\r\n      hourEventualCost: boilerEdit.hourEventualCost,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state._id) {\r\n      this.props.updateBoiler(\r\n        this.state._id,\r\n        this.state.typeId,\r\n        this.state.maintainceRate,\r\n        this.state.hourMaintainceCost,\r\n        this.state.hourEventualCost\r\n      );\r\n    } else {\r\n      this.props.addBoiler(\r\n        this.state.typeId,\r\n        this.state.maintainceRate,\r\n        this.state.hourMaintainceCost,\r\n        this.state.hourEventualCost\r\n      );\r\n    }\r\n    this.handleCleanForm();\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>{this.state._id ? \"Edit boiler\" : \"Add new boiler\"}</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n        <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"typeId\"\r\n            className={styles.input}\r\n            placeholder=\"Type boiler...\"\r\n            value={this.state.typeId}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"maintainceRate\"\r\n            className={styles.input}\r\n            placeholder=\"Maintaince rate ...\"\r\n            value={this.state.maintainceRate}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"hourMaintainceCost\"\r\n            className={styles.input}\r\n            placeholder=\"Hour maintaince cost ...\"\r\n            value={this.state.hourMaintainceCost}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"hourEventualCost\"\r\n            className={styles.input}\r\n            placeholder=\"Hour maintaince cost ...\"\r\n            value={this.state.hourEventualCost}\r\n            onChange={this.onChange}\r\n          />\r\n\r\n          <input type=\"submit\" value=\"Submit\" className={styles.input} />\r\n          <input\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            className={styles.input}\r\n            onClick={this.handleCleanForm}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddBoiler.propTypes = {\r\n  addBoiler: PropTypes.func.isRequired,\r\n  updateBoiler: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  boilerEdit: PropTypes.object,\r\n};\r\n\r\nexport default AddBoiler;","//GET DATA\r\nexport const GET_BOILER_FETCHING = 'GET_BOILER_FETCHING';\r\nexport const GET_BOILER_FULFILLED = 'GET_BOILER_FULFILLED';\r\nexport const GET_BOILER_REJECTED = 'GET_BOILER_REJECTED';\r\n\r\n//ADD DATA\r\nexport const ADD_BOILER_FETCHING = 'ADD_BOILER_FETCHING';\r\nexport const ADD_BOILER_FULFILLED = 'ADD_BOILER_FULFILLED';\r\nexport const ADD_BOILER_REJECTED = 'ADD_BOILER_REJECTED';\r\n\r\n//DELETE DATA\r\nexport const DEL_BOILER_FETCHING ='DEL_BOILER_FETCHING';\r\nexport const DEL_BOILER_FULFILLED ='DEL_BOILER_FULFILLED';\r\nexport const DEL_BOILER_REJECTED ='DEL_BOILER_REJECTED';\r\n\r\n//EDIT DATA\r\nexport const EDIT_BOILER_FETCHING ='EDIT_BOILER_FETCHING';\r\nexport const EDIT_BOILER_FULFILLED ='EDIT_BOILER_FULFILLED';\r\nexport const EDIT_BOILER_REJECTED ='EDIT_BOILER_REJECTED';","import {\r\n  GET_BOILER_FETCHING,\r\n  GET_BOILER_FULFILLED,\r\n  GET_BOILER_REJECTED,\r\n  ADD_BOILER_FETCHING,\r\n  ADD_BOILER_FULFILLED,\r\n  ADD_BOILER_REJECTED,\r\n  DEL_BOILER_FETCHING,\r\n  DEL_BOILER_FULFILLED,\r\n  DEL_BOILER_REJECTED,\r\n  EDIT_BOILER_FETCHING,\r\n  EDIT_BOILER_FULFILLED,\r\n  EDIT_BOILER_REJECTED,\r\n} from \"../types/types-boilers\";\r\n\r\n//DECLARATE CONST AND IMPORT API\r\nconst URL = \"https://app-caldar-gm4.herokuapp.com/api/boilers\";\r\n\r\n//ACTION TO GET BOILER DATA\r\n\r\nconst getBoilerFetching = () => ({\r\n  type: GET_BOILER_FETCHING,\r\n});\r\n\r\nconst getBoilerFulfilled = (payload) => ({\r\n  type: GET_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst getBoilerRejected = () => ({\r\n  type: GET_BOILER_REJECTED,\r\n});\r\n\r\nexport const getBoilers = () => (dispatch) => {\r\n  dispatch(getBoilerFetching());\r\n  return fetch(URL)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(getBoilerFulfilled(response));\r\n    })\r\n    .catch(() => {\r\n      dispatch(getBoilerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO ADD BOILER DATA\r\nconst addBoilerFetching = () => ({\r\n  type: ADD_BOILER_FETCHING,\r\n});\r\n\r\nconst addBoilerFulfilled = (payload) => ({\r\n  type: ADD_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst addBoilerRejected = () => ({\r\n  type: ADD_BOILER_REJECTED,\r\n});\r\n\r\nexport const addBoiler = (\r\n  typeId,\r\n  maintainceRate,\r\n  hourMaintainceCost,\r\n  hourEventualCost\r\n) => (dispatch) => {\r\n  dispatch(addBoilerFetching());\r\n  const dataSend = {\r\n    typeId,\r\n    maintainceRate,\r\n    hourMaintainceCost,\r\n    hourEventualCost,\r\n  };\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(URL, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(addBoilerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getBoilers()))\r\n    .catch(() => {\r\n      dispatch(addBoilerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO DELETE BOILER DATA\r\n\r\nconst delBoilerFetching = () => ({\r\n  type: DEL_BOILER_FETCHING,\r\n});\r\n\r\nconst delBoilerFulfilled = (payload) => ({\r\n  type: DEL_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst delBoilerRejected = () => ({\r\n  type: DEL_BOILER_REJECTED,\r\n});\r\n\r\nexport const delBoiler = (_id) => (dispatch) => {\r\n  dispatch(delBoilerFetching());\r\n  const dataSend = { _id };\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(delBoilerFulfilled(_id));\r\n    })\r\n    .then(() => dispatch(getBoilers()))\r\n    .catch(() => {\r\n      dispatch(delBoilerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO EDIT BOILER DATA\r\n\r\nconst editBoilerFetching = () => ({\r\n  type: EDIT_BOILER_FETCHING,\r\n});\r\n\r\nconst editBoilerFulfilled = (payload) => ({\r\n  type: EDIT_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst editBoilerRejected = () => ({\r\n  type: EDIT_BOILER_REJECTED,\r\n});\r\n\r\nexport const editBoiler = (\r\n  _id,\r\n  typeId,\r\n  maintainceRate,\r\n  hourMaintainceCost,\r\n  hourEventualCost\r\n) => (dispatch) => {\r\n  dispatch(editBoilerFetching());\r\n\r\n  const dataSend = {\r\n    _id,\r\n    typeId,\r\n    maintainceRate,\r\n    hourMaintainceCost,\r\n    hourEventualCost,\r\n  };\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(editBoilerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getBoilers()))\r\n    .catch(() => {\r\n      dispatch(editBoilerRejected());\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport BoilersList from \"./BoilersList\";\r\nimport AddBoiler from \"./AddBoiler\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getBoilers as getBoilersActions,\r\n  delBoiler as delBoilerActions,\r\n  addBoiler as addBoilerActions,\r\n  editBoiler as updateBoilerActions,\r\n} from \"../../redux/actions/boilersActions\";\r\n\r\nclass Boilers extends Component {\r\n  state = {\r\n    boilerEdit: null,\r\n    showForm: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getBoilers();\r\n  }\r\n\r\n  // Show form\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      boilerEdit: null,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // Edit Boiler\r\n  editBoiler = (boiler) => {\r\n    this.setState({\r\n      boilerEdit: boiler,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n          <AddBoiler\r\n            addBoiler={this.props.addBoiler}\r\n            updateBoiler={this.props.updateBoiler}\r\n            boilerEdit={this.state.boilerEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n        ) : (\r\n          <BoilersList\r\n            boilers={this.props.boilers}\r\n            delBoiler={this.props.delBoiler}\r\n            editBoiler={this.editBoiler}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getBoilers: () => dispatch(getBoilersActions()),\r\n  delBoiler: (_id) => dispatch(delBoilerActions(_id)),\r\n  addBoiler: (typeId, maintainceRate, hourMaintainceCost, hourEventualCost) =>\r\n    dispatch(\r\n      addBoilerActions(\r\n        typeId,\r\n        maintainceRate,\r\n        hourMaintainceCost,\r\n        hourEventualCost\r\n      )\r\n    ),\r\n  updateBoiler: (\r\n    _id,\r\n    typeId,\r\n    maintainceRate,\r\n    hourMaintainceCost,\r\n    hourEventualCost\r\n  ) =>\r\n    dispatch(\r\n      updateBoilerActions(\r\n        _id,\r\n        typeId,\r\n        maintainceRate,\r\n        hourMaintainceCost,\r\n        hourEventualCost\r\n      )\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boilers: state.boilers.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Boilers);\r\n","import React from 'react'\r\n\r\nfunction BoilersTypes() {\r\n    return (\r\n        <div>\r\n            <h2>\r\n                boilersTypes\r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default BoilersTypes\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../../layout/main/main.module.css'\r\n\r\n export class AddBuilding extends Component {\r\n     state = {\r\n         id:'',\r\n         boilerId:'',\r\n         businessName:'',\r\n         email:'',\r\n         phone:'',\r\n         adress:'',\r\n     };\r\n\r\n     componentDidMount() {\r\n        if (this.props.buildingEdit) {\r\n          this.handleEdit(this.props.buildingEdit);\r\n        }\r\n      }\r\n\r\n      handleCleanForm = () => {\r\n        this.setState({\r\n        id: \"\",\r\n        boilerId: \"\",\r\n        businessName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        adress: \"\",\r\n        });\r\n        this.props.handleShowForm();\r\n      }\r\n    \r\n      handleEdit = (buildingEdit) => {\r\n        this.setState({\r\n        id: buildingEdit.id,\r\n        boilerId: buildingEdit.boilerId,\r\n        businessName: buildingEdit.businessName,\r\n        email: buildingEdit.email,\r\n        phone: buildingEdit.phone,\r\n        adress: buildingEdit.adress,\r\n        });\r\n      };\r\n\r\n     onSubmit = (e) => {\r\n         e.preventDefault();\r\n         if (this.state.id) {\r\n            this.props.updateBuilding(\r\n                this.state.id,\r\n                this.state.boilerId,\r\n                this.state.businessName,\r\n                this.state.email,\r\n                this.state.phone,\r\n                this.state.adress\r\n            );\r\n          } else {\r\n         this.props.addBuilding(\r\n            this.state.boilerId,\r\n            this.state.businessName,\r\n            this.state.email,\r\n            this.state.phone,\r\n            this.state.adress\r\n        );\r\n         }\r\n         this.setState({\r\n            id: \"\",\r\n             boilerId:\"\",\r\n             businessName:\"\",\r\n             email:\"\",\r\n             phone:\"\",\r\n             adress:\"\",\r\n            });\r\n     };\r\n\r\n     onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    render(){\r\n        return(\r\n            <div className={styles.formShow}>\r\n                <h3 className={styles.title}>\r\n                {this.state.id ? \"Edit building\" : \"Add new Building\"}\r\n                </h3>\r\n                <form onSubmit ={this.onSubmit} className={styles.form}>\r\n                    <input type=\"hidden\" name=\"id\" value={this.state.id} />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"boilerId\"\r\n                    className={styles.inputStyle}\r\n                    placeholder=\"Add Boiler ID\"\r\n                    value={this.state.boilerId}\r\n                    onChange={this.onChange}\r\n                    />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"businessName\"\r\n                    className={styles.inputStyle}\r\n                    placeholder=\"Add Business Name\"\r\n                    value={this.state.businessName}\r\n                    onChange={this.onChange}\r\n                    />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    className={styles.inputStyle}\r\n                    placeholder=\"Add e-mail\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                    />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"adress\"\r\n                    className={styles.inputStyle}\r\n                    placeholder=\"Add adress...\"\r\n                    value={this.state.adress}\r\n                    onChange={this.onChange}\r\n                    />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    className={styles.inputStyle}\r\n                    placeholder=\"Add phone...\"\r\n                    value={this.state.phone}\r\n                    onChange={this.onChange}\r\n                    />\r\n\r\n                    <input \r\n                    type=\"button\"\r\n                    value= \"Cancel\"\r\n                    className={styles.inputStyle}\r\n                    onClick={this.handleCleanForm}\r\n                    />\r\n                    <input\r\n                    type=\"submit\"\r\n                    value=\"submit\"\r\n                    className={styles.inputStyle}\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//proptypes\r\nAddBuilding.propTypes = {\r\n   addBuilding: PropTypes.func.isRequired,\r\n   updateBuilding: PropTypes.func.isRequired,\r\n   handleShowForm: PropTypes.func.isRequired,\r\n   buildingEdit: PropTypes.object,\r\n  }\r\n\r\nexport default AddBuilding ","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../../layout/main/main.module.css'\r\nclass BuildingItem extends Component {\r\n\r\n \r\n    render() {\r\n        const  {id, boilerId, businessName, email, phone, adress\r\n        } = this.props.building;\r\n        return (\r\n                   <tr>\r\n                        <td>\r\n                            {boilerId}\r\n                        </td>\r\n                        <td>\r\n                            {businessName}\r\n                        </td>\r\n                        <td>\r\n                            {email} \r\n                        </td>\r\n                        <td>\r\n                            {phone} \r\n                        </td>\r\n                        <td>\r\n                            {adress}\r\n                        </td>\r\n                        <td>\r\n                            <button \r\n                                onClick={this.props.delBuilding.bind(this, id)} \r\n                                className={styles.btnStyle}>\r\n                                    x\r\n                            </button>\r\n                            <button \r\n                                onClick={this.props.editBuilding.bind(this, this.props.building)}\r\n                                className={styles.btnStyle}>\r\n                                    Edit\r\n                            </button>\r\n                        </td>\r\n                   </tr>\r\n        )\r\n    }\r\n}\r\n\r\n//proptypes\r\nBuildingItem.propTypes = {\r\n    building: PropTypes.object.isRequired,\r\n    delBuilding: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default BuildingItem;\r\n","import React, {Component} from 'react';\r\nimport BuildingItem from './BuildingItem';\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass BuildingsList extends Component{\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n          <h1 className={styles.title}>\r\n            Buildings{\" \"}\r\n            <input\r\n            type=\"button\"\r\n            value=\"+\"\r\n            className={styles.btnStyleNew}\r\n            onClick={() =>this.props.handleShowForm()}\r\n            />\r\n          </h1>\r\n          <table className={styles.table}>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>Business Name</th>\r\n                <th>E-mail</th>\r\n                <th>Phone</th>\r\n                <th>Address</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n          <tbody>\r\n        {this.props.buildings.map((building) => (\r\n          <BuildingItem\r\n            key={building.id}\r\n            building={building}\r\n            delBuilding={this.props.delBuilding}\r\n            editBuilding={this.props.editBuilding}\r\n          />\r\n        ))}\r\n        </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//proptypes\r\nBuildingsList.propTypes = {\r\n  buildings: PropTypes.array.isRequired,\r\n  editBuilding: PropTypes.func.isRequired,\r\n  delBuilding: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  showForm: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default BuildingsList;\r\n","import React, { Component } from 'react';\r\nimport AddBuilding from './AddBuilding';\r\nimport BuildingsList from './BuildingsList';\r\nimport { v4 as uuidv4 } from 'uuid';\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\n\r\n//Set Building Object\r\nclass Buildings extends Component {\r\n  state = {\r\n    buildings: [],\r\n    buildingEdit: null,\r\n    showForm: false,\r\n  };\r\n\r\n\r\n//Get Data from JSON.Files\r\ncomponentDidMount(){\r\n  const getBuilding = require(\"../../data/buildingData.json\");\r\n  this.setState({buildings: getBuilding});\r\n}\r\n\r\n// Show form\r\nhandleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      buildingEdit: null,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n// Edit Building\r\neditBuilding = (building) => {\r\n  this.setState({\r\n    buildingEdit: building,\r\n    showForm: true,\r\n  });\r\n  window.scrollTo(0, 0);\r\n};\r\n\r\n// Update Customer\r\nupdateBuilding = (\r\n  id,\r\n  boilerId,\r\n  businessName,\r\n  email,\r\n  phone,\r\n  adress\r\n) => {\r\n  \r\n  this.setState({\r\n    buildings: this.state.buildings.map((building) => {\r\n      if (building.id === id) {\r\n        building.boilerId = boilerId;\r\n        building.email = email;\r\n        building.businessName = businessName;\r\n        building.adress = adress;\r\n        building.phone = phone;\r\n      }\r\n      return building;\r\n    }),\r\n    showForm: false,\r\n  });\r\n};\r\n\r\n//Delete building\r\n\r\ndelBuilding = (id) =>{\r\n  this.setState({ \r\n      buildings: [\r\n          ...this.state.buildings.filter((building) => building.id !==id),\r\n            ],\r\n        showForm: false,\r\n    });\r\n};\r\n\r\n//Add Building\r\n\r\nAddBuilding = (boilerId, businessName,email,phone,adress) =>{\r\n  const newBuilding ={\r\n    id: uuidv4(),\r\n    boilerId,\r\n    businessName,\r\n    email,\r\n    phone,\r\n    adress\r\n  };\r\n  this.setState({ \r\n      buildings: [...this.state.buildings, newBuilding],\r\n    showForm: false,\r\n    });\r\n};\r\n\r\nrender() {\r\n    return (\r\n      <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n          <AddBuilding\r\n            AddBuilding={this.AddBuilding}\r\n            updateBuilding={this.updateBuilding}\r\n            buildingEdit={this.state.buildingEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n        ) : (\r\n          <BuildingsList\r\n            buildings={this.state.buildings}\r\n            delBuilding={this.delBuilding}\r\n            editBuilding={this.editBuilding}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}  \r\n\r\nexport default Buildings;","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class CustomerItem extends Component {\r\n  render() {\r\n    const {\r\n      _id,\r\n      customerType,\r\n      email,\r\n      buildingsIds,\r\n      fiscalAddress,\r\n    } = this.props.customer;\r\n    return (\r\n      <tr>\r\n        <td>{_id}</td>\r\n        <td>{customerType}</td>\r\n        <td>{email}</td>\r\n        <td>{buildingsIds}</td>\r\n        <td>{fiscalAddress}</td>\r\n        <td>\r\n          <button\r\n            onClick={this.props.delCustomer.bind(this, _id)}\r\n            className={styles.btnStyle}\r\n          >\r\n            delete\r\n          </button>\r\n          <button\r\n            onClick={this.props.editCustomer.bind(this, this.props.customer)}\r\n            className={styles.btnStyle}\r\n          >\r\n            edit\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nCustomerItem.propTypes = {\r\n  customer: PropTypes.object.isRequired,\r\n  delCustomer: PropTypes.func.isRequired,\r\n  editCustomer: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CustomerItem;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CustomerItem from \"./CustomerItem\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass Customers extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          Customers{\" \"}\r\n          <input\r\n            type=\"button\"\r\n            value=\"New\"\r\n            className={styles.input}\r\n            onClick={() => this.props.handleShowForm()}\r\n          />\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>id</th>\r\n              <th>Type</th>\r\n              <th>Email</th>\r\n              <th>Buildings Ids</th>\r\n              <th>Fiscal address</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.customers?.map((customer, index) => (\r\n              <CustomerItem\r\n                key={index}\r\n                customer={customer}\r\n                delCustomer={this.props.delCustomer}\r\n                editCustomer={this.props.editCustomer}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nCustomers.propTypes = {\r\n  customers: PropTypes.array.isRequired,\r\n  delCustomer: PropTypes.func.isRequired,\r\n  editCustomer: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  showForm: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Customers;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class AddCustomer extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    customerType: \"\",\r\n    email: \"\",\r\n    buildingsIds: \"\",\r\n    fiscalAddress: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.customerEdit) {\r\n      this.handleEdit(this.props.customerEdit);\r\n    }\r\n  }\r\n\r\n  handleCleanForm = () => {\r\n    this.setState({\r\n      _id: \"\",\r\n      typeId: \"\",\r\n      maintainceRate: \"\",\r\n      hourMaintainceCost: \"\",\r\n      hourEventualCost: \"\",\r\n    });\r\n    this.props.handleShowForm();\r\n  };\r\n\r\n  handleEdit = (customerEdit) => {\r\n    this.setState({\r\n      _id: customerEdit._id,\r\n      customerType: customerEdit.customerType,\r\n      email: customerEdit.email,\r\n      buildingsIds: customerEdit.buildingsIds.toString(),\r\n      fiscalAddress: customerEdit.fiscalAddress,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state._id) {\r\n      this.props.updateCustomer(\r\n        this.state._id,\r\n        this.state.customerType,\r\n        this.state.email,\r\n        this.state.buildingsIds,\r\n        this.state.fiscalAddress\r\n      );\r\n    } else {\r\n      this.props.addCustomer(\r\n        this.state.customerType,\r\n        this.state.email,\r\n        this.state.buildingsIds,\r\n        this.state.fiscalAddress\r\n      );\r\n    }\r\n    this.handleCleanForm();\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>{this.state._id ? \"Edit customer\" : \"Add new customer\"}</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"customerType\"\r\n            className={styles.input}\r\n            placeholder=\"Type customer...\"\r\n            value={this.state.customerType}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            className={styles.input}\r\n            placeholder=\"Email ...\"\r\n            value={this.state.email}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"buildingsIds\"\r\n            className={styles.input}\r\n            placeholder=\"Buildings separated by commas...\"\r\n            value={this.state.buildingsIds}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"fiscalAddress\"\r\n            className={styles.input}\r\n            placeholder=\"Fiscal address ...\"\r\n            value={this.state.fiscalAddress}\r\n            onChange={this.onChange}\r\n          />\r\n\r\n          <input type=\"submit\" value=\"Submit\" className={styles.input} />\r\n          <input\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            className={styles.input}\r\n            onClick={this.handleCleanForm}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddCustomer.propTypes = {\r\n  addCustomer: PropTypes.func.isRequired,\r\n  updateCustomer: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  customerEdit: PropTypes.object,\r\n};\r\n\r\nexport default AddCustomer;\r\n","//GET DATA\r\nexport const GET_CUSTOMER_FETCHING = 'GET_CUSTOMER_FETCHING';\r\nexport const GET_CUSTOMER_FULFILLED = 'GET_CUSTOMER_FULFILLED';\r\nexport const GET_CUSTOMER_REJECTED = 'GET_CUSTOMER_REJECTED';\r\n\r\n//ADD DATA\r\nexport const ADD_CUSTOMER_FETCHING = 'ADD_CUSTOMER_FETCHING';\r\nexport const ADD_CUSTOMER_FULFILLED = 'ADD_CUSTOMER_FULFILLED';\r\nexport const ADD_CUSTOMER_REJECTED = 'ADD_CUSTOMER_REJECTED';\r\n\r\n//DELETE DATA\r\nexport const DEL_CUSTOMER_FETCHING ='DEL_CUSTOMER_FETCHING';\r\nexport const DEL_CUSTOMER_FULFILLED ='DEL_CUSTOMER_FULFILLED';\r\nexport const DEL_CUSTOMER_REJECTED ='DEL_CUSTOMER_REJECTED';\r\n\r\n//EDIT DATA\r\nexport const EDIT_CUSTOMER_FETCHING ='EDIT_CUSTOMER_FETCHING';\r\nexport const EDIT_CUSTOMER_FULFILLED ='EDIT_CUSTOMER_FULFILLED';\r\nexport const EDIT_CUSTOMER_REJECTED ='EDIT_CUSTOMER_REJECTED';","import {\r\n  GET_CUSTOMER_FETCHING,\r\n  GET_CUSTOMER_FULFILLED,\r\n  GET_CUSTOMER_REJECTED,\r\n  ADD_CUSTOMER_FETCHING,\r\n  ADD_CUSTOMER_FULFILLED,\r\n  ADD_CUSTOMER_REJECTED,\r\n  DEL_CUSTOMER_FETCHING,\r\n  DEL_CUSTOMER_FULFILLED,\r\n  DEL_CUSTOMER_REJECTED,\r\n  EDIT_CUSTOMER_FETCHING,\r\n  EDIT_CUSTOMER_FULFILLED,\r\n  EDIT_CUSTOMER_REJECTED,\r\n} from \"../types/types-customers\";\r\n\r\n//DECLARATE CONST AND IMPORT API\r\nconst URL = \"https://app-caldar-gm4.herokuapp.com/api/customers\";\r\n\r\n//ACTION TO GET CUSTOMER DATA\r\n\r\nconst getCustomerFetching = () => ({\r\n  type: GET_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst getCustomerFulfilled = (payload) => ({\r\n  type: GET_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst getCustomerRejected = () => ({\r\n  type: GET_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const getCustomers = () => (dispatch) => {\r\n  dispatch(getCustomerFetching());\r\n  return fetch(URL)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(getCustomerFulfilled(response));\r\n    })\r\n    .catch(() => {\r\n      dispatch(getCustomerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO ADD CUSTOMER DATA\r\nconst addCustomerFetching = () => ({\r\n  type: ADD_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst addCustomerFulfilled = (payload) => ({\r\n  type: ADD_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst addCustomerRejected = () => ({\r\n  type: ADD_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const addCustomer = (\r\n  customerType,\r\n  email,\r\n  buildingsIds,\r\n  fiscalAddress\r\n) => (dispatch) => {\r\n  dispatch(addCustomerFetching());\r\n  const dataSend = { customerType, email, buildingsIds, fiscalAddress };\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(URL, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(addCustomerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getCustomers()))\r\n    .catch(() => {\r\n      dispatch(addCustomerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO DELETE CUSTOMER DATA\r\n\r\nconst delCustomerFetching = () => ({\r\n  type: DEL_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst delCustomerFulfilled = (payload) => ({\r\n  type: DEL_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst delCustomerRejected = () => ({\r\n  type: DEL_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const delCustomer = (_id) => (dispatch) => {\r\n  dispatch(delCustomerFetching());\r\n  const dataSend = { _id };\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(delCustomerFulfilled(_id));\r\n    })\r\n    .then(() => dispatch(getCustomers()))\r\n    .catch(() => {\r\n      dispatch(delCustomerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO EDIT CUSTOMER DATA\r\n\r\nconst editCustomerFetching = () => ({\r\n  type: EDIT_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst editCustomerFulfilled = (payload) => ({\r\n  type: EDIT_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst editCustomerRejected = () => ({\r\n  type: EDIT_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const editCustomer = (\r\n  _id,\r\n  customerType,\r\n  email,\r\n  buildingsIds,\r\n  fiscalAddress\r\n) => (dispatch) => {\r\n  dispatch(editCustomerFetching());\r\n\r\n  const dataSend = { _id, customerType, email, buildingsIds, fiscalAddress };\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(editCustomerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getCustomers()))\r\n    .catch(() => {\r\n      dispatch(editCustomerRejected());\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport CustomersList from \"./CustomersList\";\r\nimport AddCustomer from \"./AddCustomer\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCustomers as getCustomersActions,\r\n  delCustomer as delCustomerActions,\r\n  addCustomer as addCustomerActions,\r\n  editCustomer as updateCustomerActions,\r\n} from \"../../redux/actions/customersActions\";\r\n\r\nclass Customers extends Component {\r\n  state = {\r\n    customerEdit: null,\r\n    showForm: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getCustomers();\r\n  }\r\n\r\n  // Show form\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      customerEdit: null,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // Edit Customer\r\n  editCustomer = (customer) => {\r\n    this.setState({\r\n      customerEdit: customer,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n          <AddCustomer\r\n            addCustomer={this.props.addCustomer}\r\n            updateCustomer={this.props.updateCustomer}\r\n            customerEdit={this.state.customerEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n        ) : (\r\n          <CustomersList\r\n            customers={this.props.customers}\r\n            delCustomer={this.props.delCustomer}\r\n            editCustomer={this.editCustomer}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCustomers: () => dispatch(getCustomersActions()),\r\n  delCustomer: (_id) => dispatch(delCustomerActions(_id)),\r\n  addCustomer: (customerType, email, buildingsIds, fiscalAddress) =>\r\n    dispatch(\r\n      addCustomerActions(customerType, email, buildingsIds, fiscalAddress)\r\n    ),\r\n  updateCustomer: (_id, customerType, email, buildingsIds, fiscalAddress) =>\r\n    dispatch(\r\n      updateCustomerActions(\r\n        _id,\r\n        customerType,\r\n        email,\r\n        buildingsIds,\r\n        fiscalAddress\r\n      )\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  customers: state.customers.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Customers);\r\n","import React from 'react'\r\n\r\nfunction Technicians() {\r\n    return (\r\n        <div>\r\n            <h2>\r\n                technicians\r\n            </h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Technicians\r\n","import React from 'react';\r\nimport styles from './App.module.css';\r\nimport Navbar from './layout/navbar/navbar';\r\nimport Header from './layout/header/header';\r\nimport Appointments from './components/Appointments/Appointments';\r\nimport Boilers from './components/Boilers/Boilers';\r\nimport BoilersTypes from './components/BoilersTypes/BoilersTypes';\r\nimport Buildings from './components/Buildings/Buildings';\r\nimport Customers from './components/Customers/Customers';\r\nimport Technicians from './components/Technicians/Technicians';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div className={styles.wrapper}>\r\n          <Navbar />\r\n          <div className={styles.mainContent}>\r\n            <Header/>\r\n            <Switch>\r\n              <Route path=\"/appointments\" component={Appointments}/>\r\n              <Route path=\"/boilers\" component={Boilers}/>\r\n              <Route path=\"/boilersTypes\" component={BoilersTypes}/>\r\n              <Route path=\"/buildings\" component={Buildings}/>\r\n              <Route path=\"/customers\" component={Customers}/>\r\n              <Route path=\"/technicians\" component={Technicians} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n    GET_BOILER_FETCHING,\r\n    GET_BOILER_FULFILLED,\r\n    GET_BOILER_REJECTED,\r\n    ADD_BOILER_FETCHING,\r\n    ADD_BOILER_FULFILLED,\r\n    ADD_BOILER_REJECTED,\r\n    DEL_BOILER_FETCHING,\r\n    DEL_BOILER_FULFILLED,\r\n    DEL_BOILER_REJECTED,\r\n    EDIT_BOILER_FETCHING,\r\n    EDIT_BOILER_FULFILLED,\r\n    EDIT_BOILER_REJECTED,\r\n  } from \"../types/types-boilers\";\r\n  \r\n  const initialState = {\r\n    isLoading: false,\r\n    list: [],\r\n    error: false,\r\n  };\r\n  \r\n  const boilersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n      case GET_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          list: action.payload,\r\n        };\r\n      case GET_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      case ADD_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n  \r\n      case ADD_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          list: [...state.list, action.payload],\r\n        };\r\n      case ADD_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      case DEL_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n  \r\n      case DEL_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          list: state.list.filter((boiler) => {\r\n            return boiler.id !== action.payload;\r\n          }),\r\n        };\r\n      case DEL_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      case EDIT_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n  \r\n      case EDIT_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          list: [\r\n            ...state.list,\r\n            {\r\n              id: action.id,\r\n              text: action.text,\r\n              completed: false,\r\n            },\r\n          ],\r\n        };\r\n  \r\n      case EDIT_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default boilersReducer;","import {\r\n  GET_CUSTOMER_FETCHING,\r\n  GET_CUSTOMER_FULFILLED,\r\n  GET_CUSTOMER_REJECTED,\r\n  ADD_CUSTOMER_FETCHING,\r\n  ADD_CUSTOMER_FULFILLED,\r\n  ADD_CUSTOMER_REJECTED,\r\n  DEL_CUSTOMER_FETCHING,\r\n  DEL_CUSTOMER_FULFILLED,\r\n  DEL_CUSTOMER_REJECTED,\r\n  EDIT_CUSTOMER_FETCHING,\r\n  EDIT_CUSTOMER_FULFILLED,\r\n  EDIT_CUSTOMER_REJECTED,\r\n} from \"../types/types-customers\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  list: [],\r\n  error: false,\r\n};\r\n\r\nconst customersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case GET_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        list: action.payload,\r\n      };\r\n    case GET_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    case ADD_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        list: [...state.list, action.payload],\r\n      };\r\n    case ADD_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    case DEL_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case DEL_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((customer) => {\r\n          return customer.id !== action.payload;\r\n        }),\r\n      };\r\n    case DEL_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    case EDIT_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case EDIT_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        list: [\r\n          ...state.list,\r\n          {\r\n            id: action.id,\r\n            text: action.text,\r\n            completed: false,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case EDIT_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default customersReducer;\r\n","import appointmentsReducer from './appointmentsReducer';\r\nimport boilersReducer from './boilersReducer';\r\nimport boilerTypesReducer from './boilerTypesReducer';\r\nimport buildingsReducer from './buildingsReducer';\r\nimport customersReducer from './customersReducer';\r\nimport techniciansReducer from './techniciansReducer';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    appointments: appointmentsReducer,\r\n    boilers: boilersReducer,\r\n    boilerTypes: boilerTypesReducer,\r\n    buildings: buildingsReducer,\r\n    customers: customersReducer,\r\n    technicians: techniciansReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport rootReducer from \"./redux/reducers/rootReducer\";\r\nimport \"./index.css\";\r\n\r\nconst middleware = [thunk];\r\n\r\nconst configureStore = () => {\r\n  const enhancer = composeWithDevTools();\r\n  return createStore(\r\n    rootReducer,\r\n    enhancer,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n};\r\n\r\nconst store = configureStore();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    ,\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}