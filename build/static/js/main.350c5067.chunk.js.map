{"version":3,"sources":["layout/navbar/navbar.module.css","App.module.css","layout/main/main.module.css","layout/header/header.module.css","layout/navbar/navbar.js","layout/header/header.js","components/Appointments/AppointmentItem.js","components/Appointments/AppointmentList.js","components/Appointments/AddAppointment.js","redux/types/types-appointments.js","redux/actions/appointmentsActions.js","components/Appointments/Appointments.js","components/Boilers/BoilerItem.js","components/Boilers/BoilersList.js","components/Boilers/AddBoiler.js","redux/types/types-boilers.js","redux/actions/boilersActions.js","components/Boilers/Boilers.js","components/BoilersTypes/BoilerTypeItem.js","components/BoilersTypes/BoilerTypeList.js","components/BoilersTypes/AddBoilerType.js","redux/types/types-boilerTypes.js","redux/actions/boilerTypesActions.js","components/BoilersTypes/BoilersTypes.js","components/Buildings/AddBuilding.js","components/Buildings/BuildingItem.js","components/Buildings/BuildingsList.js","redux/types/types-buildings.js","redux/actions/buildingsActions.js","components/Buildings/Buildings.js","components/Customers/CustomerItem.js","components/Customers/CustomersList.js","components/Customers/AddCustomer.js","redux/types/types-customers.js","redux/actions/customersActions.js","components/Customers/Customers.js","components/Technicians/TechnicianItem.js","components/Technicians/TechniciansList.js","components/Technicians/AddTechnician.js","redux/types/types-technicians.js","redux/actions/techniciansActions.js","components/Technicians/Technicians.js","App.js","reportWebVitals.js","redux/reducers/appointmentsReducer.js","redux/reducers/boilersReducer.js","redux/reducers/boilerTypesReducer.js","redux/reducers/buildingsReducer.js","redux/reducers/customersReducer.js","redux/reducers/techniciansReducer.js","redux/reducers/rootReducer.js","index.js"],"names":["module","exports","Navbar","className","styles","navbarContainer","logo","navbarLinks","to","Header","headerContainer","AppointmentItem","this","props","appointment","_id","buildingId","boilerId","start_timestamp","end_timestamp","onClick","delAppointment","bind","btnStyle","editAppointment","Component","AppointmentsList","type","value","input","handleShowForm","table","appointments","map","index","AddAppointment","state","handleCleanForm","setState","handleEdit","appointmentEdit","onSubmit","e","preventDefault","updateAppointment","addAppointment","onChange","target","name","placeholder","GET_APPOINTMENT_FETCHING","GET_APPOINTMENT_FULFILLED","GET_APPOINTMENT_REJECTED","ADD_APPOINTMENT_FETCHING","ADD_APPOINTMENT_FULFILLED","ADD_APPOINTMENT_REJECTED","DEL_APPOINTMENT_FETCHING","DEL_APPOINTMENT_FULFILLED","DEL_APPOINTMENT_REJECTED","EDIT_APPOINTMENT_FETCHING","EDIT_APPOINTMENT_FULFILLED","EDIT_APPOINTMENT_REJECTED","URL","getAppointments","dispatch","fetch","then","data","json","response","payload","catch","dataSend","requestOptions","method","headers","body","JSON","stringify","Appointments","showForm","window","scrollTo","info","AppointmentList","connect","list","getAppointmentsActions","delAppointmentActions","addAppointmentActions","updateAppointmentActions","BoilerItem","boiler","maintainceRate","typeId","hourMaintainceCost","hourEventualCost","delBoiler","editBoiler","BoilersList","boilers","AddBoiler","boilerEdit","updateBoiler","addBoiler","GET_BOILER_FETCHING","GET_BOILER_FULFILLED","GET_BOILER_REJECTED","ADD_BOILER_FETCHING","ADD_BOILER_FULFILLED","ADD_BOILER_REJECTED","DEL_BOILER_FETCHING","DEL_BOILER_FULFILLED","DEL_BOILER_REJECTED","EDIT_BOILER_FETCHING","EDIT_BOILER_FULFILLED","EDIT_BOILER_REJECTED","getBoilers","Boilers","getBoilersActions","delBoilerActions","addBoilerActions","updateBoilerActions","BoilerTypeItem","boilerType","skillsId","stock","description","deleteBoilerType","editBoilerType","BoilerTypeList","boilerTypes","AddBoilerType","boilerTypeEdit","updateBoilerType","addBoilerType","itemType","GET_BOILERTYPE_FETCHING","GET_BOILERTYPE_FULFILLED","GET_BOILERTYPE_REJECTED","ADD_BOILERTYPE_FETCHING","ADD_BOILERTYPE_FULFILLED","ADD_BOILERTYPE_REJECTED","DELETE_BOILERTYPE_FETCHING","DELETE_BOILERTYPE_FULFILLED","DELETE_BOILERTYPE_REJECTED","EDIT_BOILERTYPE_FETCHING","EDIT_BOILERTYPE_FULFILLED","EDIT_BOILERTYPE_REJECTED","getBoilerTypes","BoilerType","bt","getBoilerTypesActions","deleteBoilerTypeActions","addBoilerTypeActions","updateBoilerTypeActions","AddBuilding","boilersId","businessName","email","phone","adress","buildingEdit","updateBuilding","addBuilding","BuildingItem","building","delBuilding","editBuilding","Buildings","title","btnStyleNew","buildings","GET_BUILDING_FETCHING","GET_BUILDING_FULFILLED","GET_BUILDING_REJECTED","ADD_BUILDING_FETCHING","ADD_BUILDING_FULFILLED","ADD_BUILDING_REJECTED","DEL_BUILDING_FETCHING","DEL_BUILDING_FULFILLED","DEL_BUILDING_REJECTED","EDIT_BUILDING_FETCHING","EDIT_BUILDING_FULFILLED","EDIT_BUILDING_REJECTED","getBuildings","BuildingsList","getBuildingActions","delBuildingActions","addBuildingActions","updateBuildingActions","CustomerItem","customer","customerType","buildingsIds","fiscalAddress","delCustomer","editCustomer","Customers","customers","AddCustomer","customerEdit","toString","updateCustomer","addCustomer","GET_CUSTOMER_FETCHING","GET_CUSTOMER_FULFILLED","GET_CUSTOMER_REJECTED","ADD_CUSTOMER_FETCHING","ADD_CUSTOMER_FULFILLED","ADD_CUSTOMER_REJECTED","DEL_CUSTOMER_FETCHING","DEL_CUSTOMER_FULFILLED","DEL_CUSTOMER_REJECTED","EDIT_CUSTOMER_FETCHING","EDIT_CUSTOMER_FULFILLED","EDIT_CUSTOMER_REJECTED","getCustomers","CustomersList","getCustomersActions","delCustomerActions","addCustomerActions","updateCustomerActions","Technicianitem","technician","firstName","lastName","typeIds","hour_rate","daily_capacity","delTechnician","editTechnician","TechniciansList","technicians","TechnicianItem","AddTechnician","technicianEdit","updateTechnician","addTechnician","GET_TECHNICIANS_FETCHING","GET_TECHNICIANS_FULFILLED","GET_TECHNICIANS_REJECTED","ADD_TECHNICIANS_FETCHING","ADD_TECHNICIANS_FULFILLED","ADD_TECHNICIANS_REJECTED","DEL_TECHNICIANS_FETCHING","DEL_TECHNICIANS_FULFILLED","DEL_TECHNICIANS_REJECTED","EDIT_TECHNICIANS_FETCHING","EDIT_TECHNICIANS_FULFILLED","EDIT_TECHNICIANS_REJECTED","getTechnicians","addTechnicians","editTechnicians","delTechnicians","Technicians","updateTechnicians","getTechniciansActions","delTechniciansActions","addTechniciansActions","updateTechniciansActions","App","wrapper","mainContent","path","component","BoilersTypes","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","isLoading","error","appointmentsReducer","action","filter","text","completed","boilersReducer","id","boilerTypesReducer","buildingsReducer","customersReducer","techniciansReducer","rootReducer","combineReducers","middleware","thunk","store","enhancer","composeWithDevTools","createStore","compose","applyMiddleware","configureStore","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.350c5067.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"navbar_navbarContainer__11sRD\",\"logo\":\"navbar_logo__3ftqb\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__2E5Wi\",\"wrapper\":\"App_wrapper__2Zenk\",\"mainContent\":\"App_mainContent__1od5z\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"main_info__1Fd05\",\"table\":\"main_table__3VlMu\",\"input\":\"main_input__3wphK\",\"btnStyle\":\"main_btnStyle__3VBsi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__28mRj\"};","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nimport styles from './navbar.module.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n            <nav className={styles.navbarContainer}>\r\n                <div className={styles.logo}>\r\n                    <h3>\r\n                        CALDAR\r\n                    </h3>\r\n                </div>\r\n                <ul className={styles.navbarLinks}>\r\n                    <Link to=\"/appointments\" >\r\n                        <li>\r\n                            Appointments\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/boilers\">\r\n                        <li>\r\n                            Boilers\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/boilersTypes\">\r\n                        <li>\r\n                            BoilersTypes\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/buildings\">\r\n                        <li>\r\n                            Buildings\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/customers\">\r\n                        <li>\r\n                            Customers\r\n                        </li>\r\n                    </Link>\r\n                    <Link to=\"/technicians\">\r\n                        <li>\r\n                            Technicians\r\n                        </li>\r\n                    </Link>\r\n                </ul>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport styles from './header.module.css';\r\n\r\nfunction Header() {\r\n    return (\r\n        <div className={styles.headerContainer}>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Header;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass AppointmentItem extends Component {\r\n    render() {\r\n        const {_id,buildingId, boilerId,start_timestamp, end_timestamp } = this.props.appointment;\r\n        return (\r\n            <tr>\r\n                <td>{_id}</td>\r\n                <td>{buildingId}</td>\r\n                <td>{boilerId}</td>\r\n                <td>{start_timestamp}</td>\r\n                <td>{end_timestamp}</td>\r\n                <td>\r\n                    <button\r\n                        onClick={this.props.delAppointment.bind(this, _id)}\r\n                        className={styles.btnStyle}\r\n                    >\r\n                        X\r\n                    </button>\r\n                    <button\r\n                        onClick={this.props.editAppointment.bind(this, this.props.appointment)}\r\n                        className={styles.btnStyle}\r\n                    >\r\n                        Edit\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n//PropTypes\r\nAppointmentItem.propTypes = {\r\n    appointment:PropTypes.object.isRequired,\r\n    delAppointment:PropTypes.func.isRequired,\r\n    editAppointment:PropTypes.func.isRequired,\r\n}\r\nexport default AppointmentItem;","import React, { Component } from 'react';\r\nimport AppointmentItem  from './AppointmentItem';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass AppointmentsList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Appointments{\" \"}\r\n          <input\r\n              type=\"button\"\r\n              value=\"New\"\r\n              className={styles.input}\r\n              onClick={() => this.props.handleShowForm()}\r\n            />\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>BoilerId</th>\r\n                <th>BuildingId</th>\r\n                <th>Start Time</th>\r\n                <th>End Time</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n        <tbody>\r\n          {this.props.appointments?.map((appointment,index) => (\r\n            <AppointmentItem\r\n              key={index}\r\n              appointment={appointment}\r\n              editAppointment={this.props.editAppointment}\r\n              delAppointment={this.props.delAppointment}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//PropTypes\r\nAppointmentsList.propTypes = {\r\n    appointments:PropTypes.array.isRequired,\r\n    editAppointment:PropTypes.func.isRequired,\r\n    delAppointment:PropTypes.func.isRequired,\r\n    handleShowForm: PropTypes.func.isRequired,\r\n    showForm: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default AppointmentsList;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass AddAppointment extends Component {\r\n    state = {\r\n        _id:\"\",\r\n        buildingId:\"\",\r\n        boilerId:\"\",\r\n        start_timestamp:\"\",\r\n        end_timestamp:\"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.appointmentEdit) {\r\n          this.handleEdit(this.props.appointmentEdit);\r\n        }\r\n      }\r\n    handleCleanForm = () => {\r\n        this.setState({\r\n            _id:\"\",\r\n            buildingId:\"\",\r\n            boilerId:\"\",\r\n            start_timestamp:\"\",\r\n            end_timestamp:\"\"\r\n        });\r\n        this.props.handleShowForm();\r\n    }\r\n\r\n      handleEdit = (appointmentEdit) => {\r\n        this.setState({\r\n          _id: appointmentEdit._id,\r\n          buildingId: appointmentEdit.buildingId,\r\n          boilerId: appointmentEdit.boilerId,\r\n          start_timestamp: appointmentEdit.start_timestamp,\r\n          end_timestamp: appointmentEdit.end_timestamp,\r\n        });\r\n      };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state._id) {\r\n            this.props.updateAppointment(\r\n                this.state._id,\r\n                this.state.buildingId,\r\n                this.state.boilerId,\r\n                this.state.start_timestamp,\r\n                this.state.end_timestamp,\r\n            );\r\n        } else {\r\n            this.props.addAppointment(\r\n                this.state.buildingId,\r\n                this.state.boilerId,\r\n                this.state.start_timestamp,\r\n                this.state.end_timestamp,\r\n            );\r\n        }\r\n        this.handleCleanForm();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state._id ? \"Edit appointment\" : \"Add new appointment\"}</h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"buildingId\"\r\n                            className={styles.input}\r\n                            placeholder=\"Building Id...\"\r\n                            value={this.state.buildingId}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"boilerId\"\r\n                            className={styles.input}\r\n                            placeholder=\"Boiler Id...\"\r\n                            value={this.state.boilerId}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"start_timestamp\"\r\n                            className={styles.input}\r\n                            placeholder=\"Start Time...\"\r\n                            value={this.state.start_timestamp}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"end_timestamp\"\r\n                            className={styles.input}\r\n                            placeholder=\"End Time...\"\r\n                            value={this.state.end_timestamp}\r\n                            onChange={this.onChange}\r\n                        />\r\n\r\n                         {this.state._id ?\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Save\"\r\n                            className={styles.input}\r\n                        />\r\n                        :\r\n                        <input\r\n                        type=\"submit\"\r\n                        value=\"Add\"\r\n                        className={styles.input}\r\n                    />}\r\n\r\n                        <input\r\n                        type=\"button\"\r\n                        value=\"Cancel\"\r\n                        className={styles.input}\r\n                        onClick={this.handleCleanForm}\r\n                        />\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n//PropTypes\r\nAddAppointment.propTypes = {\r\n    addAppointment:PropTypes.func.isRequired,\r\n    appointmentEdit: PropTypes.object,\r\n    handleShowForm: PropTypes.func.isRequired,\r\n    updateAppointment: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddAppointment;","export const GET_APPOINTMENT_FETCHING = 'GET_APPOINTMENT_FETCHING';\r\nexport const GET_APPOINTMENT_FULFILLED = 'GET_APPOINTMENT_FULFILLED';\r\nexport const GET_APPOINTMENT_REJECTED = 'GET_APPOINTMENT_REJECTED';\r\n\r\nexport const ADD_APPOINTMENT_FETCHING = 'ADD_APPOINTMENT_FETCHING';\r\nexport const ADD_APPOINTMENT_FULFILLED = 'ADD_APPOINTMENT_FULFILLED';\r\nexport const ADD_APPOINTMENT_REJECTED = 'ADD_APPOINTMENT_REJECTED';\r\n\r\nexport const DEL_APPOINTMENT_FETCHING ='DEL_APPOINTMENT_FETCHING';\r\nexport const DEL_APPOINTMENT_FULFILLED ='DEL_APPOINTMENT_FULFILLED';\r\nexport const DEL_APPOINTMENT_REJECTED ='DEL_APPOINTMENT_REJECTED';\r\n\r\nexport const EDIT_APPOINTMENT_FETCHING ='EDIT_APPOINTMENT_FETCHING';\r\nexport const EDIT_APPOINTMENT_FULFILLED ='EDIT_APPOINTMENT_FULFILLED';\r\nexport const EDIT_APPOINTMENT_REJECTED ='EDIT_APPOINTMENT_REJECTED';","import {\r\n    GET_APPOINTMENT_FETCHING,\r\n    GET_APPOINTMENT_FULFILLED,\r\n    GET_APPOINTMENT_REJECTED,\r\n    ADD_APPOINTMENT_FETCHING,\r\n    ADD_APPOINTMENT_FULFILLED,\r\n    ADD_APPOINTMENT_REJECTED,\r\n    DEL_APPOINTMENT_FETCHING,\r\n    DEL_APPOINTMENT_FULFILLED,\r\n    DEL_APPOINTMENT_REJECTED,\r\n    EDIT_APPOINTMENT_FETCHING,\r\n    EDIT_APPOINTMENT_FULFILLED,\r\n    EDIT_APPOINTMENT_REJECTED\r\n} from '../types/types-appointments'\r\n\r\nconst URL= 'https://app-caldar-gm4.herokuapp.com/api/appointment';\r\n\r\n\r\nconst getAppointmentFetching = () => ({\r\n    type: GET_APPOINTMENT_FETCHING,\r\n});\r\n\r\nconst getAppointmentFulfilled = (payload) => ({\r\n    type: GET_APPOINTMENT_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst getAppointmentRejected = () => ({\r\n    type: GET_APPOINTMENT_REJECTED,\r\n});\r\n\r\nexport const getAppointments = () => dispatch =>{\r\n    dispatch(getAppointmentFetching());\r\n    return fetch(URL)\r\n        .then(data=>data.json())\r\n        .then(response=>{\r\n            dispatch(getAppointmentFulfilled(response));\r\n        })\r\n        .catch(() =>{\r\n            dispatch(getAppointmentRejected())\r\n        });\r\n};\r\n\r\n\r\nconst addAppointmentFetching = () => ({\r\n    type: ADD_APPOINTMENT_FETCHING,\r\n});\r\n\r\nconst addAppointmentFulfilled = (payload) => ({\r\n    type: ADD_APPOINTMENT_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst addAppointmentRejected = () => ({\r\n    type: ADD_APPOINTMENT_REJECTED,\r\n});\r\n\r\nexport const addAppointment = (buildingId,boilerId,start_timestamp,end_timestamp ) => dispatch =>{\r\n    dispatch(addAppointmentFetching());\r\n    const dataSend = { buildingId,boilerId,start_timestamp,end_timestamp };\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(dataSend),\r\n    };\r\n    return fetch(URL,requestOptions)\r\n        .then(data=> data.json())\r\n        .then(response =>{\r\n            dispatch(addAppointmentFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getAppointments()))\r\n        .catch(() =>{\r\n            dispatch(addAppointmentRejected())\r\n        });\r\n};\r\n\r\n\r\nconst delAppointmentFetching = () => ({\r\n    type: DEL_APPOINTMENT_FETCHING,\r\n});\r\n\r\nconst delAppointmentFulfilled = (payload) => ({\r\n    type: DEL_APPOINTMENT_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst delAppointmentRejected = () => ({\r\n    type: DEL_APPOINTMENT_REJECTED,\r\n});\r\n\r\nexport const delAppointment = (_id) => dispatch =>{\r\n    dispatch(delAppointmentFetching());\r\n    const dataSend = { _id };\r\n    const requestOptions = {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n    };\r\n    return fetch(`${URL}/${_id}`, requestOptions)\r\n    .then(data=> data.json())\r\n        .then(response =>{\r\n            dispatch(delAppointmentFulfilled(_id));\r\n        })\r\n        .then(() => dispatch(getAppointments()))\r\n        .catch(() =>{\r\n            dispatch(delAppointmentRejected())\r\n        });\r\n};\r\n\r\n\r\nconst editAppointmentFetching = () => ({\r\n    type: EDIT_APPOINTMENT_FETCHING,\r\n});\r\n\r\nconst editAppointmentFulfilled = (payload) => ({\r\n    type: EDIT_APPOINTMENT_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst editAppointmentRejected = () => ({\r\n    type: EDIT_APPOINTMENT_REJECTED,\r\n});\r\n\r\nexport const editAppointment = (_id,buildingId,boilerId,start_timestamp,end_timestamp ) => dispatch =>{\r\n    dispatch(editAppointmentFetching());\r\n    const dataSend = {_id, buildingId,boilerId,start_timestamp,end_timestamp };\r\n    const requestOptions = {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n  };\r\n    return fetch(`${URL}/${_id}`, requestOptions)\r\n        .then(data=> data.json())\r\n        .then(response => {\r\n            dispatch(editAppointmentFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getAppointments()))\r\n        .catch(() =>{\r\n            dispatch(editAppointmentRejected())\r\n        });\r\n};\r\n","import React, { Component } from 'react';\r\nimport AppointmentList from \"./AppointmentList\";\r\nimport AddAppointment from \"./AddAppointment\";\r\nimport styles from '../../layout/main/main.module.css';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getAppointments as getAppointmentsActions,\r\n  delAppointment as delAppointmentActions,\r\n  addAppointment as addAppointmentActions,\r\n  editAppointment as updateAppointmentActions,\r\n} from \"../../redux/actions/appointmentsActions\";\r\n\r\n\r\nclass Appointments extends Component {\r\n\r\n  state = {\r\n    appointmentEdit: null,\r\n    showForm: false,\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.getAppointments();\r\n  }\r\n\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      appointmentEdit: null\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  editAppointment = (appointment) => {\r\n    this.setState({\r\n      appointmentEdit: appointment,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n                <AddAppointment\r\n                  addAppointment={this.props.addAppointment}\r\n                  updateAppointment={this.props.updateAppointment}\r\n                  appointmentEdit={this.state.appointmentEdit}\r\n                  handleShowForm={this.handleShowForm}\r\n                />\r\n                ) : (\r\n                <AppointmentList\r\n                  appointments = {this.props.appointments}\r\n                  delAppointment={this.props.delAppointment}\r\n                  editAppointment={this.editAppointment}\r\n                  handleShowForm={this.handleShowForm}\r\n                  showForm={this.state.showForm}\r\n                />\r\n        )}\r\n        </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getAppointments: () => dispatch(getAppointmentsActions()),\r\n  delAppointment: (_id) => dispatch(delAppointmentActions(_id)),\r\n  addAppointment: (buildingId, boilerId,start_timestamp, end_timestamp) =>\r\n    dispatch(\r\n      addAppointmentActions(buildingId, boilerId,start_timestamp, end_timestamp)\r\n    ),\r\n  updateAppointment: (_id, buildingId, boilerId,start_timestamp, end_timestamp) =>\r\n    dispatch(\r\n      updateAppointmentActions( _id,buildingId, boilerId,start_timestamp,end_timestamp)\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appointments: state.appointments.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Appointments);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class BoilerItem extends Component {\r\n\r\n  render() {\r\n    const {\r\n      _id,\r\n      maintainceRate,\r\n      typeId,\r\n      hourMaintainceCost,\r\n      hourEventualCost,\r\n    } = this.props.boiler;\r\n    return (\r\n      <tr>\r\n        <td>{_id}</td>\r\n        <td>{typeId}</td>\r\n        <td>{maintainceRate}</td>\r\n        <td>{hourMaintainceCost}</td>\r\n        <td>{hourEventualCost}</td>\r\n        <td>\r\n          <button\r\n            onClick={this.props.delBoiler.bind(this, _id)}\r\n            className={styles.btnStyle}\r\n          >\r\n            delete\r\n          </button>\r\n          <button\r\n            onClick={this.props.editBoiler.bind(this, this.props.boiler)}\r\n            className={styles.btnStyle}\r\n          >\r\n            edit\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nBoilerItem.propTypes = {\r\n  boiler: PropTypes.object.isRequired,\r\n  delBoiler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BoilerItem;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BoilerItem from \"./BoilerItem\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass BoilersList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          Boilers{\" \"}\r\n          <input\r\n            type=\"button\"\r\n            value=\"New\"\r\n            className={styles.input}\r\n            onClick={() => this.props.handleShowForm()}\r\n          />\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>id</th>\r\n              <th>Type</th>\r\n              <th>Maintaince</th>\r\n              <th>Maintaince Cost</th>\r\n              <th>Eventual Cost</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.boilers?.map((boiler) => (\r\n              <BoilerItem\r\n                key={boiler._id}\r\n                boiler={boiler}\r\n                editBoiler={this.props.editBoiler}\r\n                delBoiler={this.props.delBoiler}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nBoilersList.propTypes = {\r\n  boilers: PropTypes.array.isRequired,\r\n  delBoiler: PropTypes.func.isRequired,\r\n  editBoiler: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  showForm: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default BoilersList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class AddBoiler extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    typeId: \"\",\r\n    maintainceRate: \"\",\r\n    hourMaintainceCost: \"\",\r\n    hourEventualCost: \"\",\r\n};\r\n\r\n  componentDidMount() {\r\n    if (this.props.boilerEdit) {\r\n      this.handleEdit(this.props.boilerEdit);\r\n    }\r\n  }\r\n\r\n  handleCleanForm = () => {\r\n    this.setState({\r\n      _id: \"\",\r\n      typeId: \"\",\r\n      maintainceRate: \"\",\r\n      hourMaintainceCost: \"\",\r\n      hourEventualCost: \"\",\r\n    });\r\n    this.props.handleShowForm();\r\n  };\r\n\r\n  handleEdit = (boilerEdit) => {\r\n    this.setState({\r\n      _id: boilerEdit._id,\r\n      typeId: boilerEdit.typeId,\r\n      maintainceRate: boilerEdit.maintainceRate,\r\n      hourMaintainceCost: boilerEdit.hourMaintainceCost,\r\n      hourEventualCost: boilerEdit.hourEventualCost,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state._id) {\r\n      this.props.updateBoiler(\r\n        this.state._id,\r\n        this.state.typeId,\r\n        this.state.maintainceRate,\r\n        this.state.hourMaintainceCost,\r\n        this.state.hourEventualCost\r\n      );\r\n    } else {\r\n      this.props.addBoiler(\r\n        this.state.typeId,\r\n        this.state.maintainceRate,\r\n        this.state.hourMaintainceCost,\r\n        this.state.hourEventualCost\r\n      );\r\n    }\r\n    this.handleCleanForm();\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>{this.state._id ? \"Edit boiler\" : \"Add new boiler\"}</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n        <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"typeId\"\r\n            className={styles.input}\r\n            placeholder=\"Type boiler...\"\r\n            value={this.state.typeId}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"maintainceRate\"\r\n            className={styles.input}\r\n            placeholder=\"Maintaince rate ...\"\r\n            value={this.state.maintainceRate}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"hourMaintainceCost\"\r\n            className={styles.input}\r\n            placeholder=\"Hour maintaince cost ...\"\r\n            value={this.state.hourMaintainceCost}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"hourEventualCost\"\r\n            className={styles.input}\r\n            placeholder=\"Hour maintaince cost ...\"\r\n            value={this.state.hourEventualCost}\r\n            onChange={this.onChange}\r\n          />\r\n\r\n          <input type=\"submit\" value=\"Submit\" className={styles.input} />\r\n          <input\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            className={styles.input}\r\n            onClick={this.handleCleanForm}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddBoiler.propTypes = {\r\n  addBoiler: PropTypes.func.isRequired,\r\n  updateBoiler: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  boilerEdit: PropTypes.object,\r\n};\r\n\r\nexport default AddBoiler;","//GET DATA\r\nexport const GET_BOILER_FETCHING = 'GET_BOILER_FETCHING';\r\nexport const GET_BOILER_FULFILLED = 'GET_BOILER_FULFILLED';\r\nexport const GET_BOILER_REJECTED = 'GET_BOILER_REJECTED';\r\n\r\n//ADD DATA\r\nexport const ADD_BOILER_FETCHING = 'ADD_BOILER_FETCHING';\r\nexport const ADD_BOILER_FULFILLED = 'ADD_BOILER_FULFILLED';\r\nexport const ADD_BOILER_REJECTED = 'ADD_BOILER_REJECTED';\r\n\r\n//DELETE DATA\r\nexport const DEL_BOILER_FETCHING ='DEL_BOILER_FETCHING';\r\nexport const DEL_BOILER_FULFILLED ='DEL_BOILER_FULFILLED';\r\nexport const DEL_BOILER_REJECTED ='DEL_BOILER_REJECTED';\r\n\r\n//EDIT DATA\r\nexport const EDIT_BOILER_FETCHING ='EDIT_BOILER_FETCHING';\r\nexport const EDIT_BOILER_FULFILLED ='EDIT_BOILER_FULFILLED';\r\nexport const EDIT_BOILER_REJECTED ='EDIT_BOILER_REJECTED';","import {\r\n  GET_BOILER_FETCHING,\r\n  GET_BOILER_FULFILLED,\r\n  GET_BOILER_REJECTED,\r\n  ADD_BOILER_FETCHING,\r\n  ADD_BOILER_FULFILLED,\r\n  ADD_BOILER_REJECTED,\r\n  DEL_BOILER_FETCHING,\r\n  DEL_BOILER_FULFILLED,\r\n  DEL_BOILER_REJECTED,\r\n  EDIT_BOILER_FETCHING,\r\n  EDIT_BOILER_FULFILLED,\r\n  EDIT_BOILER_REJECTED,\r\n} from \"../types/types-boilers\";\r\n\r\n//DECLARATE CONST AND IMPORT API\r\nconst URL = \"https://app-caldar-gm4.herokuapp.com/api/boilers\";\r\n\r\n//ACTION TO GET BOILER DATA\r\n\r\nconst getBoilerFetching = () => ({\r\n  type: GET_BOILER_FETCHING,\r\n});\r\n\r\nconst getBoilerFulfilled = (payload) => ({\r\n  type: GET_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst getBoilerRejected = () => ({\r\n  type: GET_BOILER_REJECTED,\r\n});\r\n\r\nexport const getBoilers = () => (dispatch) => {\r\n  dispatch(getBoilerFetching());\r\n  return fetch(URL)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(getBoilerFulfilled(response));\r\n    })\r\n    .catch(() => {\r\n      dispatch(getBoilerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO ADD BOILER DATA\r\nconst addBoilerFetching = () => ({\r\n  type: ADD_BOILER_FETCHING,\r\n});\r\n\r\nconst addBoilerFulfilled = (payload) => ({\r\n  type: ADD_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst addBoilerRejected = () => ({\r\n  type: ADD_BOILER_REJECTED,\r\n});\r\n\r\nexport const addBoiler = (\r\n  typeId,\r\n  maintainceRate,\r\n  hourMaintainceCost,\r\n  hourEventualCost\r\n) => (dispatch) => {\r\n  dispatch(addBoilerFetching());\r\n  const dataSend = {\r\n    typeId,\r\n    maintainceRate,\r\n    hourMaintainceCost,\r\n    hourEventualCost,\r\n  };\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(URL, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(addBoilerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getBoilers()))\r\n    .catch(() => {\r\n      dispatch(addBoilerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO DELETE BOILER DATA\r\n\r\nconst delBoilerFetching = () => ({\r\n  type: DEL_BOILER_FETCHING,\r\n});\r\n\r\nconst delBoilerFulfilled = (payload) => ({\r\n  type: DEL_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst delBoilerRejected = () => ({\r\n  type: DEL_BOILER_REJECTED,\r\n});\r\n\r\nexport const delBoiler = (_id) => (dispatch) => {\r\n  dispatch(delBoilerFetching());\r\n  const dataSend = { _id };\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(delBoilerFulfilled(_id));\r\n    })\r\n    .then(() => dispatch(getBoilers()))\r\n    .catch(() => {\r\n      dispatch(delBoilerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO EDIT BOILER DATA\r\n\r\nconst editBoilerFetching = () => ({\r\n  type: EDIT_BOILER_FETCHING,\r\n});\r\n\r\nconst editBoilerFulfilled = (payload) => ({\r\n  type: EDIT_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst editBoilerRejected = () => ({\r\n  type: EDIT_BOILER_REJECTED,\r\n});\r\n\r\nexport const editBoiler = (\r\n  _id,\r\n  typeId,\r\n  maintainceRate,\r\n  hourMaintainceCost,\r\n  hourEventualCost\r\n) => (dispatch) => {\r\n  dispatch(editBoilerFetching());\r\n\r\n  const dataSend = {\r\n    _id,\r\n    typeId,\r\n    maintainceRate,\r\n    hourMaintainceCost,\r\n    hourEventualCost,\r\n  };\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(editBoilerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getBoilers()))\r\n    .catch(() => {\r\n      dispatch(editBoilerRejected());\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport BoilersList from \"./BoilersList\";\r\nimport AddBoiler from \"./AddBoiler\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getBoilers as getBoilersActions,\r\n  delBoiler as delBoilerActions,\r\n  addBoiler as addBoilerActions,\r\n  editBoiler as updateBoilerActions,\r\n} from \"../../redux/actions/boilersActions\";\r\n\r\nclass Boilers extends Component {\r\n  state = {\r\n    boilerEdit: null,\r\n    showForm: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getBoilers();\r\n  }\r\n\r\n  // Show form\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      boilerEdit: null,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // Edit Boiler\r\n  editBoiler = (boiler) => {\r\n    this.setState({\r\n      boilerEdit: boiler,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n          <AddBoiler\r\n            addBoiler={this.props.addBoiler}\r\n            updateBoiler={this.props.updateBoiler}\r\n            boilerEdit={this.state.boilerEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n        ) : (\r\n          <BoilersList\r\n            boilers={this.props.boilers}\r\n            delBoiler={this.props.delBoiler}\r\n            editBoiler={this.editBoiler}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getBoilers: () => dispatch(getBoilersActions()),\r\n  delBoiler: (_id) => dispatch(delBoilerActions(_id)),\r\n  addBoiler: (typeId, maintainceRate, hourMaintainceCost, hourEventualCost) =>\r\n    dispatch(\r\n      addBoilerActions(\r\n        typeId,\r\n        maintainceRate,\r\n        hourMaintainceCost,\r\n        hourEventualCost\r\n      )\r\n    ),\r\n  updateBoiler: (\r\n    _id,\r\n    typeId,\r\n    maintainceRate,\r\n    hourMaintainceCost,\r\n    hourEventualCost\r\n  ) =>\r\n    dispatch(\r\n      updateBoilerActions(\r\n        _id,\r\n        typeId,\r\n        maintainceRate,\r\n        hourMaintainceCost,\r\n        hourEventualCost\r\n      )\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boilers: state.boilers.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Boilers);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass BoilerTypeItem extends Component {\r\n    render() {\r\n        const { _id, skillsId, type, stock, description } = this.props.boilerType;\r\n        return (\r\n            <tr>\r\n                <td>{_id}</td>\r\n                <td>{skillsId}</td>\r\n                <td>{type}</td>\r\n                <td>{stock}</td>\r\n                <td>{description}</td>\r\n                <td>\r\n                <button onClick={this.props.deleteBoilerType.bind(this, _id)}\r\n                    className={styles.btnStyle}>X</button>\r\n                    <button onClick={this.props.editBoilerType.bind(this, this.props.boilerType)} className={styles.btnStyle} >Edit</button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\n//proptypes\r\n\r\nBoilerTypeItem.propTypes = {\r\n    boilerType: PropTypes.object.isRequired,\r\n    deleteBoilerType: PropTypes.func.isRequired,\r\n    editBoilerType: PropTypes.func.isRequired,\r\n};\r\n\r\n\r\nexport default BoilerTypeItem;\r\n\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BoilerTypeItem from \"./BoilerTypeItem\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass BoilerTypeList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>BoilerTypes{\" \"}\r\n          <input\r\n              type=\"button\"\r\n              value=\"New\"\r\n              className={styles.input}\r\n              onClick={() => this.props.handleShowForm()}\r\n            />\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>Id</th>\r\n              <th>Skills Id</th>\r\n              <th>Type</th>\r\n              <th>Stock</th>\r\n              <th>Description</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n              {this.props.boilerTypes?.map((boilerType, index) => (\r\n                <BoilerTypeItem \r\n                  key={index} \r\n                  boilerType={boilerType}\r\n                  deleteBoilerType={this.props.deleteBoilerType}\r\n                  editBoilerType={this.props.editBoilerType}\r\n                />\r\n                )\r\n              )\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//PropTypes\r\nBoilerTypeList.propTypes = {\r\n  boilerTypes: PropTypes.array.isRequired,\r\n  deleteBoilerType: PropTypes.func.isRequired,\r\n  editBoilerType: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  showForm: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default BoilerTypeList;\r\n\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass AddBoilerType extends Component {\r\n    state = {\r\n      _id: \"\",\r\n      skillsId: \"\",\r\n      type: \"\",\r\n      stock: \"\",\r\n      description: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n      if (this.props.boilerTypeEdit) {\r\n        this.handleEdit(this.props.boilerTypeEdit);\r\n      }\r\n    }\r\n\r\n    handleCleanForm = () => {\r\n      this.setState({\r\n        _id: \"\",\r\n        skillsId: \"\",\r\n        type: \"\",\r\n        stock: \"\",\r\n        description: \"\",\r\n      });\r\n      this.props.handleShowForm();\r\n    };\r\n\r\n    handleEdit = (boilerTypeEdit) => {\r\n      this.setState({\r\n        _id: boilerTypeEdit._id,\r\n        skillsId: boilerTypeEdit.skillsId,\r\n        type: boilerTypeEdit.type,\r\n        stock: boilerTypeEdit.stock,\r\n        description: boilerTypeEdit.description,\r\n      });\r\n    };\r\n  \r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (this.state._id){\r\n        this.props.updateBoilerType(\r\n          this.state._id,\r\n          this.state.skillsId,\r\n          this.state.type,\r\n          this.state.stock,\r\n          this.state.description\r\n        );\r\n      }else {\r\n        this.props.addBoilerType(\r\n          this.state.skillsId,\r\n          this.state.type,\r\n          this.state.stock,\r\n          this.state.description\r\n        );\r\n      }\r\n      this.handleCleanForm();\r\n    };\r\n  \r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h3>{this.state._id ? \"Edit boiler type\" : \"Add new boiler type\"}</h3>\r\n          <form onSubmit={this.onSubmit}>\r\n            <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n            <input\r\n              itemType=\"text\"\r\n              name=\"skillsId\"\r\n              className={styles.input}\r\n              placeholder=\"Add Skills Id\"\r\n              value={this.state.skillsId}\r\n              onChange={this.onChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"type\"\r\n              className={styles.input}\r\n              placeholder=\"Add Type\"\r\n              value={this.state.type}\r\n              onChange={this.onChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"stock\"\r\n              className={styles.input}\r\n              placeholder=\"Add Stock\"\r\n              value={this.state.stock}\r\n              onChange={this.onChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              className={styles.input}\r\n              placeholder=\"Add Description\"\r\n              value={this.state.description}\r\n              onChange={this.onChange}\r\n            />\r\n            {this.state._id ?\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Save\"\r\n              className={styles.input}\r\n            />\r\n            :\r\n            <input\r\n              type=\"submit\"\r\n              value=\"Add\"\r\n              className={styles.input}\r\n            />}\r\n            <input\r\n              type=\"button\"\r\n              value=\"Cancel\"\r\n              className={styles.input}\r\n              onClick={this.handleCleanForm}\r\n            />\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  \r\n  // PropTypes\r\n  AddBoilerType.propTypes = {\r\n    addBoilerType: PropTypes.func.isRequired,\r\n    updateBoilerType: PropTypes.func.isRequired,\r\n    handleShowForm: PropTypes.func.isRequired,\r\n    boilerTypeEdit: PropTypes.object,\r\n  };\r\n\r\n  \r\n  export default AddBoilerType;","export const GET_BOILERTYPE_FETCHING = 'GET_BOILERTYPE_FETCHING';\r\nexport const GET_BOILERTYPE_FULFILLED = 'GET_BOILERTYPE_FULFILLED';\r\nexport const GET_BOILERTYPE_REJECTED = 'GET_BOILERTYPE_REJECTED';\r\n\r\nexport const ADD_BOILERTYPE_FETCHING = 'ADD_BOILERTYPE_FETCHING';\r\nexport const ADD_BOILERTYPE_FULFILLED = 'ADD_BOILERTYPE_FULFILLED';\r\nexport const ADD_BOILERTYPE_REJECTED = 'ADD_BOILERTYPE_REJECTED';\r\n\r\nexport const DELETE_BOILERTYPE_FETCHING ='DELETE_BOILERTYPE_FETCHING';\r\nexport const DELETE_BOILERTYPE_FULFILLED ='DELETE_BOILERTYPE_FULFILLED';\r\nexport const DELETE_BOILERTYPE_REJECTED ='DELETE_BOILERTYPE_REJECTED';\r\n\r\nexport const EDIT_BOILERTYPE_FETCHING ='EDIT_BOILERTYPE_FETCHING';\r\nexport const EDIT_BOILERTYPE_FULFILLED ='EDIT_BOILERTYPE_FULFILLED';\r\nexport const EDIT_BOILERTYPE_REJECTED ='EDIT_BOILERTYPE_REJECTED';","import {\r\n    GET_BOILERTYPE_FETCHING,\r\n    GET_BOILERTYPE_FULFILLED,\r\n    GET_BOILERTYPE_REJECTED,\r\n    ADD_BOILERTYPE_FETCHING,\r\n    ADD_BOILERTYPE_FULFILLED,\r\n    ADD_BOILERTYPE_REJECTED,\r\n    DELETE_BOILERTYPE_FETCHING,\r\n    DELETE_BOILERTYPE_FULFILLED,\r\n    DELETE_BOILERTYPE_REJECTED,\r\n    EDIT_BOILERTYPE_FETCHING,\r\n    EDIT_BOILERTYPE_FULFILLED,\r\n    EDIT_BOILERTYPE_REJECTED\r\n} from '../types/types-boilerTypes'\r\n\r\n//DECLARATE CONST AND IMPORT API\r\nconst URL= 'https://app-caldar-gm4.herokuapp.com/api/boilerType';\r\n\r\n//ACTION TO GET BOILERTYPE DATA\r\n\r\nconst getBoilerTypeFetching = () => ({\r\n    type: GET_BOILERTYPE_FETCHING,\r\n});\r\n\r\nconst getBoilerTypeFulfilled = (payload) => ({\r\n    type: GET_BOILERTYPE_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst getBoilerTypeRejected = () => ({\r\n    type: GET_BOILERTYPE_REJECTED,\r\n});\r\n\r\nexport const getBoilerTypes = () => (dispatch) =>{\r\n    dispatch(getBoilerTypeFetching());\r\n    return fetch(URL)\r\n        .then((data)=>data.json())\r\n        .then((response)=>{\r\n            dispatch(getBoilerTypeFulfilled(response));\r\n        })\r\n        .catch(() =>{\r\n            dispatch(getBoilerTypeRejected())\r\n        });\r\n};\r\n\r\n//ACTION TO ADD BOILERTYPE DATA\r\nconst addBoilerTypeFetching = () => ({\r\n    type: ADD_BOILERTYPE_FETCHING,\r\n});\r\n\r\nconst addBoilerTypeFulfilled = (payload) => ({\r\n    type: ADD_BOILERTYPE_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst addBoilerTypeRejected = () => ({\r\n    type: ADD_BOILERTYPE_REJECTED,\r\n});\r\n\r\nexport const addBoilerType = (skillsId,type,stock,description ) => dispatch =>{\r\n    dispatch(addBoilerTypeFetching());\r\n    const dataSend = { skillsId,type,stock,description };\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(dataSend),\r\n    };\r\n    return fetch(URL,requestOptions)\r\n        .then(data=> data.json())\r\n        .then(response =>{\r\n            dispatch(addBoilerTypeFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getBoilerTypes()))\r\n        .catch(() =>{\r\n            dispatch(addBoilerTypeRejected())\r\n        });\r\n};\r\n\r\n\r\n//ACTION TO DELETE BOILERTYPE DATA\r\n\r\nconst deleteBoilerTypeFetching = () => ({\r\n    type: DELETE_BOILERTYPE_FETCHING,\r\n});\r\n\r\nconst deleteBoilerTypeFulfilled = (payload) => ({\r\n    type: DELETE_BOILERTYPE_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst deleteBoilerTypeRejected = () => ({\r\n    type: DELETE_BOILERTYPE_REJECTED,\r\n});\r\n\r\nexport const deleteBoilerType = (_id) => (dispatch) =>{\r\n    dispatch(deleteBoilerTypeFetching());\r\n    const dataSend = { _id };\r\n    const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n    return fetch(`${URL}/${_id}`, requestOptions).then((data)=> data.json())\r\n        .then((response) =>{\r\n            dispatch(deleteBoilerTypeFulfilled(_id));\r\n        })\r\n        .then(() => dispatch(getBoilerTypes()))\r\n        .catch(() =>{\r\n            dispatch(deleteBoilerTypeRejected())\r\n        });\r\n};\r\n\r\n//ACTION TO EDIT BOILERTYPE DATA\r\n\r\nconst editBoilerTypeFetching = () => ({\r\n    type: EDIT_BOILERTYPE_FETCHING,\r\n});\r\n\r\nconst editBoilerTypeFulfilled = (payload) => ({\r\n    type: EDIT_BOILERTYPE_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst editBoilerTypeRejected = () => ({\r\n    type: EDIT_BOILERTYPE_REJECTED,\r\n});\r\n\r\nexport const editBoilerType = (_id, skillsId, type, stock, description ) => (dispatch) =>{\r\n    dispatch(editBoilerTypeFetching());\r\n\r\n    const dataSend = { _id, skillsId, type, stock, description };\r\n    const requestOptions = {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n  };\r\n\r\n    return fetch(`${URL}/${_id}`, requestOptions)\r\n        .then((data)=> data.json())\r\n        .then((response) =>{\r\n            dispatch(editBoilerTypeFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getBoilerTypes()))\r\n        .catch(() =>{\r\n            dispatch(editBoilerTypeRejected())\r\n        });\r\n};","import React, { Component } from \"react\";\r\nimport BoilerTypeList from \"./BoilerTypeList\";\r\nimport AddBoilerType from \"./AddBoilerType\";\r\nimport styles from '../../layout/main/main.module.css';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getBoilerTypes as getBoilerTypesActions,\r\n  deleteBoilerType as deleteBoilerTypeActions,\r\n  addBoilerType as addBoilerTypeActions,\r\n  editBoilerType as updateBoilerTypeActions,\r\n} from \"../../redux/actions/boilerTypesActions\"; \r\n\r\nclass BoilerType extends Component {\r\n  state = {\r\n    boilerTypeEdit: null,\r\n    showForm: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getBoilerTypes();\r\n  }\r\n\r\n  // Show form\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      boilerTypeEdit: null,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  //edit boiler type\r\n  editBoilerType = (bt) => {\r\n    this.setState({\r\n      boilerTypeEdit: bt,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n          <AddBoilerType \r\n            addBoilerType={this.props.addBoilerType}\r\n            updateBoilerType={this.props.updateBoilerType}\r\n            boilerTypeEdit={this.state.boilerTypeEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n        ) : (\r\n          <BoilerTypeList \r\n            boilerTypes={this.props.boilerTypes} \r\n            deleteBoilerType={this.props.deleteBoilerType}\r\n            editBoilerType={this.editBoilerType}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getBoilerTypes: () => dispatch(getBoilerTypesActions()),\r\n  deleteBoilerType: (_id) => dispatch(deleteBoilerTypeActions(_id)),\r\n  addBoilerType: (skillsId, type, stock, description) =>\r\n    dispatch(\r\n      addBoilerTypeActions(skillsId, type, stock, description)\r\n    ),\r\n  updateBoilerType: (_id, skillsId, type, stock, description) =>\r\n    dispatch(\r\n      updateBoilerTypeActions(\r\n        _id, skillsId, type, stock, description\r\n      )\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boilerTypes: state.boilerTypes.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoilerType);\r\n","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../../layout/main/main.module.css'\r\n\r\n export class AddBuilding extends Component {\r\n     state = {\r\n         _id:\"\",\r\n         boilersId:\"\",\r\n         businessName:\"\",\r\n         email:\"\",\r\n         phone:\"\",\r\n         adress:\"\",\r\n     };\r\n\r\n     componentDidMount() {\r\n        if (this.props.buildingEdit) {\r\n          this.handleEdit(this.props.buildingEdit);\r\n        }\r\n      }\r\n\r\n      handleCleanForm = () => {\r\n        this.setState({\r\n        _id: \"\",\r\n        boilersId: \"\",\r\n        businessName: \"\",\r\n        email: \"\",\r\n        phone: \"\",\r\n        adress: \"\",\r\n        });\r\n        this.props.handleShowForm();\r\n      };\r\n    \r\n      handleEdit = (buildingEdit) => {\r\n        this.setState({\r\n        _id: buildingEdit._id,\r\n        boilersId: buildingEdit.boilersId,\r\n        businessName: buildingEdit.businessName,\r\n        email: buildingEdit.email,\r\n        phone: buildingEdit.phone,\r\n        adress: buildingEdit.adress,\r\n        });\r\n      };\r\n\r\n     onSubmit = (e) => {\r\n         e.preventDefault();\r\n         if (this.state._id) {\r\n            this.props.updateBuilding(\r\n                this.state._id,\r\n                this.state.boilersId,\r\n                this.state.businessName,\r\n                this.state.email,\r\n                this.state.phone,\r\n                this.state.adress\r\n            );\r\n          } else {\r\n         this.props.addBuilding(\r\n            this.state.boilersId,\r\n            this.state.businessName,\r\n            this.state.email,\r\n            this.state.phone,\r\n            this.state.adress\r\n        );\r\n      }\r\n        //  this.setState({\r\n        //     id: \"\",\r\n        //      boilerId:\"\",\r\n        //      businessName:\"\",\r\n        //      email:\"\",\r\n        //      phone:\"\",\r\n        //      adress:\"\",\r\n        //     });\r\n      this.handleCleanForm();\r\n    };\r\n\r\n     onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <h3>\r\n                {this.state._id ? \"Edit building\" : \"Add new Building\"}\r\n                </h3>\r\n                <form onSubmit ={this.onSubmit} >\r\n                    <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"boilersId\"\r\n                    className={styles.input}\r\n                    placeholder=\"Add Boiler ID\"\r\n                    value={this.state.boilersId}\r\n                    onChange={this.onChange}\r\n                    />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"businessName\"\r\n                    className={styles.input}\r\n                    placeholder=\"Add Business Name\"\r\n                    value={this.state.businessName}\r\n                    onChange={this.onChange}\r\n                    />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"email\"\r\n                    className={styles.input}\r\n                    placeholder=\"Add e-mail\"\r\n                    value={this.state.email}\r\n                    onChange={this.onChange}\r\n                    />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"adress\"\r\n                    className={styles.input}\r\n                    placeholder=\"Add adress...\"\r\n                    value={this.state.adress}\r\n                    onChange={this.onChange}\r\n                    />\r\n                    <input\r\n                    type=\"text\"\r\n                    name=\"phone\"\r\n                    className={styles.input}\r\n                    placeholder=\"Add phone...\"\r\n                    value={this.state.phone}\r\n                    onChange={this.onChange}\r\n                    />\r\n\r\n                    <input \r\n                    type=\"button\"\r\n                    value= \"Cancel\"\r\n                    className={styles.input}\r\n                    onClick={this.handleCleanForm}\r\n                    />\r\n                    <input\r\n                    type=\"submit\"\r\n                    value=\"submit\"\r\n                    className={styles.input}\r\n                    />\r\n                </form>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n//proptypes\r\nAddBuilding.propTypes = {\r\n  addBuilding: PropTypes.func.isRequired,\r\n  updateBuilding: PropTypes.func.isRequired,\r\n   handleShowForm: PropTypes.func.isRequired,\r\n   buildingEdit: PropTypes.object,\r\n  };\r\n\r\nexport default AddBuilding ","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../../layout/main/main.module.css';\r\n\r\nexport class BuildingItem extends Component {\r\n\r\n    render() {\r\n        const  \r\n            {\r\n                _id, \r\n                boilersId,\r\n                businessName, \r\n                email, \r\n                phone, \r\n                adress,\r\n            } = this.props.building;\r\n        return (\r\n                   <tr>\r\n                       <td>\r\n                            {_id}\r\n                        </td>\r\n                        <td>\r\n                            {boilersId}\r\n                        </td>\r\n                        <td>\r\n                            {businessName}\r\n                        </td>\r\n                        <td>\r\n                            {email} \r\n                        </td>\r\n                        <td>\r\n                            {phone} \r\n                        </td>\r\n                        <td>\r\n                            {adress}\r\n                        </td>\r\n                        <td>\r\n                            <button \r\n                                onClick={this.props.delBuilding.bind(this, _id)} \r\n                                className={styles.btnStyle}>\r\n                                    x\r\n                            </button>\r\n                            <button \r\n                                onClick={this.props.editBuilding.bind(this, this.props.building)}\r\n                                className={styles.btnStyle}>\r\n                                    Edit\r\n                            </button>\r\n                        </td>\r\n                   </tr>\r\n        )\r\n    }\r\n}\r\n\r\n//proptypes\r\nBuildingItem.propTypes = {\r\n    building: PropTypes.object.isRequired,\r\n    delBuilding: PropTypes.func.isRequired,\r\n    editBuilding: PropTypes.func.isRequired,\r\n  };\r\n\r\nexport default BuildingItem;\r\n","import React, {Component} from 'react';\r\nimport BuildingItem from './BuildingItem';\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\nclass Buildings extends Component{\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n          <h1 className={styles.title}>\r\n            Buildings{\" \"}\r\n            <input\r\n              type=\"button\"\r\n              value=\"+\"\r\n              className={styles.btnStyleNew}\r\n              onClick={() =>this.props.handleShowForm()}\r\n            />\r\n          </h1>\r\n          <table className={styles.table}>\r\n          <thead>\r\n              <tr>\r\n                <th>Id</th>\r\n                <th>BoilersId</th>\r\n                <th>Business Name</th>\r\n                <th>E-mail</th>\r\n                <th>Phone</th>\r\n                <th>Address</th>\r\n                <th>Actions</th>\r\n              </tr>\r\n            </thead>\r\n          <tbody>\r\n        {this.props.buildings?.map((building, index) => (\r\n          <BuildingItem\r\n            key={index}\r\n            building={building}\r\n            delBuilding={this.props.delBuilding}\r\n            editBuilding={this.props.editBuilding}\r\n          />\r\n        ))}\r\n        </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//proptypes\r\nBuildings.propTypes = {\r\n  buildings: PropTypes.array.isRequired,\r\n  editBuilding: PropTypes.func.isRequired,\r\n  delBuilding: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  showForm: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Buildings;\r\n","\r\n//GET DATA\r\nexport const GET_BUILDING_FETCHING = 'GET_BUILDING_FETCHING';\r\nexport const GET_BUILDING_FULFILLED = 'GET_BUILDING_FULFILLED';\r\nexport const GET_BUILDING_REJECTED = 'GET_BUILDING_REJECTED';\r\n\r\n//ADD DATA\r\nexport const ADD_BUILDING_FETCHING = 'ADD_BUILDING_FETCHING';\r\nexport const ADD_BUILDING_FULFILLED = 'ADD_BUILDING_FULFILLED';\r\nexport const ADD_BUILDING_REJECTED = 'ADD_BUILDING_REJECTED';\r\n\r\n//DELETE DATA\r\nexport const DEL_BUILDING_FETCHING ='DEL_BUILDING_FETCHING';\r\nexport const DEL_BUILDING_FULFILLED ='DEL_BUILDING_FULFILLED';\r\nexport const DEL_BUILDING_REJECTED ='DEL_BUILDING_REJECTED';\r\n\r\n//EDIT DATA\r\nexport const EDIT_BUILDING_FETCHING ='EDIT_BUILDING_FETCHING';\r\nexport const EDIT_BUILDING_FULFILLED ='EDIT_BUILDING_FULFILLED';\r\nexport const EDIT_BUILDING_REJECTED ='EDIT_BUILDING_REJECTED';\r\n\r\n\r\n","import {\r\n    GET_BUILDING_FETCHING,\r\n    GET_BUILDING_FULFILLED,\r\n    GET_BUILDING_REJECTED,\r\n    ADD_BUILDING_FETCHING,\r\n    ADD_BUILDING_FULFILLED,\r\n    ADD_BUILDING_REJECTED,\r\n    DEL_BUILDING_FETCHING,\r\n    DEL_BUILDING_FULFILLED,\r\n    DEL_BUILDING_REJECTED,\r\n    EDIT_BUILDING_FETCHING,\r\n    EDIT_BUILDING_FULFILLED,\r\n    EDIT_BUILDING_REJECTED\r\n} from '../types/types-buildings.js'\r\n\r\n//DECLARATE CONST AND IMPORT API \r\nconst URL= \"https://app-caldar-gm4.herokuapp.com/api/buildings\";\r\n\r\n//ACTION TO GET BUILDING DATA\r\n\r\nconst getBuildingFetching = () => ({\r\n    type: GET_BUILDING_FETCHING,\r\n});\r\n\r\nconst getBuildingFulfilled = (payload) => ({\r\n    type: GET_BUILDING_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst getBuildingRejected = () => ({\r\n    type: GET_BUILDING_REJECTED,\r\n});\r\n\r\nexport const getBuildings = () => dispatch =>{\r\n    dispatch(getBuildingFetching());\r\n    return fetch(URL)\r\n        .then((data)=>data.json())\r\n        .then((response)=>{\r\n            dispatch(getBuildingFulfilled(response));\r\n        })\r\n        .catch(() =>{\r\n            dispatch(getBuildingRejected())\r\n        });\r\n};\r\n\r\n//ACTION TO ADD BUILDING DATA\r\n\r\nconst addBuildingFetching = () => ({\r\n    type: ADD_BUILDING_FETCHING,\r\n});\r\n\r\nconst addBuildingFulfilled = (payload) => ({\r\n    type: ADD_BUILDING_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst addBuildingRejected = () => ({\r\n    type: ADD_BUILDING_REJECTED,\r\n});\r\n\r\nexport const addBuilding = (\r\n    boilersId,\r\n    businessName,\r\n    email,\r\n    phone,\r\n    adress\r\n) => (dispatch) => {\r\n    dispatch(addBuildingFetching());\r\n    const dataSend = {\r\n        boilersId,\r\n        businessName,\r\n        email,\r\n        phone,\r\n        adress\r\n    }; \r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n    };\r\n    return fetch(URL, requestOptions)\r\n        .then((data)=> data.json())\r\n        .then((response) =>{\r\n            dispatch(addBuildingFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getBuildings()))\r\n        .catch(() =>{\r\n            dispatch(addBuildingRejected())\r\n        });\r\n};\r\n\r\n//ACTION TO DELETE BUILDING DATA\r\n\r\nconst delBuildingFetching = () => ({\r\n    type: DEL_BUILDING_FETCHING,\r\n});\r\n\r\nconst delBuildingFulfilled = (payload) => ({\r\n    type: DEL_BUILDING_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst delBuildingRejected = () => ({\r\n    type: DEL_BUILDING_REJECTED,\r\n});\r\n\r\nexport const delBuilding = (_id) => (dispatch) =>{\r\n    dispatch(delBuildingFetching());\r\n    const dataSend = {_id};\r\n    const requestOptions = {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n    };\r\n    return fetch(`${URL}/${_id}`, requestOptions)\r\n        .then((data) => data.json())\r\n        .then((response) => {\r\n            dispatch(delBuildingFulfilled(_id));\r\n        })\r\n        .catch(() =>{\r\n            dispatch(delBuildingRejected());\r\n        });\r\n};\r\n\r\n//ACTION TO EDIT BUILDING DATA\r\n\r\nconst editBuildingFetching = () => ({\r\n    type: EDIT_BUILDING_FETCHING,\r\n});\r\n\r\nconst editBuildingFulfilled = (payload) => ({\r\n    type: EDIT_BUILDING_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst editBuildingRejected = () => ({\r\n    type: EDIT_BUILDING_REJECTED,\r\n});\r\n\r\nexport const editBuilding = (\r\n        _id,\r\n        boilersId,\r\n        businessName,\r\n        email,\r\n        phone,\r\n        adress\r\n) => (dispatch) =>{\r\n    dispatch(editBuildingFetching());\r\n\r\n    const dataSend= {\r\n        _id,\r\n        boilersId,\r\n        businessName,\r\n        email,\r\n        phone,\r\n        adress\r\n    }\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n    }\r\n    return fetch(`${URL}/${_id}`, requestOptions )\r\n    .then((data)=> data.json())\r\n        .then((response) =>{\r\n            dispatch(editBuildingFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getBuildings()))\r\n        .catch(() =>{\r\n            dispatch(editBuildingRejected())\r\n        });\r\n};\r\n","import React, { Component } from 'react';\r\nimport AddBuilding from './AddBuilding';\r\nimport BuildingsList from './BuildingsList';\r\n// import { v4 as uuidv4 } from 'uuid';\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport {\r\n    getBuildings as getBuildingActions,\r\n    addBuilding as addBuildingActions,\r\n    delBuilding as delBuildingActions,\r\n    editBuilding as updateBuildingActions \r\n} from '../../redux/actions/buildingsActions';\r\nimport { connect} from 'react-redux';\r\n// import {bindActionCreators} from 'redux'\r\n\r\n\r\n//Set Building Object\r\nclass Buildings extends Component {\r\n  state = {\r\n    // buildings: [],\r\n    buildingEdit: null,\r\n    showForm: false,\r\n  };\r\n\r\n\r\n//Get Data from JSON.Files\r\n// componentDidMount(){\r\n//   const getBuilding = require(\"../../data/buildingData.json\");\r\n//   this.setState({buildings: getBuilding});\r\n// }\r\n\r\n//Get data from API\r\ncomponentDidMount() {\r\n  this.props.getBuildings();\r\n}\r\n\r\n\r\n// Show form\r\nhandleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      buildingEdit: null,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n// Edit Building\r\neditBuilding = (building) => {\r\n  this.setState({\r\n    buildingEdit: building,\r\n    showForm: true,\r\n  });\r\n  window.scrollTo(0, 0);\r\n};\r\n\r\n// // Update Customer\r\n// updateBuilding = (\r\n//   id,\r\n//   boilerId,\r\n//   businessName,\r\n//   email,\r\n//   phone,\r\n//   adress\r\n// ) => {\r\n  \r\n//   this.setState({\r\n//     buildings: this.state.buildings.map((building) => {\r\n//       if (building.id === id) {\r\n//         building.boilerId = boilerId;\r\n//         building.email = email;\r\n//         building.businessName = businessName;\r\n//         building.adress = adress;\r\n//         building.phone = phone;\r\n//       }\r\n//       return building;\r\n//     }),\r\n//     showForm: false,\r\n//   });\r\n// };\r\n\r\n//Delete building\r\n\r\n// delBuilding = (id) =>{\r\n//   this.setState({ \r\n//       buildings: [\r\n//           ...this.state.buildings.filter((building) => building.id !==id),\r\n//             ],\r\n//         showForm: false,\r\n//     });\r\n// };\r\n\r\n// //Add Building\r\n\r\n// AddBuilding = (boilerId, businessName,email,phone,adress) =>{\r\n//   const newBuilding ={\r\n//     id: uuidv4(),\r\n//     boilerId,\r\n//     businessName,\r\n//     email,\r\n//     phone,\r\n//     adress\r\n//   };\r\n//   this.setState({ \r\n//       buildings: [...this.state.buildings, newBuilding],\r\n//     showForm: false,\r\n//     });\r\n// };\r\n\r\nrender() {\r\n    return (\r\n      <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n          <AddBuilding\r\n            addBuilding={this.props.addBuilding}\r\n            updateBuilding={this.props.updateBuilding}\r\n            buildingEdit={this.state.buildingEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n        ) : (\r\n          <BuildingsList\r\n            buildings={this.props.buildings}\r\n            delBuilding={this.props.delBuilding}\r\n            editBuilding={this.editBuilding}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}  \r\n\r\nconst mapDispatchToProps = (dispatch) =>({\r\n    getBuildings: () => dispatch(getBuildingActions()),\r\n    delBuilding:(_id) => dispatch(delBuildingActions(_id)),\r\n    addBuilding: (boilersId, businessName,email,phone,adress) =>\r\n      dispatch(\r\n        addBuildingActions(boilersId, businessName,email,phone,adress )\r\n      ),\r\n    updateBuilding:(_id, boilersId, businessName,email,phone,adress ) =>\r\n        dispatch(\r\n          updateBuildingActions(\r\n            _id,\r\n              boilersId,\r\n             businessName,\r\n             email,\r\n             phone,\r\n             adress\r\n          )\r\n        ),\r\n  });\r\n \r\nconst mapStateToProps = state =>{\r\n  return{\r\n    buildings: state.buildings.list,\r\n  };\r\n};\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Buildings);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class CustomerItem extends Component {\r\n  render() {\r\n    const {\r\n      _id,\r\n      customerType,\r\n      email,\r\n      buildingsIds,\r\n      fiscalAddress,\r\n    } = this.props.customer;\r\n    return (\r\n      <tr>\r\n        <td>{_id}</td>\r\n        <td>{customerType}</td>\r\n        <td>{email}</td>\r\n        <td>{buildingsIds}</td>\r\n        <td>{fiscalAddress}</td>\r\n        <td>\r\n          <button\r\n            onClick={this.props.delCustomer.bind(this, _id)}\r\n            className={styles.btnStyle}\r\n          >\r\n            delete\r\n          </button>\r\n          <button\r\n            onClick={this.props.editCustomer.bind(this, this.props.customer)}\r\n            className={styles.btnStyle}\r\n          >\r\n            edit\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nCustomerItem.propTypes = {\r\n  customer: PropTypes.object.isRequired,\r\n  delCustomer: PropTypes.func.isRequired,\r\n  editCustomer: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CustomerItem;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CustomerItem from \"./CustomerItem\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass Customers extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          Customers{\" \"}\r\n          <input\r\n            type=\"button\"\r\n            value=\"New\"\r\n            className={styles.input}\r\n            onClick={() => this.props.handleShowForm()}\r\n          />\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>id</th>\r\n              <th>Type</th>\r\n              <th>Email</th>\r\n              <th>Buildings Ids</th>\r\n              <th>Fiscal address</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.customers?.map((customer, index) => (\r\n              <CustomerItem\r\n                key={index}\r\n                customer={customer}\r\n                delCustomer={this.props.delCustomer}\r\n                editCustomer={this.props.editCustomer}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nCustomers.propTypes = {\r\n  customers: PropTypes.array.isRequired,\r\n  delCustomer: PropTypes.func.isRequired,\r\n  editCustomer: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  showForm: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Customers;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class AddCustomer extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    customerType: \"\",\r\n    email: \"\",\r\n    buildingsIds: \"\",\r\n    fiscalAddress: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.customerEdit) {\r\n      this.handleEdit(this.props.customerEdit);\r\n    }\r\n  }\r\n\r\n  handleCleanForm = () => {\r\n    this.setState({\r\n      _id: \"\",\r\n      typeId: \"\",\r\n      maintainceRate: \"\",\r\n      hourMaintainceCost: \"\",\r\n      hourEventualCost: \"\",\r\n    });\r\n    this.props.handleShowForm();\r\n  };\r\n\r\n  handleEdit = (customerEdit) => {\r\n    this.setState({\r\n      _id: customerEdit._id,\r\n      customerType: customerEdit.customerType,\r\n      email: customerEdit.email,\r\n      buildingsIds: customerEdit.buildingsIds.toString(),\r\n      fiscalAddress: customerEdit.fiscalAddress,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state._id) {\r\n      this.props.updateCustomer(\r\n        this.state._id,\r\n        this.state.customerType,\r\n        this.state.email,\r\n        this.state.buildingsIds,\r\n        this.state.fiscalAddress\r\n      );\r\n    } else {\r\n      this.props.addCustomer(\r\n        this.state.customerType,\r\n        this.state.email,\r\n        this.state.buildingsIds,\r\n        this.state.fiscalAddress\r\n      );\r\n    }\r\n    this.handleCleanForm();\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h3>{this.state._id ? \"Edit customer\" : \"Add new customer\"}</h3>\r\n        <form onSubmit={this.onSubmit}>\r\n          <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"customerType\"\r\n            className={styles.input}\r\n            placeholder=\"Type customer...\"\r\n            value={this.state.customerType}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            className={styles.input}\r\n            placeholder=\"Email ...\"\r\n            value={this.state.email}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"buildingsIds\"\r\n            className={styles.input}\r\n            placeholder=\"Buildings separated by commas...\"\r\n            value={this.state.buildingsIds}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"fiscalAddress\"\r\n            className={styles.input}\r\n            placeholder=\"Fiscal address ...\"\r\n            value={this.state.fiscalAddress}\r\n            onChange={this.onChange}\r\n          />\r\n\r\n          <input type=\"submit\" value=\"Submit\" className={styles.input} />\r\n          <input\r\n            type=\"button\"\r\n            value=\"Cancel\"\r\n            className={styles.input}\r\n            onClick={this.handleCleanForm}\r\n          />\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddCustomer.propTypes = {\r\n  addCustomer: PropTypes.func.isRequired,\r\n  updateCustomer: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  customerEdit: PropTypes.object,\r\n};\r\n\r\nexport default AddCustomer;\r\n","//GET DATA\r\nexport const GET_CUSTOMER_FETCHING = 'GET_CUSTOMER_FETCHING';\r\nexport const GET_CUSTOMER_FULFILLED = 'GET_CUSTOMER_FULFILLED';\r\nexport const GET_CUSTOMER_REJECTED = 'GET_CUSTOMER_REJECTED';\r\n\r\n//ADD DATA\r\nexport const ADD_CUSTOMER_FETCHING = 'ADD_CUSTOMER_FETCHING';\r\nexport const ADD_CUSTOMER_FULFILLED = 'ADD_CUSTOMER_FULFILLED';\r\nexport const ADD_CUSTOMER_REJECTED = 'ADD_CUSTOMER_REJECTED';\r\n\r\n//DELETE DATA\r\nexport const DEL_CUSTOMER_FETCHING ='DEL_CUSTOMER_FETCHING';\r\nexport const DEL_CUSTOMER_FULFILLED ='DEL_CUSTOMER_FULFILLED';\r\nexport const DEL_CUSTOMER_REJECTED ='DEL_CUSTOMER_REJECTED';\r\n\r\n//EDIT DATA\r\nexport const EDIT_CUSTOMER_FETCHING ='EDIT_CUSTOMER_FETCHING';\r\nexport const EDIT_CUSTOMER_FULFILLED ='EDIT_CUSTOMER_FULFILLED';\r\nexport const EDIT_CUSTOMER_REJECTED ='EDIT_CUSTOMER_REJECTED';","import {\r\n  GET_CUSTOMER_FETCHING,\r\n  GET_CUSTOMER_FULFILLED,\r\n  GET_CUSTOMER_REJECTED,\r\n  ADD_CUSTOMER_FETCHING,\r\n  ADD_CUSTOMER_FULFILLED,\r\n  ADD_CUSTOMER_REJECTED,\r\n  DEL_CUSTOMER_FETCHING,\r\n  DEL_CUSTOMER_FULFILLED,\r\n  DEL_CUSTOMER_REJECTED,\r\n  EDIT_CUSTOMER_FETCHING,\r\n  EDIT_CUSTOMER_FULFILLED,\r\n  EDIT_CUSTOMER_REJECTED,\r\n} from \"../types/types-customers\";\r\n\r\n//DECLARATE CONST AND IMPORT API\r\nconst URL = \"https://app-caldar-gm4.herokuapp.com/api/customers\";\r\n\r\n//ACTION TO GET CUSTOMER DATA\r\n\r\nconst getCustomerFetching = () => ({\r\n  type: GET_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst getCustomerFulfilled = (payload) => ({\r\n  type: GET_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst getCustomerRejected = () => ({\r\n  type: GET_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const getCustomers = () => (dispatch) => {\r\n  dispatch(getCustomerFetching());\r\n  return fetch(URL)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(getCustomerFulfilled(response));\r\n    })\r\n    .catch(() => {\r\n      dispatch(getCustomerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO ADD CUSTOMER DATA\r\nconst addCustomerFetching = () => ({\r\n  type: ADD_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst addCustomerFulfilled = (payload) => ({\r\n  type: ADD_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst addCustomerRejected = () => ({\r\n  type: ADD_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const addCustomer = (\r\n  customerType,\r\n  email,\r\n  buildingsIds,\r\n  fiscalAddress\r\n) => (dispatch) => {\r\n  dispatch(addCustomerFetching());\r\n  const dataSend = { customerType, email, buildingsIds, fiscalAddress };\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(URL, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(addCustomerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getCustomers()))\r\n    .catch(() => {\r\n      dispatch(addCustomerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO DELETE CUSTOMER DATA\r\n\r\nconst delCustomerFetching = () => ({\r\n  type: DEL_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst delCustomerFulfilled = (payload) => ({\r\n  type: DEL_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst delCustomerRejected = () => ({\r\n  type: DEL_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const delCustomer = (_id) => (dispatch) => {\r\n  dispatch(delCustomerFetching());\r\n  const dataSend = { _id };\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(delCustomerFulfilled(_id));\r\n    })\r\n    .then(() => dispatch(getCustomers()))\r\n    .catch(() => {\r\n      dispatch(delCustomerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO EDIT CUSTOMER DATA\r\n\r\nconst editCustomerFetching = () => ({\r\n  type: EDIT_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst editCustomerFulfilled = (payload) => ({\r\n  type: EDIT_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst editCustomerRejected = () => ({\r\n  type: EDIT_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const editCustomer = (\r\n  _id,\r\n  customerType,\r\n  email,\r\n  buildingsIds,\r\n  fiscalAddress\r\n) => (dispatch) => {\r\n  dispatch(editCustomerFetching());\r\n\r\n  const dataSend = { _id, customerType, email, buildingsIds, fiscalAddress };\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return fetch(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(editCustomerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getCustomers()))\r\n    .catch(() => {\r\n      dispatch(editCustomerRejected());\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport CustomersList from \"./CustomersList\";\r\nimport AddCustomer from \"./AddCustomer\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCustomers as getCustomersActions,\r\n  delCustomer as delCustomerActions,\r\n  addCustomer as addCustomerActions,\r\n  editCustomer as updateCustomerActions,\r\n} from \"../../redux/actions/customersActions\";\r\n\r\nclass Customers extends Component {\r\n  state = {\r\n    customerEdit: null,\r\n    showForm: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getCustomers();\r\n  }\r\n\r\n  // Show form\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      customerEdit: null,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // Edit Customer\r\n  editCustomer = (customer) => {\r\n    this.setState({\r\n      customerEdit: customer,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n          <AddCustomer\r\n            addCustomer={this.props.addCustomer}\r\n            updateCustomer={this.props.updateCustomer}\r\n            customerEdit={this.state.customerEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n        ) : (\r\n          <CustomersList\r\n            customers={this.props.customers}\r\n            delCustomer={this.props.delCustomer}\r\n            editCustomer={this.editCustomer}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCustomers: () => dispatch(getCustomersActions()),\r\n  delCustomer: (_id) => dispatch(delCustomerActions(_id)),\r\n  addCustomer: (customerType, email, buildingsIds, fiscalAddress) =>\r\n    dispatch(\r\n      addCustomerActions(customerType, email, buildingsIds, fiscalAddress)\r\n    ),\r\n  updateCustomer: (_id, customerType, email, buildingsIds, fiscalAddress) =>\r\n    dispatch(\r\n      updateCustomerActions(\r\n        _id,\r\n        customerType,\r\n        email,\r\n        buildingsIds,\r\n        fiscalAddress\r\n      )\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  customers: state.customers.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Customers);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class Technicianitem extends Component {\r\n\r\n    render() {\r\n        const { _id, firstName, lastName, email, typeIds, skillsId, hour_rate, daily_capacity} = this.props.technician;\r\n        return (\r\n            <tr>\r\n                <td>{_id   }  </td>\r\n                <td>{firstName   }  </td>\r\n                <td>{lastName}</td>\r\n                <td>{email}</td>\r\n                <td>{typeIds}</td>\r\n                <td>{skillsId}</td>\r\n                <td>{hour_rate}</td>\r\n                <td>{daily_capacity}</td>\r\n                <td>\r\n                    <button onClick={this.props.delTechnician.bind(this, _id)} className={styles.btnStyle}>x</button>\r\n                    <button onClick={this.props.editTechnician.bind(this, this.props.technician)} className={styles.btnStyle}>Edit</button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n// Prop types\r\nTechnicianitem.propTypes = {\r\n    technician: PropTypes.object.isRequired,\r\n    delTechnician: PropTypes.func.isRequired,\r\n    editTechnician: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Technicianitem\r\n","import React, { Component } from 'react';\r\nimport TechnicianItem from './TechnicianItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass TechniciansList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>\r\n          Technicians{\" \"}\r\n          <input\r\n            type=\"button\"\r\n            value=\"New\"\r\n            className={styles.input}\r\n            onClick={() => this.props.handleShowForm()}\r\n          />\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n            <tr>\r\n              <th>id</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Type Ids</th>\r\n              <th>Skills Id</th>\r\n              <th>Hour Rate</th>\r\n              <th>Daily Capacity</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.technicians.map((technician, index) => (\r\n              <TechnicianItem\r\n                key={index}\r\n                technician={technician}\r\n                editTechnician={this.props.editTechnician}\r\n                delTechnician={this.props.delTechnician}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Prop types\r\nTechniciansList.propTypes = {\r\n    technicians: PropTypes.array.isRequired,\r\n    delTechnician: PropTypes.func.isRequired,\r\n    editTechnician: PropTypes.func.isRequired,\r\n    handleShowForm: PropTypes.func.isRequired,\r\n    showForm: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default TechniciansList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class AddTechnician extends Component {\r\n    state = {\r\n        _id:\"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        typeIds: \"\",\r\n        skillsId: \"\",\r\n        hour_rate: \"\",\r\n        daily_capacity: \"\",\r\n      };\r\n\r\n    componentDidMount(){\r\n      if (this.props.technicianEdit) {\r\n      this.handleEdit(this.props.technicianEdit);\r\n    }\r\n  }\r\n    handleCleanForm = () => {\r\n      this.setState({\r\n        _id:\"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        typeIds: \"\",\r\n        skillsId: \"\",\r\n        hour_rate: \"\",\r\n        daily_capacity: \"\",\r\n        });\r\n        this.props.handleShowForm();\r\n  }\r\n    \r\n    handleEdit = (technicianEdit) => {\r\n        this.setState({\r\n            _id: technicianEdit._id,\r\n            firstName: technicianEdit.firstName,\r\n            lastName: technicianEdit.lastName,\r\n            email: technicianEdit.email,\r\n            typeIds: technicianEdit.typeIds,\r\n            skillsId: technicianEdit.skillsId,\r\n            hour_rate: technicianEdit.hour_rate,\r\n            daily_capacity: technicianEdit.daily_capacity,\r\n        });\r\n    };\r\n\r\n\r\n      onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state._id) {\r\n            this.props.updateTechnician(\r\n                this.state._id,\r\n                this.state.firstName,\r\n                this.state.lastName,\r\n                this.state.email,\r\n                this.state.typeIds,\r\n                this.state.skillsId,\r\n                this.state.hour_rate,\r\n                this.state.daily_capacity,\r\n            );\r\n        } else {\r\n            this.props.addTechnician(\r\n                this.state.firstName,\r\n                this.state.lastName,\r\n                this.state.email,\r\n                this.state.typeIds,\r\n                this.state.skillsId,\r\n                this.state.hour_rate,\r\n                this.state.daily_capacity,\r\n            );\r\n        }\r\n        this.handleCleanForm();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h3>{this.state._id ? \"Edit Technician\" : \"Add new Technician\"}</h3>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            className={styles.input}\r\n                            placeholder=\"First Name...\"\r\n                            value={this.state.firstName}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            className={styles.input}\r\n                            placeholder=\"Last Name...\"\r\n                            value={this.state.lastName}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className={styles.input}\r\n                            placeholder=\"Email...\"\r\n                            value={this.state.email}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"typeIds\"\r\n                            className={styles.input}\r\n                            placeholder=\"Type Ids...\"\r\n                            value={this.state.typeIds}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"skillsId\"\r\n                            className={styles.input}\r\n                            placeholder=\"Skills Id...\"\r\n                            value={this.state.skillsId}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"hour_rate\"\r\n                            className={styles.input}\r\n                            placeholder=\"Hour rate...\"\r\n                            value={this.state.hour_rate}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"daily_capacity\"\r\n                            className={styles.input}\r\n                            placeholder=\"Daily capacity...\"\r\n                            value={this.state.daily_capacity}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"submit\"\r\n                            value=\"Submit\"\r\n                            className={styles.input}\r\n                        />\r\n                        <input\r\n                            type=\"button\"\r\n                            value=\"Cancel\"\r\n                            className={styles.input}\r\n                            onClick={this.handleCleanForm}\r\n                        />\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Prop types\r\nAddTechnician.propTypes = {\r\n    addTechnician: PropTypes.func.isRequired,\r\n    updateTechnician: PropTypes.func.isRequired,\r\n    handleShowForm: PropTypes.func.isRequired,\r\n    technicianEdit: PropTypes.object,\r\n}\r\n\r\nexport default AddTechnician;","export const GET_TECHNICIANS_FETCHING = 'GET_TECHNICIANS_FETCHING';\r\nexport const GET_TECHNICIANS_FULFILLED = 'GET_TECHNICIANS_FULFILLED';\r\nexport const GET_TECHNICIANS_REJECTED = 'GET_TECHNICIANS_REJECTED';\r\n\r\nexport const ADD_TECHNICIANS_FETCHING = 'ADD_TECHNICIANS_FETCHING';\r\nexport const ADD_TECHNICIANS_FULFILLED = 'ADD_TECHNICIANS_FULFILLED';\r\nexport const ADD_TECHNICIANS_REJECTED = 'ADD_TECHNICIANS_REJECTED';\r\n\r\nexport const DEL_TECHNICIANS_FETCHING = 'DEL_TECHNICIANS_FETCHING';\r\nexport const DEL_TECHNICIANS_FULFILLED = 'DEL_TECHNICIANS_FULFILLED';\r\nexport const DEL_TECHNICIANS_REJECTED = 'DEL_TECHNICIANS_REJECTED';\r\n\r\nexport const EDIT_TECHNICIANS_FETCHING = 'EDIT_TECHNICIANS_FETCHING';\r\nexport const EDIT_TECHNICIANS_FULFILLED = 'EDIT_TECHNICIANS_FULFILLED';\r\nexport const EDIT_TECHNICIANS_REJECTED = 'EDIT_TECHNICIANS_REJECTED';","import {\r\n    GET_TECHNICIANS_FETCHING,\r\n    GET_TECHNICIANS_FULFILLED,\r\n    GET_TECHNICIANS_REJECTED,\r\n    ADD_TECHNICIANS_FETCHING,\r\n    ADD_TECHNICIANS_FULFILLED,\r\n    ADD_TECHNICIANS_REJECTED,\r\n    DEL_TECHNICIANS_FETCHING,\r\n    DEL_TECHNICIANS_FULFILLED,\r\n    DEL_TECHNICIANS_REJECTED,\r\n    EDIT_TECHNICIANS_FETCHING,\r\n    EDIT_TECHNICIANS_FULFILLED,\r\n    EDIT_TECHNICIANS_REJECTED\r\n} from '../types/types-technicians';\r\n\r\nconst URL = 'https://app-caldar-gm4.herokuapp.com/api/technician';\r\n\r\nconst getTechniciansFetching = () => ({\r\n    type: GET_TECHNICIANS_FETCHING,\r\n});\r\n\r\nconst getTechniciansFulfilled = (payload) => ({\r\n    type: GET_TECHNICIANS_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst getTechniciansRejected = () => ({\r\n    type: GET_TECHNICIANS_REJECTED,\r\n});\r\n\r\nexport const getTechnicians = () => (dispatch) => {\r\n    dispatch(getTechniciansFetching());\r\n    return fetch(URL)\r\n        .then(data => data.json())\r\n        .then(response => {\r\n            dispatch(getTechniciansFulfilled(response));\r\n        })\r\n        .catch(() => {\r\n            dispatch(getTechniciansRejected ());\r\n        })\r\n};\r\n\r\nconst addTechniciansFetching = () => ({\r\n    type: ADD_TECHNICIANS_FETCHING,\r\n});\r\n\r\nconst addTechniciansFulfilled = (payload) => ({\r\n    type: ADD_TECHNICIANS_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst addTechniciansRejected = () => ({\r\n    type: ADD_TECHNICIANS_REJECTED,\r\n});\r\n\r\nexport const addTechnicians = (\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    typeIds,\r\n    skillsId,\r\n    hour_rate,\r\n    daily_capacity,\r\n) => (dispatch) => {\r\n    dispatch(addTechniciansFetching());\r\n    const dataSend = {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        typeIds,\r\n        skillsId,\r\n        hour_rate,\r\n        daily_capacity,\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n      };\r\n    return fetch(URL, requestOptions)\r\n        .then(data=> data.json())\r\n        .then(response => {\r\n            dispatch(addTechniciansFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getTechnicians()))\r\n        .catch(() => {\r\n            dispatch(addTechniciansRejected ());\r\n        })\r\n};\r\n\r\nconst editTechniciansFetching = () => ({\r\n    type: EDIT_TECHNICIANS_FETCHING,\r\n});\r\n\r\nconst editTechniciansFulfilled = (payload) => ({\r\n    type: EDIT_TECHNICIANS_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst editTechniciansRejected = () => ({\r\n    type: EDIT_TECHNICIANS_REJECTED,\r\n});\r\n\r\nexport const editTechnicians = (\r\n    _id,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    typeIds,\r\n    skillsId,\r\n    hour_rate,\r\n    daily_capacity,\r\n) => (dispatch) => {\r\n    dispatch(editTechniciansFetching());\r\n    const dataSend = {\r\n        _id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        typeIds,\r\n        skillsId,\r\n        hour_rate,\r\n        daily_capacity,\r\n      };\r\n      const requestOptions = {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n      };\r\n    return fetch(`${URL}/${_id}`, requestOptions)\r\n        .then(data=> data.json())\r\n        .then(response => {\r\n            dispatch(editTechniciansFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getTechnicians()))\r\n        .catch(() => {\r\n            dispatch(editTechniciansRejected ());\r\n        })\r\n};\r\n\r\nconst delTechniciansFetching = () => ({\r\n    type: DEL_TECHNICIANS_FETCHING,\r\n});\r\n\r\nconst delTechniciansFulfilled = (payload) => ({\r\n    type: DEL_TECHNICIANS_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst delTechniciansRejected = () => ({\r\n    type: DEL_TECHNICIANS_REJECTED,\r\n});\r\n\r\nexport const delTechnicians = (_id) => (dispatch) => {\r\n    dispatch(delTechniciansFetching());\r\n    const dataSend = { _id };\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(dataSend),\r\n    };\r\n    return fetch(`${URL}/${_id}`, requestOptions)\r\n        .then(data => data.json())\r\n        .then(response => {\r\n            dispatch(delTechniciansFulfilled(_id));\r\n        })\r\n        .then(() => dispatch(getTechnicians()))\r\n        .catch(() => {\r\n            dispatch(delTechniciansRejected ());\r\n        })\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport TechniciansList from \"./TechniciansList\";\r\nimport AddTechnician from \"./AddTechnician\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getTechnicians as getTechniciansActions,\r\n  delTechnicians as delTechniciansActions,\r\n  addTechnicians as addTechniciansActions,\r\n  editTechnicians as updateTechniciansActions,\r\n} from \"../../redux/actions/techniciansActions\";\r\n\r\nclass Technicians extends Component {\r\n  state = {\r\n    technicianEdit: null,\r\n    showForm: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getTechnicians();\r\n  }\r\n\r\n  // Show form\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      technicianEdit: null\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // Edit Technician\r\n  editTechnician = (technician) => {\r\n    this.setState({\r\n      technicianEdit: technician,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.info}>\r\n          {this.state.showForm ? (\r\n          <AddTechnician\r\n            addTechnician={this.props.addTechnicians}\r\n            updateTechnician={this.props.updateTechnicians}\r\n            technicianEdit={this.state.technicianEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n          ) : (\r\n          <TechniciansList\r\n            technicians={this.props.technicians}\r\n            delTechnician={this.props.delTechnicians}\r\n            editTechnician={this.editTechnician}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getTechnicians: () => dispatch(getTechniciansActions()),\r\n  delTechnicians: (_id) => dispatch(delTechniciansActions(_id)),\r\n  addTechnicians: (firstName, lastName, email, typeIds, skillsId, hour_rate, daily_capacity) =>\r\n    dispatch(\r\n      addTechniciansActions(\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        typeIds,\r\n        skillsId,\r\n        hour_rate,\r\n        daily_capacity,\r\n      )\r\n    ),\r\n  updateTechnicians: (\r\n    _id,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    typeIds,\r\n    skillsId,\r\n    hour_rate,\r\n    daily_capacity,\r\n  ) =>\r\n    dispatch(\r\n      updateTechniciansActions(\r\n        _id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        typeIds,\r\n        skillsId,\r\n        hour_rate,\r\n        daily_capacity,\r\n      )\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  technicians: state.technicians.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Technicians);","import React from 'react';\r\nimport styles from './App.module.css';\r\nimport Navbar from './layout/navbar/navbar';\r\nimport Header from './layout/header/header';\r\nimport Appointments from './components/Appointments/Appointments';\r\nimport Boilers from './components/Boilers/Boilers';\r\nimport BoilersTypes from './components/BoilersTypes/BoilersTypes';\r\nimport Buildings from './components/Buildings/Buildings';\r\nimport Customers from './components/Customers/Customers';\r\nimport Technicians from './components/Technicians/Technicians';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom'\r\n\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div className={styles.wrapper}>\r\n          <Navbar />\r\n          <div className={styles.mainContent}>\r\n            <Header/>\r\n            <Switch>\r\n              <Route path=\"/appointments\" component={Appointments}/>\r\n              <Route path=\"/boilers\" component={Boilers}/>\r\n              <Route path=\"/boilersTypes\" component={BoilersTypes}/>\r\n              <Route path=\"/buildings\" component={Buildings}/>\r\n              <Route path=\"/customers\" component={Customers}/>\r\n              <Route path=\"/technicians\" component={Technicians} />\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import {\r\n    GET_APPOINTMENT_FETCHING,\r\n    GET_APPOINTMENT_FULFILLED,\r\n    GET_APPOINTMENT_REJECTED,\r\n    ADD_APPOINTMENT_FETCHING,\r\n    ADD_APPOINTMENT_FULFILLED,\r\n    ADD_APPOINTMENT_REJECTED,\r\n    DEL_APPOINTMENT_FETCHING,\r\n    DEL_APPOINTMENT_FULFILLED,\r\n    DEL_APPOINTMENT_REJECTED,\r\n    EDIT_APPOINTMENT_FETCHING,\r\n    EDIT_APPOINTMENT_FULFILLED,\r\n    EDIT_APPOINTMENT_REJECTED,\r\n} from '../types/types-appointments'\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    list: [],\r\n    error: false\r\n};\r\n\r\nconst appointmentsReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case GET_APPOINTMENT_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case GET_APPOINTMENT_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list: action.payload\r\n            };\r\n        case GET_APPOINTMENT_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        case ADD_APPOINTMENT_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case ADD_APPOINTMENT_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list:[\r\n                    ...state.list, action.payload\r\n                ]\r\n            };\r\n        case ADD_APPOINTMENT_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case DEL_APPOINTMENT_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case DEL_APPOINTMENT_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list: state.list.filter(\r\n                    (appointment) =>{\r\n                        return appointment._id !== action.payload\r\n                    })\r\n                };\r\n        case DEL_APPOINTMENT_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case EDIT_APPOINTMENT_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case EDIT_APPOINTMENT_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list:[\r\n                    ...state.list,\r\n                    {\r\n                        _id: action._id,\r\n                        text: action.text,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            };\r\n\r\n        case EDIT_APPOINTMENT_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        default:\r\n             return state;\r\n    }\r\n}\r\n\r\nexport default appointmentsReducer;","import {\r\n    GET_BOILER_FETCHING,\r\n    GET_BOILER_FULFILLED,\r\n    GET_BOILER_REJECTED,\r\n    ADD_BOILER_FETCHING,\r\n    ADD_BOILER_FULFILLED,\r\n    ADD_BOILER_REJECTED,\r\n    DEL_BOILER_FETCHING,\r\n    DEL_BOILER_FULFILLED,\r\n    DEL_BOILER_REJECTED,\r\n    EDIT_BOILER_FETCHING,\r\n    EDIT_BOILER_FULFILLED,\r\n    EDIT_BOILER_REJECTED,\r\n  } from \"../types/types-boilers\";\r\n  \r\n  const initialState = {\r\n    isLoading: false,\r\n    list: [],\r\n    error: false,\r\n  };\r\n  \r\n  const boilersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n      case GET_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          list: action.payload,\r\n        };\r\n      case GET_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      case ADD_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n  \r\n      case ADD_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          list: [...state.list, action.payload],\r\n        };\r\n      case ADD_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      case DEL_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n  \r\n      case DEL_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          list: state.list.filter((boiler) => {\r\n            return boiler.id !== action.payload;\r\n          }),\r\n        };\r\n      case DEL_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      case EDIT_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n  \r\n      case EDIT_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          list: [\r\n            ...state.list,\r\n            {\r\n              id: action.id,\r\n              text: action.text,\r\n              completed: false,\r\n            },\r\n          ],\r\n        };\r\n  \r\n      case EDIT_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default boilersReducer;","import {\r\n    GET_BOILERTYPE_FETCHING,\r\n    GET_BOILERTYPE_FULFILLED,\r\n    GET_BOILERTYPE_REJECTED,\r\n    ADD_BOILERTYPE_FETCHING,\r\n    ADD_BOILERTYPE_FULFILLED,\r\n    ADD_BOILERTYPE_REJECTED,\r\n    DELETE_BOILERTYPE_FETCHING,\r\n    DELETE_BOILERTYPE_FULFILLED,\r\n    DELETE_BOILERTYPE_REJECTED,\r\n    EDIT_BOILERTYPE_FETCHING,\r\n    EDIT_BOILERTYPE_FULFILLED,\r\n    EDIT_BOILERTYPE_REJECTED} from \"../types/types-boilerTypes\"\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    list: [],\r\n    error: false\r\n};\r\n\r\nconst boilerTypesReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case GET_BOILERTYPE_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case GET_BOILERTYPE_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list: action.payload\r\n            };\r\n        case GET_BOILERTYPE_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        case ADD_BOILERTYPE_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case ADD_BOILERTYPE_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list:[\r\n                    ...state.list, action.payload\r\n                ]\r\n            };\r\n        case ADD_BOILERTYPE_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case DELETE_BOILERTYPE_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case DELETE_BOILERTYPE_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list: state.list.filter(\r\n                    (boilerType) =>{\r\n                        return boilerType._id !== action.payload\r\n                    })\r\n                };\r\n        case DELETE_BOILERTYPE_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case EDIT_BOILERTYPE_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case EDIT_BOILERTYPE_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list:[\r\n                    ...state.list,\r\n                    {\r\n                        _id: action._id,\r\n                        text: action.text,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            };\r\n\r\n        case EDIT_BOILERTYPE_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        default:\r\n             return state;\r\n    }\r\n}\r\n\r\nexport default boilerTypesReducer;","import {\r\n    GET_BUILDING_FETCHING,\r\n    GET_BUILDING_FULFILLED,\r\n    GET_BUILDING_REJECTED,\r\n    ADD_BUILDING_FETCHING,\r\n    ADD_BUILDING_FULFILLED,\r\n    ADD_BUILDING_REJECTED,\r\n    DEL_BUILDING_FETCHING,\r\n    DEL_BUILDING_FULFILLED,\r\n    DEL_BUILDING_REJECTED,\r\n    EDIT_BUILDING_FETCHING,\r\n    EDIT_BUILDING_FULFILLED,\r\n    EDIT_BUILDING_REJECTED} \r\nfrom '../types/types-buildings.js'\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    list: [],\r\n    error: false\r\n};\r\n\r\nconst buildingsReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case GET_BUILDING_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case GET_BUILDING_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list: action.payload,\r\n            };\r\n        case GET_BUILDING_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true,\r\n            };\r\n        \r\n        case ADD_BUILDING_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case ADD_BUILDING_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list:[\r\n                    ...state.list, action.payload\r\n                ],\r\n            };\r\n        case ADD_BUILDING_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true,\r\n            };\r\n\r\n        case DEL_BUILDING_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case DEL_BUILDING_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list: state.list.filter(\r\n                    (building) =>{\r\n                        return building._id !== action.payload;\r\n                    }),\r\n                };\r\n        case DEL_BUILDING_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true,\r\n            };\r\n\r\n        case EDIT_BUILDING_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case EDIT_BUILDING_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list:[\r\n                    ...state.list,\r\n                    {\r\n                        _id: action._id,\r\n                        text: action.text,\r\n                        completed: false,\r\n                    },\r\n                    \r\n                ],\r\n            };\r\n\r\n        case EDIT_BUILDING_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true,\r\n            };\r\n\r\n        default:\r\n             return state;\r\n    }\r\n};\r\n\r\nexport default buildingsReducer;","import {\r\n  GET_CUSTOMER_FETCHING,\r\n  GET_CUSTOMER_FULFILLED,\r\n  GET_CUSTOMER_REJECTED,\r\n  ADD_CUSTOMER_FETCHING,\r\n  ADD_CUSTOMER_FULFILLED,\r\n  ADD_CUSTOMER_REJECTED,\r\n  DEL_CUSTOMER_FETCHING,\r\n  DEL_CUSTOMER_FULFILLED,\r\n  DEL_CUSTOMER_REJECTED,\r\n  EDIT_CUSTOMER_FETCHING,\r\n  EDIT_CUSTOMER_FULFILLED,\r\n  EDIT_CUSTOMER_REJECTED,\r\n} from \"../types/types-customers\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  list: [],\r\n  error: false,\r\n};\r\n\r\nconst customersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case GET_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        list: action.payload,\r\n      };\r\n    case GET_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    case ADD_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        list: [...state.list, action.payload],\r\n      };\r\n    case ADD_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    case DEL_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case DEL_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((customer) => {\r\n          return customer.id !== action.payload;\r\n        }),\r\n      };\r\n    case DEL_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    case EDIT_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case EDIT_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        list: [\r\n          ...state.list,\r\n          {\r\n            id: action.id,\r\n            text: action.text,\r\n            completed: false,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case EDIT_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default customersReducer;\r\n","import {\r\n    GET_TECHNICIANS_FETCHING,\r\n    GET_TECHNICIANS_FULFILLED,\r\n    GET_TECHNICIANS_REJECTED,\r\n    ADD_TECHNICIANS_FETCHING,\r\n    ADD_TECHNICIANS_FULFILLED,\r\n    ADD_TECHNICIANS_REJECTED,\r\n    DEL_TECHNICIANS_FETCHING,\r\n    DEL_TECHNICIANS_FULFILLED,\r\n    DEL_TECHNICIANS_REJECTED,\r\n    EDIT_TECHNICIANS_FETCHING,\r\n    EDIT_TECHNICIANS_FULFILLED,\r\n    EDIT_TECHNICIANS_REJECTED\r\n} from '../types/types-technicians';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    list: [],\r\n    error: false\r\n};\r\n\r\nconst techniciansReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case GET_TECHNICIANS_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case GET_TECHNICIANS_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list: action.payload\r\n            };\r\n        case GET_TECHNICIANS_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        case ADD_TECHNICIANS_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case ADD_TECHNICIANS_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list:[\r\n                    ...state.list, action.payload\r\n                ]\r\n            };\r\n        case ADD_TECHNICIANS_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case DEL_TECHNICIANS_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case DEL_TECHNICIANS_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list: state.list.filter(\r\n                    (technician) =>{\r\n                        return technician.id !== action.payload\r\n                    })\r\n                };\r\n        case DEL_TECHNICIANS_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case EDIT_TECHNICIANS_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case EDIT_TECHNICIANS_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list:[\r\n                    ...state.list,\r\n                    {\r\n                        id: action.id,\r\n                        text: action.text,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            };\r\n\r\n        case EDIT_TECHNICIANS_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        default:\r\n             return state;\r\n    }\r\n}\r\n\r\nexport default techniciansReducer;","import appointmentsReducer from './appointmentsReducer';\r\nimport boilersReducer from './boilersReducer';\r\nimport boilerTypesReducer from './boilerTypesReducer';\r\nimport buildingsReducer from './buildingsReducer';\r\nimport customersReducer from './customersReducer';\r\nimport techniciansReducer from './techniciansReducer';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    appointments: appointmentsReducer,\r\n    boilers: boilersReducer,\r\n    boilerTypes: boilerTypesReducer,\r\n    buildings: buildingsReducer,\r\n    customers: customersReducer,\r\n    technicians: techniciansReducer,\r\n});\r\n\r\nexport default rootReducer;","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport { createStore, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\nimport rootReducer from \"./redux/reducers/rootReducer\";\r\nimport \"./index.css\";\r\n\r\nconst middleware = [thunk];\r\nconst configureStore = () => {\r\n  const enhancer = composeWithDevTools();\r\n  return createStore(\r\n    rootReducer,\r\n    enhancer,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n};\r\n\r\nconst store = configureStore( window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    ,\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();"],"sourceRoot":""}