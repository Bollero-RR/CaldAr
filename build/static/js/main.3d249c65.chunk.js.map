{"version":3,"sources":["layout/navbar/navbar.module.css","layout/navbar/navbar.js","layout/navbar/navbarpublic.js","redux/types/types-auth.js","redux/types/types-appointments.js","redux/reducers/appointmentsReducer.js","redux/types/types-boilers.js","redux/reducers/boilersReducer.js","redux/types/types-boilerTypes.js","redux/reducers/boilerTypesReducer.js","redux/types/types-buildings.js","redux/reducers/buildingsReducer.js","redux/types/types-customers.js","redux/reducers/customersReducer.js","redux/types/types-technicians.js","redux/reducers/techniciansReducer.js","redux/types/types-modals.js","redux/reducers/modalReducer.js","redux/reducers/authReducer.js","redux/reducers/rootReducer.js","redux/store.js","firebase/index.js","redux/actions/authActions.js","layout/header/header.js","components/Appointments/AppointmentItem.js","components/Appointments/AppointmentList.js","components/Appointments/AddAppointment.js","utils/request.js","redux/actions/appointmentsActions.js","components/Appointments/Appointments.js","components/Boilers/BoilerItem.js","components/Boilers/BoilersList.js","components/Boilers/AddBoiler.js","redux/actions/boilersActions.js","components/Boilers/Boilers.js","components/BoilersTypes/BoilerTypeItem.js","components/BoilersTypes/BoilerTypeList.js","components/BoilersTypes/AddBoilerType.js","redux/actions/boilerTypesActions.js","components/BoilersTypes/BoilersTypes.js","redux/actions/modalActions.js","components/Buildings/BuildingItem.js","components/Buildings/BuildingsList.js","components/Buildings/Chart.js","redux/actions/buildingsActions.js","components/Buildings/Buildings.js","components/Customers/CustomerItem.js","components/Customers/CustomersList.js","components/Customers/AddCustomer.js","redux/actions/customersActions.js","components/Customers/Customers.js","components/Technicians/TechnicianItem.js","components/Technicians/TechniciansList.js","components/Technicians/AddTechnician.js","redux/actions/techniciansActions.js","components/Technicians/Technicians.js","SharedComponents/TextInput/TextInput.jsx","components/Buildings/AddBuilding.js","components/Buildings/RemoveBuildingMessage.js","SharedComponents/Modal/Modal.jsx","SharedComponents/PassInput/PassInput.jsx","components/Login/Login.js","App.js","index.js","layout/main/main.module.css","App.module.css","layout/header/header.module.css"],"names":["module","exports","Navbar","className","styles","navbarContainer","logo","to","activeClassName","mainNavActive","mainNav","navbarLinks","NavbarPublic","LOGIN_FETCHING","LOGIN_FULFILLED","LOGIN_REJECTED","LOGOUT_FETCHING","LOGOUT_FULFILLED","LOGOUT_REJECTED","SET_AUTHENTIFICATION","GET_APPOINTMENT_FETCHING","GET_APPOINTMENT_FULFILLED","GET_APPOINTMENT_REJECTED","ADD_APPOINTMENT_FETCHING","ADD_APPOINTMENT_FULFILLED","ADD_APPOINTMENT_REJECTED","DEL_APPOINTMENT_FETCHING","DEL_APPOINTMENT_FULFILLED","DEL_APPOINTMENT_REJECTED","EDIT_APPOINTMENT_FETCHING","EDIT_APPOINTMENT_FULFILLED","EDIT_APPOINTMENT_REJECTED","initialState","isLoading","list","error","appointmentsReducer","state","action","type","payload","filter","appointment","_id","text","completed","GET_BOILER_FETCHING","GET_BOILER_FULFILLED","GET_BOILER_REJECTED","ADD_BOILER_FETCHING","ADD_BOILER_FULFILLED","ADD_BOILER_REJECTED","DEL_BOILER_FETCHING","DEL_BOILER_FULFILLED","DEL_BOILER_REJECTED","EDIT_BOILER_FETCHING","EDIT_BOILER_FULFILLED","EDIT_BOILER_REJECTED","boilersReducer","boiler","id","GET_BOILERTYPE_FETCHING","GET_BOILERTYPE_FULFILLED","GET_BOILERTYPE_REJECTED","ADD_BOILERTYPE_FETCHING","ADD_BOILERTYPE_FULFILLED","ADD_BOILERTYPE_REJECTED","DELETE_BOILERTYPE_FETCHING","DELETE_BOILERTYPE_FULFILLED","DELETE_BOILERTYPE_REJECTED","EDIT_BOILERTYPE_FETCHING","EDIT_BOILERTYPE_FULFILLED","EDIT_BOILERTYPE_REJECTED","boilerTypesReducer","boilerType","GET_BUILDING_FETCHING","GET_BUILDING_FULFILLED","GET_BUILDING_REJECTED","ADD_BUILDING_FETCHING","ADD_BUILDING_FULFILLED","ADD_BUILDING_REJECTED","DEL_BUILDING_FETCHING","DEL_BUILDING_FULFILLED","DEL_BUILDING_REJECTED","EDIT_BUILDING_FETCHING","EDIT_BUILDING_FULFILLED","EDIT_BUILDING_REJECTED","buildingsReducer","building","GET_CUSTOMER_FETCHING","GET_CUSTOMER_FULFILLED","GET_CUSTOMER_REJECTED","ADD_CUSTOMER_FETCHING","ADD_CUSTOMER_FULFILLED","ADD_CUSTOMER_REJECTED","DEL_CUSTOMER_FETCHING","DEL_CUSTOMER_FULFILLED","DEL_CUSTOMER_REJECTED","EDIT_CUSTOMER_FETCHING","EDIT_CUSTOMER_FULFILLED","EDIT_CUSTOMER_REJECTED","customersReducer","customer","GET_TECHNICIANS_FETCHING","GET_TECHNICIANS_FULFILLED","GET_TECHNICIANS_REJECTED","ADD_TECHNICIANS_FETCHING","ADD_TECHNICIANS_FULFILLED","ADD_TECHNICIANS_REJECTED","DEL_TECHNICIANS_FETCHING","DEL_TECHNICIANS_FULFILLED","DEL_TECHNICIANS_REJECTED","EDIT_TECHNICIANS_FETCHING","EDIT_TECHNICIANS_FULFILLED","EDIT_TECHNICIANS_REJECTED","techniciansReducer","technician","SHOW_MODAL","CLOSE_MODAL","modalTypes","ADD_APPOINTMENT","DEL_APPOINTMENT","ADD_BOILER","DEL_BOILER","ADD_BOILERTYPE","DEL_BOILERTYPE","ADD_BUILDING","DEL_BUILDING","EDIT_BUILDING","ADD_CUSTOMER","DEL_CUSTOMER","ADD_TECHNICIAN","DEL_TECHNICIAN","show","modalType","meta","modalReducer","authenticated","authReducer","rootReducer","combineReducers","appointments","boilers","boilerTypes","buildings","customers","technicians","modal","auth","middleware","thunk","store","window","__REDUX_DEVTOOLS_EXTENSION__","createStore","compose","applyMiddleware","firebaseApp","firebase","initializeApp","apiKey","process","authDomain","projectId","storageBucket","messagingSenderId","appId","setToken","user","a","getState","getIdToken","token","localStorage","setItem","loginWithFirebase","credentials","dispatch","Firebase","signInWithEmailAndPassword","email","password","then","res","catch","setAuthentication","logout","signOut","removeItem","withRouter","connect","bindActionCreators","logoutAction","history","headerContainer","Button","onClick","push","AppointmentItem","this","props","buildingId","boilerId","start_timestamp","end_timestamp","table","title","editAppointment","bind","btnStyle","delAppointment","Component","AppointmentsList","handleShowForm","listHead","map","index","AddAppointment","handleCleanForm","setState","handleEdit","appointmentEdit","onSubmit","e","preventDefault","updateAppointment","addAppointment","onChange","target","name","value","input","placeholder","formsBtn","getHeaders","Accept","getItem","requestGet","path","fetch","headers","requestPost","opts","method","body","requestPut","requestDelete","URL","getAppointments","data","json","response","dataSend","requestOptions","JSON","stringify","Appointments","showForm","scrollTo","info","AppointmentList","getAppointmentsActions","delAppointmentActions","addAppointmentActions","updateAppointmentActions","BoilerItem","maintainceRate","typeId","hourMaintainceCost","hourEventualCost","editBoiler","delBoiler","BoilersList","AddBoiler","boilerEdit","updateBoiler","addBoiler","getBoilers","Boilers","getBoilersActions","delBoilerActions","addBoilerActions","updateBoilerActions","BoilerTypeItem","skillsId","stock","description","editBoilerType","deleteBoilerType","BoilerTypeList","AddBoilerType","boilerTypeEdit","updateBoilerType","addBoilerType","itemType","getBoilerTypes","BoilerType","bt","getBoilerTypesActions","deleteBoilerTypeActions","addBoilerTypeActions","updateBoilerTypeActions","showModal","closeModal","BuildingItem","showDeleteModal","showEditModal","boilersId","businessName","phone","adress","showModalActions","Buildings","showAddModal","handleShowGraph","class","Chart","chartData","options","display","displayTitle","fontSize","legend","displayLegend","position","legendPosition","btnBackStyle","defaultProps","getBuildings","addBuilding","delBuilding","editBuilding","buildingEdit","showGraph","getChartData","labels","datasets","label","backgroundColor","BuildingsList","showModalAction","getBuildingActions","CustomerItem","customerType","buildingsIds","fiscalAddress","editCustomer","delCustomer","Customers","AddCustomer","customerEdit","toString","updateCustomer","addCustomer","getCustomers","CustomersList","getCustomersActions","delCustomerActions","addCustomerActions","updateCustomerActions","Technicianitem","firstName","lastName","typeIds","hour_rate","daily_capacity","editTechnician","delTechnician","TechniciansList","TechnicianItem","AddTechnician","technicianEdit","updateTechnician","addTechnician","getTechnicians","addTechnicians","editTechnicians","delTechnicians","Technicians","updateTechnicians","getTechniciansActions","delTechniciansActions","addTechniciansActions","updateTechniciansActions","TextInput","textInputLabel","textInput","touched","AddBuilding","values","updateBuilding","initialValues","validate","errors","length","test","indexOf","render","handleSubmit","component","closeModalActions","addBuildingActions","updateBuildingActions","RemoveBuildingMessage","delBuildingActions","getModalStyle","top","left","transform","useStyles","makeStyles","theme","paper","width","palette","background","border","boxShadow","shadows","padding","spacing","closeModalAction","modalComponent","classes","React","useState","modalStyle","appointmentId","boilerTypeId","customerId","technicianId","open","onClose","aria-labelledby","aria-describedby","style","PassInput","passInpuLabel","passInput","login","useEffect","onIdTokenChanged","wrapper","mainContent","BoilersTypes","exact","Login","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.3d249c65.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"navbarContainer\":\"navbar_navbarContainer__1FZOm\",\"logo\":\"navbar_logo__30UUn\",\"mainNav\":\"navbar_mainNav__1rmZ6\",\"mainNavActive\":\"navbar_mainNavActive__3oQTF\"};","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './navbar.module.css';\r\n\r\nfunction Navbar() {\r\n    return (\r\n            <nav className={styles.navbarContainer}>\r\n                <div className={styles.logo}>\r\n                    <NavLink to=\"/\" activeClassName={styles.mainNavActive} className={styles.mainNav}>\r\n                        <h3>\r\n                            CALDAR\r\n                        </h3>\r\n                    </NavLink>\r\n                </div>\r\n                <ul className={styles.navbarLinks}>\r\n                    <NavLink to=\"/appointments\" activeClassName={styles.mainNavActive} className={styles.mainNav}>\r\n                        <li>\r\n                            <i className=\"far fa-calendar-plus\"></i> Appointments\r\n                        </li>\r\n                    </NavLink>\r\n                    <NavLink to=\"/boilers\" activeClassName={styles.mainNavActive} className={styles.mainNav}>\r\n                        <li>\r\n                            <i className=\"fas fa-cog\"></i> Boilers\r\n                        </li>\r\n                    </NavLink>\r\n                    <NavLink to=\"/boilersTypes\" activeClassName={styles.mainNavActive} className={styles.mainNav}>\r\n                        <li>\r\n                            <i className=\"fas fa-cogs\"></i> BoilersTypes\r\n                        </li>\r\n                    </NavLink>\r\n                    <NavLink to=\"/buildings\" activeClassName={styles.mainNavActive} className={styles.mainNav}>\r\n                        <li>\r\n                            <i className=\"far fa-building\"></i> Buildings\r\n                        </li>\r\n                    </NavLink>\r\n                    <NavLink to=\"/customers\" activeClassName={styles.mainNavActive} className={styles.mainNav}>\r\n                        <li>\r\n                            <i className=\"fas fa-user-friends\"></i> Customers\r\n                        </li>\r\n                    </NavLink>\r\n                    <NavLink to=\"/technicians\" activeClassName={styles.mainNavActive} className={styles.mainNav}>\r\n                        <li>\r\n                            <i className=\"fas fa-hard-hat\"></i> Technicians\r\n                        </li>\r\n                    </NavLink>\r\n                </ul>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;\r\n","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport styles from './navbar.module.css';\r\n\r\nfunction NavbarPublic() {\r\n    return (\r\n            <nav className={styles.navbarContainer}>\r\n                <div className={styles.logo}>\r\n                    <NavLink to=\"/\" activeClassName={styles.mainNavActive} className={styles.mainNav}>\r\n                        <h3>\r\n                            CALDAR\r\n                        </h3>\r\n                    </NavLink>\r\n                </div>\r\n                <div className={styles.navbarLinks}>\r\n                </div>\r\n            </nav>\r\n    )\r\n}\r\n\r\nexport default NavbarPublic;\r\n","export const LOGIN_FETCHING = 'LOGIN_FETCHING';\r\nexport const LOGIN_FULFILLED = 'LOGIN_FULFILLED';\r\nexport const LOGIN_REJECTED = 'LOGIN_REJECTED';\r\n\r\nexport const LOGOUT_FETCHING = 'LOGOUT_FETCHING';\r\nexport const LOGOUT_FULFILLED = 'LOGOUT_FULFILLED';\r\nexport const LOGOUT_REJECTED = 'LOGOUT_REJECTED';\r\n\r\nexport const SET_AUTHENTIFICATION ='SET_AUTHENTIFICATION';","export const GET_APPOINTMENT_FETCHING = 'GET_APPOINTMENT_FETCHING';\r\nexport const GET_APPOINTMENT_FULFILLED = 'GET_APPOINTMENT_FULFILLED';\r\nexport const GET_APPOINTMENT_REJECTED = 'GET_APPOINTMENT_REJECTED';\r\n\r\nexport const ADD_APPOINTMENT_FETCHING = 'ADD_APPOINTMENT_FETCHING';\r\nexport const ADD_APPOINTMENT_FULFILLED = 'ADD_APPOINTMENT_FULFILLED';\r\nexport const ADD_APPOINTMENT_REJECTED = 'ADD_APPOINTMENT_REJECTED';\r\n\r\nexport const DEL_APPOINTMENT_FETCHING ='DEL_APPOINTMENT_FETCHING';\r\nexport const DEL_APPOINTMENT_FULFILLED ='DEL_APPOINTMENT_FULFILLED';\r\nexport const DEL_APPOINTMENT_REJECTED ='DEL_APPOINTMENT_REJECTED';\r\n\r\nexport const EDIT_APPOINTMENT_FETCHING ='EDIT_APPOINTMENT_FETCHING';\r\nexport const EDIT_APPOINTMENT_FULFILLED ='EDIT_APPOINTMENT_FULFILLED';\r\nexport const EDIT_APPOINTMENT_REJECTED ='EDIT_APPOINTMENT_REJECTED';","import {\r\n    GET_APPOINTMENT_FETCHING,\r\n    GET_APPOINTMENT_FULFILLED,\r\n    GET_APPOINTMENT_REJECTED,\r\n    ADD_APPOINTMENT_FETCHING,\r\n    ADD_APPOINTMENT_FULFILLED,\r\n    ADD_APPOINTMENT_REJECTED,\r\n    DEL_APPOINTMENT_FETCHING,\r\n    DEL_APPOINTMENT_FULFILLED,\r\n    DEL_APPOINTMENT_REJECTED,\r\n    EDIT_APPOINTMENT_FETCHING,\r\n    EDIT_APPOINTMENT_FULFILLED,\r\n    EDIT_APPOINTMENT_REJECTED,\r\n} from '../types/types-appointments'\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    list: [],\r\n    error: false\r\n};\r\n\r\nconst appointmentsReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case GET_APPOINTMENT_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case GET_APPOINTMENT_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list: action.payload\r\n            };\r\n        case GET_APPOINTMENT_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        case ADD_APPOINTMENT_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case ADD_APPOINTMENT_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list:[\r\n                    ...state.list, action.payload\r\n                ]\r\n            };\r\n        case ADD_APPOINTMENT_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case DEL_APPOINTMENT_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case DEL_APPOINTMENT_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list: state.list.filter(\r\n                    (appointment) =>{\r\n                        return appointment._id !== action.payload\r\n                    })\r\n                };\r\n        case DEL_APPOINTMENT_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case EDIT_APPOINTMENT_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case EDIT_APPOINTMENT_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list:[\r\n                    ...state.list,\r\n                    {\r\n                        _id: action._id,\r\n                        text: action.text,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            };\r\n\r\n        case EDIT_APPOINTMENT_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        default:\r\n             return state;\r\n    }\r\n}\r\n\r\nexport default appointmentsReducer;","//GET DATA\r\nexport const GET_BOILER_FETCHING = 'GET_BOILER_FETCHING';\r\nexport const GET_BOILER_FULFILLED = 'GET_BOILER_FULFILLED';\r\nexport const GET_BOILER_REJECTED = 'GET_BOILER_REJECTED';\r\n\r\n//ADD DATA\r\nexport const ADD_BOILER_FETCHING = 'ADD_BOILER_FETCHING';\r\nexport const ADD_BOILER_FULFILLED = 'ADD_BOILER_FULFILLED';\r\nexport const ADD_BOILER_REJECTED = 'ADD_BOILER_REJECTED';\r\n\r\n//DELETE DATA\r\nexport const DEL_BOILER_FETCHING ='DEL_BOILER_FETCHING';\r\nexport const DEL_BOILER_FULFILLED ='DEL_BOILER_FULFILLED';\r\nexport const DEL_BOILER_REJECTED ='DEL_BOILER_REJECTED';\r\n\r\n//EDIT DATA\r\nexport const EDIT_BOILER_FETCHING ='EDIT_BOILER_FETCHING';\r\nexport const EDIT_BOILER_FULFILLED ='EDIT_BOILER_FULFILLED';\r\nexport const EDIT_BOILER_REJECTED ='EDIT_BOILER_REJECTED';","import {\r\n    GET_BOILER_FETCHING,\r\n    GET_BOILER_FULFILLED,\r\n    GET_BOILER_REJECTED,\r\n    ADD_BOILER_FETCHING,\r\n    ADD_BOILER_FULFILLED,\r\n    ADD_BOILER_REJECTED,\r\n    DEL_BOILER_FETCHING,\r\n    DEL_BOILER_FULFILLED,\r\n    DEL_BOILER_REJECTED,\r\n    EDIT_BOILER_FETCHING,\r\n    EDIT_BOILER_FULFILLED,\r\n    EDIT_BOILER_REJECTED,\r\n  } from \"../types/types-boilers\";\r\n  \r\n  const initialState = {\r\n    isLoading: false,\r\n    list: [],\r\n    error: false,\r\n  };\r\n  \r\n  const boilersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n      case GET_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          list: action.payload,\r\n        };\r\n      case GET_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      case ADD_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n  \r\n      case ADD_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          list: [...state.list, action.payload],\r\n        };\r\n      case ADD_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      case DEL_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n  \r\n      case DEL_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          list: state.list.filter((boiler) => {\r\n            return boiler.id !== action.payload;\r\n          }),\r\n        };\r\n      case DEL_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      case EDIT_BOILER_FETCHING:\r\n        return {\r\n          ...state,\r\n          isLoading: true,\r\n        };\r\n  \r\n      case EDIT_BOILER_FULFILLED:\r\n        return {\r\n          ...state,\r\n          list: [\r\n            ...state.list,\r\n            {\r\n              id: action.id,\r\n              text: action.text,\r\n              completed: false,\r\n            },\r\n          ],\r\n        };\r\n  \r\n      case EDIT_BOILER_REJECTED:\r\n        return {\r\n          ...state,\r\n          isLoading: false,\r\n          error: true,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  \r\n  export default boilersReducer;","export const GET_BOILERTYPE_FETCHING = 'GET_BOILERTYPE_FETCHING';\r\nexport const GET_BOILERTYPE_FULFILLED = 'GET_BOILERTYPE_FULFILLED';\r\nexport const GET_BOILERTYPE_REJECTED = 'GET_BOILERTYPE_REJECTED';\r\n\r\nexport const ADD_BOILERTYPE_FETCHING = 'ADD_BOILERTYPE_FETCHING';\r\nexport const ADD_BOILERTYPE_FULFILLED = 'ADD_BOILERTYPE_FULFILLED';\r\nexport const ADD_BOILERTYPE_REJECTED = 'ADD_BOILERTYPE_REJECTED';\r\n\r\nexport const DELETE_BOILERTYPE_FETCHING ='DELETE_BOILERTYPE_FETCHING';\r\nexport const DELETE_BOILERTYPE_FULFILLED ='DELETE_BOILERTYPE_FULFILLED';\r\nexport const DELETE_BOILERTYPE_REJECTED ='DELETE_BOILERTYPE_REJECTED';\r\n\r\nexport const EDIT_BOILERTYPE_FETCHING ='EDIT_BOILERTYPE_FETCHING';\r\nexport const EDIT_BOILERTYPE_FULFILLED ='EDIT_BOILERTYPE_FULFILLED';\r\nexport const EDIT_BOILERTYPE_REJECTED ='EDIT_BOILERTYPE_REJECTED';","import {\r\n    GET_BOILERTYPE_FETCHING,\r\n    GET_BOILERTYPE_FULFILLED,\r\n    GET_BOILERTYPE_REJECTED,\r\n    ADD_BOILERTYPE_FETCHING,\r\n    ADD_BOILERTYPE_FULFILLED,\r\n    ADD_BOILERTYPE_REJECTED,\r\n    DELETE_BOILERTYPE_FETCHING,\r\n    DELETE_BOILERTYPE_FULFILLED,\r\n    DELETE_BOILERTYPE_REJECTED,\r\n    EDIT_BOILERTYPE_FETCHING,\r\n    EDIT_BOILERTYPE_FULFILLED,\r\n    EDIT_BOILERTYPE_REJECTED} from \"../types/types-boilerTypes\"\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    list: [],\r\n    error: false\r\n};\r\n\r\nconst boilerTypesReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case GET_BOILERTYPE_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case GET_BOILERTYPE_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list: action.payload\r\n            };\r\n        case GET_BOILERTYPE_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        case ADD_BOILERTYPE_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case ADD_BOILERTYPE_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list:[\r\n                    ...state.list, action.payload\r\n                ]\r\n            };\r\n        case ADD_BOILERTYPE_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case DELETE_BOILERTYPE_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case DELETE_BOILERTYPE_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list: state.list.filter(\r\n                    (boilerType) =>{\r\n                        return boilerType._id !== action.payload\r\n                    })\r\n                };\r\n        case DELETE_BOILERTYPE_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case EDIT_BOILERTYPE_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case EDIT_BOILERTYPE_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list:[\r\n                    ...state.list,\r\n                    {\r\n                        _id: action._id,\r\n                        text: action.text,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            };\r\n\r\n        case EDIT_BOILERTYPE_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        default:\r\n             return state;\r\n    }\r\n}\r\n\r\nexport default boilerTypesReducer;","\r\n//GET DATA\r\nexport const GET_BUILDING_FETCHING = 'GET_BUILDING_FETCHING';\r\nexport const GET_BUILDING_FULFILLED = 'GET_BUILDING_FULFILLED';\r\nexport const GET_BUILDING_REJECTED = 'GET_BUILDING_REJECTED';\r\n\r\n//ADD DATA\r\nexport const ADD_BUILDING_FETCHING = 'ADD_BUILDING_FETCHING';\r\nexport const ADD_BUILDING_FULFILLED = 'ADD_BUILDING_FULFILLED';\r\nexport const ADD_BUILDING_REJECTED = 'ADD_BUILDING_REJECTED';\r\n\r\n//DELETE DATA\r\nexport const DEL_BUILDING_FETCHING ='DEL_BUILDING_FETCHING';\r\nexport const DEL_BUILDING_FULFILLED ='DEL_BUILDING_FULFILLED';\r\nexport const DEL_BUILDING_REJECTED ='DEL_BUILDING_REJECTED';\r\n\r\n//EDIT DATA\r\nexport const EDIT_BUILDING_FETCHING ='EDIT_BUILDING_FETCHING';\r\nexport const EDIT_BUILDING_FULFILLED ='EDIT_BUILDING_FULFILLED';\r\nexport const EDIT_BUILDING_REJECTED ='EDIT_BUILDING_REJECTED';\r\n\r\n\r\n","import {\r\n    GET_BUILDING_FETCHING,\r\n    GET_BUILDING_FULFILLED,\r\n    GET_BUILDING_REJECTED,\r\n    ADD_BUILDING_FETCHING,\r\n    ADD_BUILDING_FULFILLED,\r\n    ADD_BUILDING_REJECTED,\r\n    DEL_BUILDING_FETCHING,\r\n    DEL_BUILDING_FULFILLED,\r\n    DEL_BUILDING_REJECTED,\r\n    EDIT_BUILDING_FETCHING,\r\n    EDIT_BUILDING_FULFILLED,\r\n    EDIT_BUILDING_REJECTED} \r\nfrom '../types/types-buildings.js'\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    list: [],\r\n    error: false\r\n};\r\n\r\nconst buildingsReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case GET_BUILDING_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case GET_BUILDING_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list: action.payload,\r\n            };\r\n        case GET_BUILDING_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true,\r\n            };\r\n        \r\n        case ADD_BUILDING_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case ADD_BUILDING_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list:[\r\n                    ...state.list, action.payload\r\n                ],\r\n            };\r\n        case ADD_BUILDING_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true,\r\n            };\r\n\r\n        case DEL_BUILDING_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case DEL_BUILDING_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list: state.list.filter(\r\n                    (building) =>{\r\n                        return building._id !== action.payload;\r\n                    }),\r\n                };\r\n        case DEL_BUILDING_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true,\r\n            };\r\n\r\n        case EDIT_BUILDING_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case EDIT_BUILDING_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list:[\r\n                    ...state.list,\r\n                    {\r\n                        _id: action._id,\r\n                        text: action.text,\r\n                        completed: false,\r\n                    },\r\n                    \r\n                ],\r\n            };\r\n\r\n        case EDIT_BUILDING_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true,\r\n            };\r\n\r\n        default:\r\n             return state;\r\n    }\r\n};\r\n\r\nexport default buildingsReducer;","//GET DATA\r\nexport const GET_CUSTOMER_FETCHING = 'GET_CUSTOMER_FETCHING';\r\nexport const GET_CUSTOMER_FULFILLED = 'GET_CUSTOMER_FULFILLED';\r\nexport const GET_CUSTOMER_REJECTED = 'GET_CUSTOMER_REJECTED';\r\n\r\n//ADD DATA\r\nexport const ADD_CUSTOMER_FETCHING = 'ADD_CUSTOMER_FETCHING';\r\nexport const ADD_CUSTOMER_FULFILLED = 'ADD_CUSTOMER_FULFILLED';\r\nexport const ADD_CUSTOMER_REJECTED = 'ADD_CUSTOMER_REJECTED';\r\n\r\n//DELETE DATA\r\nexport const DEL_CUSTOMER_FETCHING ='DEL_CUSTOMER_FETCHING';\r\nexport const DEL_CUSTOMER_FULFILLED ='DEL_CUSTOMER_FULFILLED';\r\nexport const DEL_CUSTOMER_REJECTED ='DEL_CUSTOMER_REJECTED';\r\n\r\n//EDIT DATA\r\nexport const EDIT_CUSTOMER_FETCHING ='EDIT_CUSTOMER_FETCHING';\r\nexport const EDIT_CUSTOMER_FULFILLED ='EDIT_CUSTOMER_FULFILLED';\r\nexport const EDIT_CUSTOMER_REJECTED ='EDIT_CUSTOMER_REJECTED';","import {\r\n  GET_CUSTOMER_FETCHING,\r\n  GET_CUSTOMER_FULFILLED,\r\n  GET_CUSTOMER_REJECTED,\r\n  ADD_CUSTOMER_FETCHING,\r\n  ADD_CUSTOMER_FULFILLED,\r\n  ADD_CUSTOMER_REJECTED,\r\n  DEL_CUSTOMER_FETCHING,\r\n  DEL_CUSTOMER_FULFILLED,\r\n  DEL_CUSTOMER_REJECTED,\r\n  EDIT_CUSTOMER_FETCHING,\r\n  EDIT_CUSTOMER_FULFILLED,\r\n  EDIT_CUSTOMER_REJECTED,\r\n} from \"../types/types-customers\";\r\n\r\nconst initialState = {\r\n  isLoading: false,\r\n  list: [],\r\n  error: false,\r\n};\r\n\r\nconst customersReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n    case GET_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        list: action.payload,\r\n      };\r\n    case GET_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    case ADD_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case ADD_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        list: [...state.list, action.payload],\r\n      };\r\n    case ADD_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    case DEL_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case DEL_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        list: state.list.filter((customer) => {\r\n          return customer.id !== action.payload;\r\n        }),\r\n      };\r\n    case DEL_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    case EDIT_CUSTOMER_FETCHING:\r\n      return {\r\n        ...state,\r\n        isLoading: true,\r\n      };\r\n\r\n    case EDIT_CUSTOMER_FULFILLED:\r\n      return {\r\n        ...state,\r\n        list: [\r\n          ...state.list,\r\n          {\r\n            id: action.id,\r\n            text: action.text,\r\n            completed: false,\r\n          },\r\n        ],\r\n      };\r\n\r\n    case EDIT_CUSTOMER_REJECTED:\r\n      return {\r\n        ...state,\r\n        isLoading: false,\r\n        error: true,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default customersReducer;\r\n","export const GET_TECHNICIANS_FETCHING = 'GET_TECHNICIANS_FETCHING';\r\nexport const GET_TECHNICIANS_FULFILLED = 'GET_TECHNICIANS_FULFILLED';\r\nexport const GET_TECHNICIANS_REJECTED = 'GET_TECHNICIANS_REJECTED';\r\n\r\nexport const ADD_TECHNICIANS_FETCHING = 'ADD_TECHNICIANS_FETCHING';\r\nexport const ADD_TECHNICIANS_FULFILLED = 'ADD_TECHNICIANS_FULFILLED';\r\nexport const ADD_TECHNICIANS_REJECTED = 'ADD_TECHNICIANS_REJECTED';\r\n\r\nexport const DEL_TECHNICIANS_FETCHING = 'DEL_TECHNICIANS_FETCHING';\r\nexport const DEL_TECHNICIANS_FULFILLED = 'DEL_TECHNICIANS_FULFILLED';\r\nexport const DEL_TECHNICIANS_REJECTED = 'DEL_TECHNICIANS_REJECTED';\r\n\r\nexport const EDIT_TECHNICIANS_FETCHING = 'EDIT_TECHNICIANS_FETCHING';\r\nexport const EDIT_TECHNICIANS_FULFILLED = 'EDIT_TECHNICIANS_FULFILLED';\r\nexport const EDIT_TECHNICIANS_REJECTED = 'EDIT_TECHNICIANS_REJECTED';","import {\r\n    GET_TECHNICIANS_FETCHING,\r\n    GET_TECHNICIANS_FULFILLED,\r\n    GET_TECHNICIANS_REJECTED,\r\n    ADD_TECHNICIANS_FETCHING,\r\n    ADD_TECHNICIANS_FULFILLED,\r\n    ADD_TECHNICIANS_REJECTED,\r\n    DEL_TECHNICIANS_FETCHING,\r\n    DEL_TECHNICIANS_FULFILLED,\r\n    DEL_TECHNICIANS_REJECTED,\r\n    EDIT_TECHNICIANS_FETCHING,\r\n    EDIT_TECHNICIANS_FULFILLED,\r\n    EDIT_TECHNICIANS_REJECTED\r\n} from '../types/types-technicians';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    list: [],\r\n    error: false\r\n};\r\n\r\nconst techniciansReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case GET_TECHNICIANS_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case GET_TECHNICIANS_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list: action.payload\r\n            };\r\n        case GET_TECHNICIANS_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        case ADD_TECHNICIANS_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case ADD_TECHNICIANS_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                list:[\r\n                    ...state.list, action.payload\r\n                ]\r\n            };\r\n        case ADD_TECHNICIANS_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case DEL_TECHNICIANS_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case DEL_TECHNICIANS_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list: state.list.filter(\r\n                    (technician) =>{\r\n                        return technician.id !== action.payload\r\n                    })\r\n                };\r\n        case DEL_TECHNICIANS_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n\r\n        case EDIT_TECHNICIANS_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n\r\n        case EDIT_TECHNICIANS_FULFILLED:\r\n            return{\r\n                ...state,\r\n                list:[\r\n                    ...state.list,\r\n                    {\r\n                        id: action.id,\r\n                        text: action.text,\r\n                        completed: false\r\n                    }\r\n                ]\r\n            };\r\n\r\n        case EDIT_TECHNICIANS_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        default:\r\n             return state;\r\n    }\r\n}\r\n\r\nexport default techniciansReducer;","export const SHOW_MODAL = 'SHOW_MODAL';\r\nexport const CLOSE_MODAL = 'CLOSE_MODAL';\r\n\r\nconst modalTypes = {\r\n    ADD_APPOINTMENT: 'ADD_APPOINTMENT',\r\n    DEL_APPOINTMENT: 'DEL_APPOINTMENT',\r\n    ADD_BOILER: 'ADD_BOILER',\r\n    DEL_BOILER: 'DEL_BOILER',\r\n    ADD_BOILERTYPE: 'ADD_BOILERTYPE',\r\n    DEL_BOILERTYPE: 'DEL_BOILERTYPE',\r\n    ADD_BUILDING: 'ADD_BUILDING',\r\n    DEL_BUILDING: 'DEL_BUILDING',\r\n    EDIT_BUILDING: 'EDIT_BUILDING',\r\n    ADD_CUSTOMER: 'ADD_CUSTOMER',\r\n    DEL_CUSTOMER: 'DEL_CUSTOMER',\r\n    ADD_TECHNICIAN: 'ADD_TECHNICIAN',\r\n    DEL_TECHNICIAN: 'DEL_TECHNICIAN',\r\n};\r\n\r\nexport default modalTypes;","import {\r\n    SHOW_MODAL,\r\n    CLOSE_MODAL,\r\n} from '../types/types-modals';\r\n\r\nconst initialState = {\r\n    show: false,\r\n    modalType: null,\r\n    meta: {}\r\n};\r\n\r\nconst modalReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SHOW_MODAL:\r\n            return {\r\n                ...state,\r\n                show: true,\r\n                modalType: action.modalType,\r\n                meta: action.meta,\r\n            };\r\n        case CLOSE_MODAL:\r\n            return {\r\n                ...state,\r\n                show: false,\r\n            };\r\n        default:\r\n            return state;\r\n    };\r\n};\r\n\r\nexport default modalReducer;","import {\r\n    LOGIN_FETCHING,\r\n    LOGIN_FULFILLED,\r\n    LOGIN_REJECTED,\r\n    LOGOUT_FETCHING,\r\n    LOGOUT_FULFILLED,\r\n    LOGOUT_REJECTED,\r\n    SET_AUTHENTIFICATION\r\n} from '../types/types-auth';\r\n\r\nconst initialState = {\r\n    isLoading: false,\r\n    error: false,\r\n    authenticated: false\r\n};\r\n\r\nconst authReducer = (state = initialState, action) =>{\r\n    switch(action.type) {\r\n        case LOGIN_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case LOGIN_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                authenticated: true\r\n            };\r\n        case LOGIN_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        case LOGOUT_FETCHING:\r\n            return{\r\n                ...state,\r\n                isLoading: true,\r\n            };\r\n        case LOGOUT_FULFILLED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: false,\r\n                authenticated: false\r\n            };\r\n        case LOGOUT_REJECTED:\r\n            return{\r\n                ...state,\r\n                isLoading: false,\r\n                error: true\r\n            };\r\n        case SET_AUTHENTIFICATION:\r\n            return{\r\n                ...state,\r\n                authenticated: true\r\n            };\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport default authReducer;","import appointmentsReducer from './appointmentsReducer';\r\nimport boilersReducer from './boilersReducer';\r\nimport boilerTypesReducer from './boilerTypesReducer';\r\nimport buildingsReducer from './buildingsReducer';\r\nimport customersReducer from './customersReducer';\r\nimport techniciansReducer from './techniciansReducer';\r\nimport modalReducer from './modalReducer';\r\nimport authReducer from './authReducer';\r\nimport {combineReducers} from 'redux';\r\n\r\nconst rootReducer = combineReducers({\r\n    appointments: appointmentsReducer,\r\n    boilers: boilersReducer,\r\n    boilerTypes: boilerTypesReducer,\r\n    buildings: buildingsReducer,\r\n    customers: customersReducer,\r\n    technicians: techniciansReducer,\r\n    modal: modalReducer,\r\n    auth: authReducer,\r\n});\r\n\r\nexport default rootReducer;","import { createStore, applyMiddleware, compose } from \"redux\";\r\nimport rootReducer from \"./reducers/rootReducer\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nconst middleware = [thunk];\r\nconst configureStore = () => {\r\n  return createStore(\r\n    rootReducer,\r\n    compose(applyMiddleware(...middleware))\r\n  );\r\n};\r\n\r\nexport const store = configureStore( window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__());","import firebase from \"firebase/app\";\r\nimport \"firebase/auth\"\r\nimport { store } from \"../redux/store\"\r\n\r\n\r\nconst firebaseConfig = {\r\n    apiKey: process.env.REACT_APP_API_KEY || '',\r\n    authDomain: process.env.REACT_APP_AUTH_DOMAIN || '',\r\n    projectId: process.env.REACT_APP_PROJECT_ID || '',\r\n    storageBucket: process.env.REACT_APP_STORAGE_BUCKET || '',\r\n    messagingSenderId: process.env.REACT_APP_MESSAGING_SENDER_ID || '',\r\n    appId: process.env.REACT_APP_APP_ID || '',\r\n};\r\n\r\nconst firebaseApp = firebase.initializeApp(firebaseConfig);\r\n\r\nconst setToken = async (user) => {\r\n    const auth = store.getState().auth;\r\n    if(auth.authenticated){\r\n        const token = await user.getIdToken();\r\n        localStorage.setItem(\"token\",token);\r\n    }\r\n};\r\n\r\nexport const tokenListener = () => {\r\n    firebase.auth().onIdTokenChanged((user) => {\r\n        if(user) {\r\n            setToken(user);\r\n        }\r\n    });\r\n};\r\n\r\nexport default firebaseApp;","import {\r\n    LOGIN_FETCHING,\r\n    LOGIN_FULFILLED,\r\n    LOGIN_REJECTED,\r\n    LOGOUT_FETCHING,\r\n    LOGOUT_FULFILLED,\r\n    LOGOUT_REJECTED,\r\n    SET_AUTHENTIFICATION\r\n} from '../types/types-auth';\r\nimport Firebase from \"../../firebase\"\r\n\r\nconst loginFetching = () => {\r\n    return {\r\n        type: LOGIN_FETCHING\r\n    }\r\n};\r\nconst loginFulfilled = () => {\r\n    return {\r\n        type: LOGIN_FULFILLED\r\n    }\r\n};\r\nconst loginRejected = () => {\r\n    return {\r\n        type: LOGIN_REJECTED\r\n    }\r\n};\r\nexport const loginWithFirebase = credentials => dispatch => {\r\n    dispatch(loginFetching());\r\n    return Firebase.auth().signInWithEmailAndPassword(credentials.email, credentials.password)\r\n    .then(async (res) => {\r\n        const token = await res.user.getIdToken();\r\n        localStorage.setItem(\"token\",token);\r\n        return dispatch(loginFulfilled());\r\n    })\r\n    .catch(() => {\r\n        return dispatch(loginRejected());\r\n    })\r\n};\r\n\r\nexport const setAuthentication = () => {\r\n    return {\r\n        type: SET_AUTHENTIFICATION\r\n    }\r\n};\r\n\r\nconst logoutFetching = () => {\r\n    return {\r\n        type: LOGOUT_FETCHING\r\n    }\r\n};\r\nconst logoutFulfilled = (data) => {\r\n    return {\r\n        type: LOGOUT_FULFILLED\r\n    }\r\n};\r\nconst logoutRejected = () => {\r\n    return {\r\n        type: LOGOUT_REJECTED\r\n    }\r\n};\r\nexport const logout = () => dispatch => {\r\n    dispatch(logoutFetching());\r\n    return Firebase.auth().signOut()\r\n    .then(() => {\r\n        localStorage.removeItem(\"token\");\r\n        return dispatch(logoutFulfilled());\r\n    })\r\n    .catch(() => {\r\n        return dispatch(logoutRejected());\r\n    })\r\n};","import React from 'react';\r\nimport styles from \"./header.module.css\";\r\nimport { logout as logoutAction } from \"../../redux/actions/authActions\";\r\nimport { LOGOUT_FULFILLED } from \"../../redux/types/types-auth\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport { Button } from \"@material-ui/core\";\r\nimport { withRouter } from \"react-router-dom\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst Header = ({ logout, history, authenticated }) => {\r\n  const onLogoutClick = () => {\r\n    logout().then((action) => {\r\n      if (action.type === LOGOUT_FULFILLED) {\r\n        history.push(\"/\");\r\n      }\r\n    });\r\n  };\r\n  return (\r\n    <div className={styles.headerContainer}>\r\n        <Button onClick={() => onLogoutClick()}>{authenticated?\"Log Out\":\"\"}</Button>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      authenticated: state.auth.authenticated\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      logout: logoutAction,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Header));\r\n","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass AppointmentItem extends Component {\r\n    render() {\r\n        const {_id,buildingId, boilerId,start_timestamp, end_timestamp } = this.props.appointment;\r\n        return (\r\n            <tr className={styles.table}>\r\n                <td>{_id}</td>\r\n                <td>{buildingId}</td>\r\n                <td>{boilerId}</td>\r\n                <td>{start_timestamp}</td>\r\n                <td>{end_timestamp}</td>\r\n                <td>\r\n                    <button\r\n                        title=\"Edit\"\r\n                        onClick={this.props.editAppointment.bind(this, this.props.appointment)}\r\n                        className={styles.btnStyle}\r\n                    >\r\n                        <i className=\"far fa-edit\"></i>\r\n                    </button>\r\n                    <button\r\n                        title=\"Delete\"\r\n                        className={styles.btnStyle}\r\n                        onClick={this.props.delAppointment.bind(this, _id)}\r\n                    >\r\n                        <i className=\"far fa-trash-alt\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\nAppointmentItem.propTypes = {\r\n    appointment:PropTypes.object.isRequired,\r\n    delAppointment:PropTypes.func.isRequired,\r\n    editAppointment:PropTypes.func.isRequired,\r\n}\r\nexport default AppointmentItem;","import React, { Component } from 'react';\r\nimport AppointmentItem  from './AppointmentItem';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass AppointmentsList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Appointments{\" \"}\r\n        <button\r\n          title=\"Add\"\r\n          className={styles.btnStyle}\r\n          onClick={() => this.props.handleShowForm()}\r\n        >\r\n          <i className=\"fas fa-plus\"></i>\r\n        </button>\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n              <tr className={styles.listHead}>\r\n                <th>Id</th>\r\n                <th>BoilerId</th>\r\n                <th>BuildingId</th>\r\n                <th>Start Time</th>\r\n                <th>End Time</th>\r\n                <th>Options</th>\r\n              </tr>\r\n            </thead>\r\n        <tbody>\r\n          {this.props.appointments?.map((appointment,index) => (\r\n            <AppointmentItem\r\n              key={index}\r\n              appointment={appointment}\r\n              editAppointment={this.props.editAppointment}\r\n              delAppointment={this.props.delAppointment}\r\n            />\r\n          ))}\r\n        </tbody>\r\n      </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//PropTypes\r\nAppointmentsList.propTypes = {\r\n    appointments:PropTypes.array.isRequired,\r\n    editAppointment:PropTypes.func.isRequired,\r\n    delAppointment:PropTypes.func.isRequired,\r\n    handleShowForm: PropTypes.func.isRequired,\r\n    showForm: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default AppointmentsList;","import React, { Component } from 'react';\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass AddAppointment extends Component {\r\n    state = {\r\n        _id:\"\",\r\n        buildingId:\"\",\r\n        boilerId:\"\",\r\n        start_timestamp:\"\",\r\n        end_timestamp:\"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (this.props.appointmentEdit) {\r\n          this.handleEdit(this.props.appointmentEdit);\r\n        }\r\n      }\r\n    handleCleanForm = () => {\r\n        this.setState({\r\n            _id:\"\",\r\n            buildingId:\"\",\r\n            boilerId:\"\",\r\n            start_timestamp:\"\",\r\n            end_timestamp:\"\"\r\n        });\r\n        this.props.handleShowForm();\r\n    }\r\n\r\n      handleEdit = (appointmentEdit) => {\r\n        this.setState({\r\n          _id: appointmentEdit._id,\r\n          buildingId: appointmentEdit.buildingId,\r\n          boilerId: appointmentEdit.boilerId,\r\n          start_timestamp: appointmentEdit.start_timestamp,\r\n          end_timestamp: appointmentEdit.end_timestamp,\r\n        });\r\n      };\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state._id) {\r\n            this.props.updateAppointment(\r\n                this.state._id,\r\n                this.state.buildingId,\r\n                this.state.boilerId,\r\n                this.state.start_timestamp,\r\n                this.state.end_timestamp,\r\n            );\r\n        } else {\r\n            this.props.addAppointment(\r\n                this.state.buildingId,\r\n                this.state.boilerId,\r\n                this.state.start_timestamp,\r\n                this.state.end_timestamp,\r\n            );\r\n        }\r\n        this.handleCleanForm();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state._id ? \"Edit appointment\" : \"Add new appointment\"}</h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"buildingId\"\r\n                            className={styles.input}\r\n                            placeholder=\"Building Id...\"\r\n                            value={this.state.buildingId}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"boilerId\"\r\n                            className={styles.input}\r\n                            placeholder=\"Boiler Id...\"\r\n                            value={this.state.boilerId}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"start_timestamp\"\r\n                            className={styles.input}\r\n                            placeholder=\"Start Time...\"\r\n                            value={this.state.start_timestamp}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"end_timestamp\"\r\n                            className={styles.input}\r\n                            placeholder=\"End Time...\"\r\n                            value={this.state.end_timestamp}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <div  className={styles.formsBtn}>\r\n                            {this.state._id ?\r\n                                <button\r\n                                    title=\"Save\"\r\n                                    className={styles.btnStyle}\r\n                                >\r\n                                    <i className=\"far fa-save\"></i>\r\n                                </button>\r\n                                :\r\n                                <button\r\n                                    title=\"Add\"\r\n                                    className={styles.btnStyle}\r\n                                >\r\n                                        <i className=\"fas fa-plus\"></i>\r\n                                </button>\r\n                            }\r\n                            <div>\r\n                                <button\r\n                                    title=\"Cancel\"\r\n                                    className={styles.btnStyle}\r\n                                    onClick={this.handleCleanForm}\r\n                                >\r\n                                        <i className=\"fas fa-ban\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                </form>\r\n            </div >\r\n        )\r\n    }\r\n}\r\n\r\n//PropTypes\r\nAddAppointment.propTypes = {\r\n    addAppointment:PropTypes.func.isRequired,\r\n    appointmentEdit: PropTypes.object,\r\n    handleShowForm: PropTypes.func.isRequired,\r\n    updateAppointment: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default AddAppointment;","/*const hasContentType = (res, type) => {\r\n  const contentType = res.headers.get(\"content-type\");\r\n  return contentType ? contentType.includes(type) : false;\r\n};\r\nconst parseJSONRes = (res) => {\r\n  return res.text().then(function (text) {\r\n    return text ? JSON.parse(text) : {};\r\n  });\r\n};\r\nconst handleErrors = (res) => {\r\n  var isJSONRes = hasContentType(res, \"application/json\");\r\n  if (res.ok) {\r\n    return isJSONRes ? parseJSONRes(res) : Promise.resolve(res.statusText);\r\n  }\r\n  return new Promise((resolve, reject) => {\r\n    const errorRes = isJSONRes ? parseJSONRes(res) : Promise.resolve({});\r\n\r\n    errorRes.then(() => {\r\n      const message = \"Endpoint Error\" + res.status + \" \" + res.statusText;\r\n      reject({\r\n        message,\r\n      });\r\n    });\r\n  });\r\n};*/\r\n\r\nconst getHeaders = () => ({\r\n  Accept: \"application/json\",\r\n  \"Content-Type\": \"application/json\",\r\n  token: localStorage.getItem(\"token\"),\r\n});\r\n\r\nexport function requestGet(path) {\r\n  return fetch(path, {\r\n    headers: getHeaders(),\r\n  });\r\n}\r\n\r\nexport function requestPost(path, opts = {}) {\r\n  return fetch(path, {\r\n    method: \"POST\",\r\n    headers: getHeaders(),\r\n    body: opts.body,\r\n  });\r\n}\r\n\r\nexport function requestPut(path, opts = {}) {\r\n  return fetch(path, {\r\n    method: \"PUT\",\r\n    headers: getHeaders(),\r\n    body: opts.body,\r\n  });\r\n}\r\n\r\nexport function requestDelete(path, opts = {}) {\r\n  return fetch(path, {\r\n    method: \"DELETE\",\r\n    headers: getHeaders(),\r\n    body: opts.body,\r\n  });\r\n}\r\n","import { requestGet,requestPost,requestPut,requestDelete } from '../../utils/request';\r\nimport {\r\n    GET_APPOINTMENT_FETCHING,\r\n    GET_APPOINTMENT_FULFILLED,\r\n    GET_APPOINTMENT_REJECTED,\r\n    ADD_APPOINTMENT_FETCHING,\r\n    ADD_APPOINTMENT_FULFILLED,\r\n    ADD_APPOINTMENT_REJECTED,\r\n    DEL_APPOINTMENT_FETCHING,\r\n    DEL_APPOINTMENT_FULFILLED,\r\n    DEL_APPOINTMENT_REJECTED,\r\n    EDIT_APPOINTMENT_FETCHING,\r\n    EDIT_APPOINTMENT_FULFILLED,\r\n    EDIT_APPOINTMENT_REJECTED\r\n} from '../types/types-appointments'\r\n\r\nconst URL= 'https://app-caldar-gm4.herokuapp.com/api/appointment';\r\n\r\n\r\nconst getAppointmentFetching = () => ({\r\n    type: GET_APPOINTMENT_FETCHING,\r\n});\r\n\r\nconst getAppointmentFulfilled = (payload) => ({\r\n    type: GET_APPOINTMENT_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst getAppointmentRejected = () => ({\r\n    type: GET_APPOINTMENT_REJECTED,\r\n});\r\n\r\nexport const getAppointments = () => dispatch =>{\r\n    dispatch(getAppointmentFetching());\r\n    return requestGet(URL)\r\n        .then(data=>data.json())\r\n        .then(response=>{\r\n            dispatch(getAppointmentFulfilled(response));\r\n        })\r\n        .catch(() =>{\r\n            dispatch(getAppointmentRejected())\r\n        });\r\n};\r\n\r\n\r\nconst addAppointmentFetching = () => ({\r\n    type: ADD_APPOINTMENT_FETCHING,\r\n});\r\n\r\nconst addAppointmentFulfilled = (payload) => ({\r\n    type: ADD_APPOINTMENT_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst addAppointmentRejected = () => ({\r\n    type: ADD_APPOINTMENT_REJECTED,\r\n});\r\n\r\nexport const addAppointment = (buildingId,boilerId,start_timestamp,end_timestamp ) => dispatch =>{\r\n    dispatch(addAppointmentFetching());\r\n    const dataSend = { buildingId,boilerId,start_timestamp,end_timestamp };\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(dataSend),\r\n    };\r\n    return requestPost(URL,requestOptions)\r\n        .then(data=> data.json())\r\n        .then(response =>{\r\n            dispatch(addAppointmentFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getAppointments()))\r\n        .catch(() =>{\r\n            dispatch(addAppointmentRejected())\r\n        });\r\n};\r\n\r\n\r\nconst delAppointmentFetching = () => ({\r\n    type: DEL_APPOINTMENT_FETCHING,\r\n});\r\n\r\nconst delAppointmentFulfilled = (payload) => ({\r\n    type: DEL_APPOINTMENT_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst delAppointmentRejected = () => ({\r\n    type: DEL_APPOINTMENT_REJECTED,\r\n});\r\n\r\nexport const delAppointment = (_id) => dispatch =>{\r\n    dispatch(delAppointmentFetching());\r\n    const dataSend = { _id };\r\n    const requestOptions = {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n    };\r\n    return requestDelete(`${URL}/${_id}`, requestOptions)\r\n    .then(data=> data.json())\r\n        .then(response =>{\r\n            dispatch(delAppointmentFulfilled(_id));\r\n        })\r\n        .then(() => dispatch(getAppointments()))\r\n        .catch(() =>{\r\n            dispatch(delAppointmentRejected())\r\n        });\r\n};\r\n\r\n\r\nconst editAppointmentFetching = () => ({\r\n    type: EDIT_APPOINTMENT_FETCHING,\r\n});\r\n\r\nconst editAppointmentFulfilled = (payload) => ({\r\n    type: EDIT_APPOINTMENT_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst editAppointmentRejected = () => ({\r\n    type: EDIT_APPOINTMENT_REJECTED,\r\n});\r\n\r\nexport const editAppointment = (_id,buildingId,boilerId,start_timestamp,end_timestamp ) => dispatch =>{\r\n    dispatch(editAppointmentFetching());\r\n    const dataSend = {_id, buildingId,boilerId,start_timestamp,end_timestamp };\r\n    const requestOptions = {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n  };\r\n    return requestPut(`${URL}/${_id}`, requestOptions)\r\n        .then(data=> data.json())\r\n        .then(response => {\r\n            dispatch(editAppointmentFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getAppointments()))\r\n        .catch(() =>{\r\n            dispatch(editAppointmentRejected())\r\n        });\r\n};\r\n","import React, { Component } from 'react';\r\nimport AppointmentList from \"./AppointmentList\";\r\nimport AddAppointment from \"./AddAppointment\";\r\nimport styles from '../../layout/main/main.module.css';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getAppointments as getAppointmentsActions,\r\n  delAppointment as delAppointmentActions,\r\n  addAppointment as addAppointmentActions,\r\n  editAppointment as updateAppointmentActions,\r\n} from \"../../redux/actions/appointmentsActions\";\r\n\r\n\r\nclass Appointments extends Component {\r\n\r\n  state = {\r\n    appointmentEdit: null,\r\n    showForm: false,\r\n  }\r\n\r\n  componentDidMount(){\r\n    this.props.getAppointments();\r\n  }\r\n\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      appointmentEdit: null\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  editAppointment = (appointment) => {\r\n    this.setState({\r\n      appointmentEdit: appointment,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n        <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n                <AddAppointment\r\n                  addAppointment={this.props.addAppointment}\r\n                  updateAppointment={this.props.updateAppointment}\r\n                  appointmentEdit={this.state.appointmentEdit}\r\n                  handleShowForm={this.handleShowForm}\r\n                />\r\n                ) : (\r\n                <AppointmentList\r\n                  appointments = {this.props.appointments}\r\n                  delAppointment={this.props.delAppointment}\r\n                  editAppointment={this.editAppointment}\r\n                  handleShowForm={this.handleShowForm}\r\n                  showForm={this.state.showForm}\r\n                />\r\n        )}\r\n        </div>\r\n    );\r\n  }\r\n}\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getAppointments: () => dispatch(getAppointmentsActions()),\r\n  delAppointment: (_id) => dispatch(delAppointmentActions(_id)),\r\n  addAppointment: (buildingId, boilerId,start_timestamp, end_timestamp) =>\r\n    dispatch(\r\n      addAppointmentActions(buildingId, boilerId,start_timestamp, end_timestamp)\r\n    ),\r\n  updateAppointment: (_id, buildingId, boilerId,start_timestamp, end_timestamp) =>\r\n    dispatch(\r\n      updateAppointmentActions( _id,buildingId, boilerId,start_timestamp,end_timestamp)\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  appointments: state.appointments.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Appointments);","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class BoilerItem extends Component {\r\n\r\n  render() {\r\n    const {\r\n      _id,\r\n      maintainceRate,\r\n      typeId,\r\n      hourMaintainceCost,\r\n      hourEventualCost,\r\n    } = this.props.boiler;\r\n    return (\r\n      <tr className={styles.table}>\r\n        <td>{_id}</td>\r\n        <td>{typeId}</td>\r\n        <td>{maintainceRate}</td>\r\n        <td>{hourMaintainceCost}</td>\r\n        <td>{hourEventualCost}</td>\r\n        <td>\r\n          <button\r\n            title=\"Edit\"\r\n            onClick={this.props.editBoiler.bind(this, this.props.boiler)}\r\n            className={styles.btnStyle}\r\n          >\r\n            <i className=\"far fa-edit\"></i>\r\n          </button>\r\n          <button\r\n            title=\"Delete\"\r\n            className={styles.btnStyle}\r\n            onClick={this.props.delBoiler.bind(this, _id)}\r\n          >\r\n            <i className=\"far fa-trash-alt\"></i>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nBoilerItem.propTypes = {\r\n  boiler: PropTypes.object.isRequired,\r\n  delBoiler: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default BoilerItem;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BoilerItem from \"./BoilerItem\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass BoilersList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Boilers{\" \"}\r\n          <button\r\n            title=\"Add\"\r\n            className={styles.btnStyle}\r\n            onClick={() => this.props.handleShowForm()}\r\n          >\r\n            <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n            <tr className={styles.listHead}>\r\n              <th>Id</th>\r\n              <th>Type</th>\r\n              <th>Maintaince</th>\r\n              <th>Maintaince Cost</th>\r\n              <th>Eventual Cost</th>\r\n              <th>Options</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.boilers?.map((boiler) => (\r\n              <BoilerItem\r\n                key={boiler._id}\r\n                boiler={boiler}\r\n                editBoiler={this.props.editBoiler}\r\n                delBoiler={this.props.delBoiler}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nBoilersList.propTypes = {\r\n  boilers: PropTypes.array.isRequired,\r\n  delBoiler: PropTypes.func.isRequired,\r\n  editBoiler: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  showForm: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default BoilersList;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class AddBoiler extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    typeId: \"\",\r\n    maintainceRate: \"\",\r\n    hourMaintainceCost: \"\",\r\n    hourEventualCost: \"\",\r\n};\r\n\r\n  componentDidMount() {\r\n    if (this.props.boilerEdit) {\r\n      this.handleEdit(this.props.boilerEdit);\r\n    }\r\n  }\r\n\r\n  handleCleanForm = () => {\r\n    this.setState({\r\n      _id: \"\",\r\n      typeId: \"\",\r\n      maintainceRate: \"\",\r\n      hourMaintainceCost: \"\",\r\n      hourEventualCost: \"\",\r\n    });\r\n    this.props.handleShowForm();\r\n  };\r\n\r\n  handleEdit = (boilerEdit) => {\r\n    this.setState({\r\n      _id: boilerEdit._id,\r\n      typeId: boilerEdit.typeId,\r\n      maintainceRate: boilerEdit.maintainceRate,\r\n      hourMaintainceCost: boilerEdit.hourMaintainceCost,\r\n      hourEventualCost: boilerEdit.hourEventualCost,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state._id) {\r\n      this.props.updateBoiler(\r\n        this.state._id,\r\n        this.state.typeId,\r\n        this.state.maintainceRate,\r\n        this.state.hourMaintainceCost,\r\n        this.state.hourEventualCost\r\n      );\r\n    } else {\r\n      this.props.addBoiler(\r\n        this.state.typeId,\r\n        this.state.maintainceRate,\r\n        this.state.hourMaintainceCost,\r\n        this.state.hourEventualCost\r\n      );\r\n    }\r\n    this.handleCleanForm();\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.state._id ? \"Edit boiler\" : \"Add new boiler\"}</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n        <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"typeId\"\r\n            className={styles.input}\r\n            placeholder=\"Type boiler...\"\r\n            value={this.state.typeId}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"maintainceRate\"\r\n            className={styles.input}\r\n            placeholder=\"Maintaince rate ...\"\r\n            value={this.state.maintainceRate}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"hourMaintainceCost\"\r\n            className={styles.input}\r\n            placeholder=\"Hour maintaince cost ...\"\r\n            value={this.state.hourMaintainceCost}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"hourEventualCost\"\r\n            className={styles.input}\r\n            placeholder=\"Hour maintaince cost ...\"\r\n            value={this.state.hourEventualCost}\r\n            onChange={this.onChange}\r\n          />\r\n          <div  className={styles.formsBtn}>\r\n            {this.state._id ?\r\n              <button\r\n                  title=\"Save\"\r\n                  className={styles.btnStyle}\r\n              >\r\n                  <i className=\"far fa-save\"></i>\r\n              </button>\r\n              :\r\n              <button\r\n                  title=\"Add\"\r\n                  className={styles.btnStyle}\r\n              >\r\n                      <i className=\"fas fa-plus\"></i>\r\n              </button>\r\n            }\r\n            <div>\r\n              <button\r\n                  title=\"Cancel\"\r\n                  className={styles.btnStyle}\r\n                  onClick={this.handleCleanForm}\r\n              >\r\n                      <i className=\"fas fa-ban\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddBoiler.propTypes = {\r\n  addBoiler: PropTypes.func.isRequired,\r\n  updateBoiler: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  boilerEdit: PropTypes.object,\r\n};\r\n\r\nexport default AddBoiler;","import { requestGet,requestPost,requestPut,requestDelete } from '../../utils/request';\r\nimport {\r\n  GET_BOILER_FETCHING,\r\n  GET_BOILER_FULFILLED,\r\n  GET_BOILER_REJECTED,\r\n  ADD_BOILER_FETCHING,\r\n  ADD_BOILER_FULFILLED,\r\n  ADD_BOILER_REJECTED,\r\n  DEL_BOILER_FETCHING,\r\n  DEL_BOILER_FULFILLED,\r\n  DEL_BOILER_REJECTED,\r\n  EDIT_BOILER_FETCHING,\r\n  EDIT_BOILER_FULFILLED,\r\n  EDIT_BOILER_REJECTED,\r\n} from \"../types/types-boilers\";\r\n\r\n//DECLARATE CONST AND IMPORT API\r\nconst URL = \"https://app-caldar-gm4.herokuapp.com/api/boilers\";\r\n\r\n//ACTION TO GET BOILER DATA\r\n\r\nconst getBoilerFetching = () => ({\r\n  type: GET_BOILER_FETCHING,\r\n});\r\n\r\nconst getBoilerFulfilled = (payload) => ({\r\n  type: GET_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst getBoilerRejected = () => ({\r\n  type: GET_BOILER_REJECTED,\r\n});\r\n\r\nexport const getBoilers = () => (dispatch) => {\r\n  dispatch(getBoilerFetching());\r\n  return requestGet(URL)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(getBoilerFulfilled(response));\r\n    })\r\n    .catch(() => {\r\n      dispatch(getBoilerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO ADD BOILER DATA\r\nconst addBoilerFetching = () => ({\r\n  type: ADD_BOILER_FETCHING,\r\n});\r\n\r\nconst addBoilerFulfilled = (payload) => ({\r\n  type: ADD_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst addBoilerRejected = () => ({\r\n  type: ADD_BOILER_REJECTED,\r\n});\r\n\r\nexport const addBoiler = (\r\n  typeId,\r\n  maintainceRate,\r\n  hourMaintainceCost,\r\n  hourEventualCost\r\n) => (dispatch) => {\r\n  dispatch(addBoilerFetching());\r\n  const dataSend = {\r\n    typeId,\r\n    maintainceRate,\r\n    hourMaintainceCost,\r\n    hourEventualCost,\r\n  };\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return requestPost(URL, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(addBoilerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getBoilers()))\r\n    .catch(() => {\r\n      dispatch(addBoilerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO DELETE BOILER DATA\r\n\r\nconst delBoilerFetching = () => ({\r\n  type: DEL_BOILER_FETCHING,\r\n});\r\n\r\nconst delBoilerFulfilled = (payload) => ({\r\n  type: DEL_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst delBoilerRejected = () => ({\r\n  type: DEL_BOILER_REJECTED,\r\n});\r\n\r\nexport const delBoiler = (_id) => (dispatch) => {\r\n  dispatch(delBoilerFetching());\r\n  const dataSend = { _id };\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return requestDelete(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(delBoilerFulfilled(_id));\r\n    })\r\n    .then(() => dispatch(getBoilers()))\r\n    .catch(() => {\r\n      dispatch(delBoilerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO EDIT BOILER DATA\r\n\r\nconst editBoilerFetching = () => ({\r\n  type: EDIT_BOILER_FETCHING,\r\n});\r\n\r\nconst editBoilerFulfilled = (payload) => ({\r\n  type: EDIT_BOILER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst editBoilerRejected = () => ({\r\n  type: EDIT_BOILER_REJECTED,\r\n});\r\n\r\nexport const editBoiler = (\r\n  _id,\r\n  typeId,\r\n  maintainceRate,\r\n  hourMaintainceCost,\r\n  hourEventualCost\r\n) => (dispatch) => {\r\n  dispatch(editBoilerFetching());\r\n\r\n  const dataSend = {\r\n    _id,\r\n    typeId,\r\n    maintainceRate,\r\n    hourMaintainceCost,\r\n    hourEventualCost,\r\n  };\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return requestPut(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(editBoilerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getBoilers()))\r\n    .catch(() => {\r\n      dispatch(editBoilerRejected());\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport BoilersList from \"./BoilersList\";\r\nimport AddBoiler from \"./AddBoiler\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getBoilers as getBoilersActions,\r\n  delBoiler as delBoilerActions,\r\n  addBoiler as addBoilerActions,\r\n  editBoiler as updateBoilerActions,\r\n} from \"../../redux/actions/boilersActions\";\r\n\r\nclass Boilers extends Component {\r\n  state = {\r\n    boilerEdit: null,\r\n    showForm: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getBoilers();\r\n  }\r\n\r\n  // Show form\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      boilerEdit: null,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // Edit Boiler\r\n  editBoiler = (boiler) => {\r\n    this.setState({\r\n      boilerEdit: boiler,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n          <AddBoiler\r\n            addBoiler={this.props.addBoiler}\r\n            updateBoiler={this.props.updateBoiler}\r\n            boilerEdit={this.state.boilerEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n        ) : (\r\n          <BoilersList\r\n            boilers={this.props.boilers}\r\n            delBoiler={this.props.delBoiler}\r\n            editBoiler={this.editBoiler}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getBoilers: () => dispatch(getBoilersActions()),\r\n  delBoiler: (_id) => dispatch(delBoilerActions(_id)),\r\n  addBoiler: (typeId, maintainceRate, hourMaintainceCost, hourEventualCost) =>\r\n    dispatch(\r\n      addBoilerActions(\r\n        typeId,\r\n        maintainceRate,\r\n        hourMaintainceCost,\r\n        hourEventualCost\r\n      )\r\n    ),\r\n  updateBoiler: (\r\n    _id,\r\n    typeId,\r\n    maintainceRate,\r\n    hourMaintainceCost,\r\n    hourEventualCost\r\n  ) =>\r\n    dispatch(\r\n      updateBoilerActions(\r\n        _id,\r\n        typeId,\r\n        maintainceRate,\r\n        hourMaintainceCost,\r\n        hourEventualCost\r\n      )\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boilers: state.boilers.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Boilers);\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass BoilerTypeItem extends Component {\r\n    render() {\r\n        const { _id, skillsId, type, stock, description } = this.props.boilerType;\r\n        return (\r\n            <tr className={styles.table}>\r\n                <td>{_id}</td>\r\n                <td>{skillsId}</td>\r\n                <td>{type}</td>\r\n                <td>{stock}</td>\r\n                <td>{description}</td>\r\n                <td>\r\n                    <button\r\n                        title=\"Edit\"\r\n                        onClick={this.props.editBoilerType.bind(this, this.props.boilerType)}\r\n                        className={styles.btnStyle}\r\n                    >\r\n                        <i className=\"far fa-edit\"></i>\r\n                    </button>\r\n                    <button\r\n                        title=\"Delete\"\r\n                        className={styles.btnStyle}\r\n                        onClick={this.props.deleteBoilerType.bind(this, _id)}\r\n                    >\r\n                        <i className=\"far fa-trash-alt\"></i>\r\n                    </button>\r\n                </td>\r\n            </tr>\r\n        );\r\n    }\r\n}\r\n\r\nBoilerTypeItem.propTypes = {\r\n    boilerType: PropTypes.object.isRequired,\r\n    deleteBoilerType: PropTypes.func.isRequired,\r\n    editBoilerType: PropTypes.func.isRequired,\r\n};\r\nexport default BoilerTypeItem;\r\n\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport BoilerTypeItem from \"./BoilerTypeItem\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass BoilerTypeList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>BoilerTypes{\" \"}\r\n          <button\r\n            title=\"Add\"\r\n            className={styles.btnStyle}\r\n            onClick={() => this.props.handleShowForm()}\r\n          >\r\n            <i className=\"fas fa-plus\"></i>\r\n          </button>\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n            <tr className={styles.listHead}>\r\n              <th>Id</th>\r\n              <th>Skills Id</th>\r\n              <th>Type</th>\r\n              <th>Stock</th>\r\n              <th>Description</th>\r\n              <th>Options</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n              {this.props.boilerTypes?.map((boilerType, index) => (\r\n                <BoilerTypeItem\r\n                  key={index}\r\n                  boilerType={boilerType}\r\n                  deleteBoilerType={this.props.deleteBoilerType}\r\n                  editBoilerType={this.props.editBoilerType}\r\n                />\r\n                )\r\n              )\r\n            }\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n//PropTypes\r\nBoilerTypeList.propTypes = {\r\n  boilerTypes: PropTypes.array.isRequired,\r\n  deleteBoilerType: PropTypes.func.isRequired,\r\n  editBoilerType: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  showForm: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default BoilerTypeList;\r\n\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass AddBoilerType extends Component {\r\n    state = {\r\n      _id: \"\",\r\n      skillsId: \"\",\r\n      type: \"\",\r\n      stock: \"\",\r\n      description: \"\",\r\n    };\r\n\r\n    componentDidMount() {\r\n      if (this.props.boilerTypeEdit) {\r\n        this.handleEdit(this.props.boilerTypeEdit);\r\n      }\r\n    }\r\n\r\n    handleCleanForm = () => {\r\n      this.setState({\r\n        _id: \"\",\r\n        skillsId: \"\",\r\n        type: \"\",\r\n        stock: \"\",\r\n        description: \"\",\r\n      });\r\n      this.props.handleShowForm();\r\n    };\r\n\r\n    handleEdit = (boilerTypeEdit) => {\r\n      this.setState({\r\n        _id: boilerTypeEdit._id,\r\n        skillsId: boilerTypeEdit.skillsId,\r\n        type: boilerTypeEdit.type,\r\n        stock: boilerTypeEdit.stock,\r\n        description: boilerTypeEdit.description,\r\n      });\r\n    };\r\n    onSubmit = (e) => {\r\n      e.preventDefault();\r\n      if (this.state._id){\r\n        this.props.updateBoilerType(\r\n          this.state._id,\r\n          this.state.skillsId,\r\n          this.state.type,\r\n          this.state.stock,\r\n          this.state.description\r\n        );\r\n      }else {\r\n        this.props.addBoilerType(\r\n          this.state.skillsId,\r\n          this.state.type,\r\n          this.state.stock,\r\n          this.state.description\r\n        );\r\n      }\r\n      this.handleCleanForm();\r\n    };\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n    render() {\r\n      return (\r\n        <div>\r\n          <h1>{this.state._id ? \"Edit boiler type\" : \"Add new boiler type\"}</h1>\r\n          <form onSubmit={this.onSubmit}>\r\n            <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n            <input\r\n              itemType=\"text\"\r\n              name=\"skillsId\"\r\n              className={styles.input}\r\n              placeholder=\"Add Skills Id\"\r\n              value={this.state.skillsId}\r\n              onChange={this.onChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"type\"\r\n              className={styles.input}\r\n              placeholder=\"Add Type\"\r\n              value={this.state.type}\r\n              onChange={this.onChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"stock\"\r\n              className={styles.input}\r\n              placeholder=\"Add Stock\"\r\n              value={this.state.stock}\r\n              onChange={this.onChange}\r\n            />\r\n            <input\r\n              type=\"text\"\r\n              name=\"description\"\r\n              className={styles.input}\r\n              placeholder=\"Add Description\"\r\n              value={this.state.description}\r\n              onChange={this.onChange}\r\n            />\r\n            <div  className={styles.formsBtn}>\r\n              {this.state._id ?\r\n                <button\r\n                    title=\"Save\"\r\n                    className={styles.btnStyle}\r\n                >\r\n                    <i className=\"far fa-save\"></i>\r\n                </button>\r\n                :\r\n                <button\r\n                    title=\"Add\"\r\n                    className={styles.btnStyle}\r\n                >\r\n                        <i className=\"fas fa-plus\"></i>\r\n                </button>\r\n              }\r\n              <div>\r\n                <button\r\n                    title=\"Cancel\"\r\n                    className={styles.btnStyle}\r\n                    onClick={this.handleCleanForm}\r\n                >\r\n                        <i className=\"fas fa-ban\"></i>\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </form>\r\n        </div>\r\n      );\r\n    }\r\n  }\r\n  // PropTypes\r\n  AddBoilerType.propTypes = {\r\n    addBoilerType: PropTypes.func.isRequired,\r\n    updateBoilerType: PropTypes.func.isRequired,\r\n    handleShowForm: PropTypes.func.isRequired,\r\n    boilerTypeEdit: PropTypes.object,\r\n  };\r\n  export default AddBoilerType;","import { requestGet,requestPost,requestPut,requestDelete } from '../../utils/request';\r\nimport {\r\n    GET_BOILERTYPE_FETCHING,\r\n    GET_BOILERTYPE_FULFILLED,\r\n    GET_BOILERTYPE_REJECTED,\r\n    ADD_BOILERTYPE_FETCHING,\r\n    ADD_BOILERTYPE_FULFILLED,\r\n    ADD_BOILERTYPE_REJECTED,\r\n    DELETE_BOILERTYPE_FETCHING,\r\n    DELETE_BOILERTYPE_FULFILLED,\r\n    DELETE_BOILERTYPE_REJECTED,\r\n    EDIT_BOILERTYPE_FETCHING,\r\n    EDIT_BOILERTYPE_FULFILLED,\r\n    EDIT_BOILERTYPE_REJECTED\r\n} from '../types/types-boilerTypes'\r\n\r\n//DECLARATE CONST AND IMPORT API\r\nconst URL= 'https://app-caldar-gm4.herokuapp.com/api/boilerType';\r\n\r\n//ACTION TO GET BOILERTYPE DATA\r\n\r\nconst getBoilerTypeFetching = () => ({\r\n    type: GET_BOILERTYPE_FETCHING,\r\n});\r\n\r\nconst getBoilerTypeFulfilled = (payload) => ({\r\n    type: GET_BOILERTYPE_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst getBoilerTypeRejected = () => ({\r\n    type: GET_BOILERTYPE_REJECTED,\r\n});\r\n\r\nexport const getBoilerTypes = () => (dispatch) =>{\r\n    dispatch(getBoilerTypeFetching());\r\n    return requestGet(URL)\r\n        .then((data)=>data.json())\r\n        .then((response)=>{\r\n            dispatch(getBoilerTypeFulfilled(response));\r\n        })\r\n        .catch(() =>{\r\n            dispatch(getBoilerTypeRejected())\r\n        });\r\n};\r\n\r\n//ACTION TO ADD BOILERTYPE DATA\r\nconst addBoilerTypeFetching = () => ({\r\n    type: ADD_BOILERTYPE_FETCHING,\r\n});\r\n\r\nconst addBoilerTypeFulfilled = (payload) => ({\r\n    type: ADD_BOILERTYPE_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst addBoilerTypeRejected = () => ({\r\n    type: ADD_BOILERTYPE_REJECTED,\r\n});\r\n\r\nexport const addBoilerType = (skillsId,type,stock,description ) => dispatch =>{\r\n    dispatch(addBoilerTypeFetching());\r\n    const dataSend = { skillsId,type,stock,description };\r\n    const requestOptions = {\r\n      method: \"POST\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(dataSend),\r\n    };\r\n    return requestPost(URL,requestOptions)\r\n        .then(data=> data.json())\r\n        .then(response =>{\r\n            dispatch(addBoilerTypeFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getBoilerTypes()))\r\n        .catch(() =>{\r\n            dispatch(addBoilerTypeRejected())\r\n        });\r\n};\r\n\r\n\r\n//ACTION TO DELETE BOILERTYPE DATA\r\n\r\nconst deleteBoilerTypeFetching = () => ({\r\n    type: DELETE_BOILERTYPE_FETCHING,\r\n});\r\n\r\nconst deleteBoilerTypeFulfilled = (payload) => ({\r\n    type: DELETE_BOILERTYPE_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst deleteBoilerTypeRejected = () => ({\r\n    type: DELETE_BOILERTYPE_REJECTED,\r\n});\r\n\r\nexport const deleteBoilerType = (_id) => (dispatch) =>{\r\n    dispatch(deleteBoilerTypeFetching());\r\n    const dataSend = { _id };\r\n    const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n    return requestDelete(`${URL}/${_id}`, requestOptions).then((data)=> data.json())\r\n        .then((response) =>{\r\n            dispatch(deleteBoilerTypeFulfilled(_id));\r\n        })\r\n        .then(() => dispatch(getBoilerTypes()))\r\n        .catch(() =>{\r\n            dispatch(deleteBoilerTypeRejected())\r\n        });\r\n};\r\n\r\n//ACTION TO EDIT BOILERTYPE DATA\r\n\r\nconst editBoilerTypeFetching = () => ({\r\n    type: EDIT_BOILERTYPE_FETCHING,\r\n});\r\n\r\nconst editBoilerTypeFulfilled = (payload) => ({\r\n    type: EDIT_BOILERTYPE_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst editBoilerTypeRejected = () => ({\r\n    type: EDIT_BOILERTYPE_REJECTED,\r\n});\r\n\r\nexport const editBoilerType = (_id, skillsId, type, stock, description ) => (dispatch) =>{\r\n    dispatch(editBoilerTypeFetching());\r\n\r\n    const dataSend = { _id, skillsId, type, stock, description };\r\n    const requestOptions = {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n  };\r\n\r\n    return requestPut(`${URL}/${_id}`, requestOptions)\r\n        .then((data)=> data.json())\r\n        .then((response) =>{\r\n            dispatch(editBoilerTypeFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getBoilerTypes()))\r\n        .catch(() =>{\r\n            dispatch(editBoilerTypeRejected())\r\n        });\r\n};","import React, { Component } from \"react\";\r\nimport BoilerTypeList from \"./BoilerTypeList\";\r\nimport AddBoilerType from \"./AddBoilerType\";\r\nimport styles from '../../layout/main/main.module.css';\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getBoilerTypes as getBoilerTypesActions,\r\n  deleteBoilerType as deleteBoilerTypeActions,\r\n  addBoilerType as addBoilerTypeActions,\r\n  editBoilerType as updateBoilerTypeActions,\r\n} from \"../../redux/actions/boilerTypesActions\"; \r\n\r\nclass BoilerType extends Component {\r\n  state = {\r\n    boilerTypeEdit: null,\r\n    showForm: false,\r\n  }\r\n\r\n  componentDidMount() {\r\n    this.props.getBoilerTypes();\r\n  }\r\n\r\n  // Show form\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      boilerTypeEdit: null,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  //edit boiler type\r\n  editBoilerType = (bt) => {\r\n    this.setState({\r\n      boilerTypeEdit: bt,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n  \r\n  render() {\r\n    return (\r\n      <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n          <AddBoilerType \r\n            addBoilerType={this.props.addBoilerType}\r\n            updateBoilerType={this.props.updateBoilerType}\r\n            boilerTypeEdit={this.state.boilerTypeEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n        ) : (\r\n          <BoilerTypeList \r\n            boilerTypes={this.props.boilerTypes} \r\n            deleteBoilerType={this.props.deleteBoilerType}\r\n            editBoilerType={this.editBoilerType}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getBoilerTypes: () => dispatch(getBoilerTypesActions()),\r\n  deleteBoilerType: (_id) => dispatch(deleteBoilerTypeActions(_id)),\r\n  addBoilerType: (skillsId, type, stock, description) =>\r\n    dispatch(\r\n      addBoilerTypeActions(skillsId, type, stock, description)\r\n    ),\r\n  updateBoilerType: (_id, skillsId, type, stock, description) =>\r\n    dispatch(\r\n      updateBoilerTypeActions(\r\n        _id, skillsId, type, stock, description\r\n      )\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  boilerTypes: state.boilerTypes.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(BoilerType);\r\n","import {\r\n    SHOW_MODAL,\r\n    CLOSE_MODAL,\r\n} from '../types/types-modals';\r\n\r\nexport const showModal = (modalType, meta = {}) => {\r\n    return {\r\n        type: SHOW_MODAL,\r\n        modalType,\r\n        meta,\r\n    };\r\n};\r\n\r\nexport const closeModal = () => {\r\n    return {\r\n        type: CLOSE_MODAL,\r\n    };\r\n};","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../../layout/main/main.module.css';\r\nimport { showModal as showModalActions } from \"../../redux/actions/modalActions\";\r\nimport modalTypes from \"../../redux/types/types-modals.js\";\r\nimport { connect } from \"react-redux\";\r\n\r\nexport class BuildingItem extends Component {\r\n\r\n    showDeleteModal = (_id) => {\r\n        this.props.showModal(modalTypes.DEL_BUILDING, {id: _id});\r\n      };\r\n\r\n      showEditModal = (_id) => {\r\n        this.props.showModal(modalTypes.EDIT_BUILDING, {id: _id});\r\n      };\r\n\r\n    render() {\r\n        const\r\n            {\r\n                _id,\r\n                boilersId,\r\n                businessName,\r\n                email,\r\n                phone,\r\n                adress,\r\n            } = this.props.building;\r\n        return (\r\n            <tr className={styles.table}>\r\n                       <td>\r\n                            {_id}\r\n                        </td>\r\n                        <td>\r\n                            {boilersId}\r\n                        </td>\r\n                        <td>\r\n                            {businessName}\r\n                        </td>\r\n                        <td>\r\n                            {email}\r\n                        </td>\r\n                        <td>\r\n                            {phone}\r\n                        </td>\r\n                        <td>\r\n                            {adress}\r\n                        </td>\r\n                        <td>\r\n                            <button\r\n                                title=\"Edit\"\r\n                                onClick={() =>this.showEditModal(_id)}\r\n                                className={styles.btnStyle}\r\n                            >\r\n                                <i className=\"far fa-edit\"></i>\r\n                            </button>\r\n                            <button\r\n                                title=\"Delete\"\r\n                                className={styles.btnStyle}\r\n                                onClick={this.showDeleteModal(_id)}\r\n                            >\r\n                                <i className=\"far fa-trash-alt\"></i>\r\n                            </button>\r\n                        </td>\r\n                   </tr>\r\n        )\r\n    }\r\n}\r\n\r\n// proptypes \r\nBuildingItem.propTypes = {\r\n    building: PropTypes.object.isRequired,\r\n  };\r\n\r\n  const mapDispatchToProps = (dispatch) => ({\r\n    showModal: (modalType, meta) => dispatch(showModalActions(modalType, meta)),\r\n  });\r\n  \r\n  const mapStateToProps = (state) => ({});\r\n  \r\n  export default connect( mapStateToProps, mapDispatchToProps)(BuildingItem);\r\n","import React, {Component} from 'react';\r\nimport BuildingItem from './BuildingItem';\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport PropTypes from 'prop-types';\r\n\r\n\r\nclass Buildings extends Component{\r\n\r\n\r\n  render(){\r\n    return (\r\n      <div>\r\n          <h1>Buildings{\" \"}\r\n            <button\r\n              title=\"Add\"\r\n              className={styles.btnStyle}\r\n              onClick={() => this.props.showAddModal()}\r\n            >\r\n              <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n          </h1>\r\n          <table className={styles.table}>\r\n          <thead>\r\n              <tr className={styles.listHead}>\r\n                <th>Id</th>\r\n                <th>BoilersId</th>\r\n                <th>Business Name</th>\r\n                <th>E-mail</th>\r\n                <th>Phone</th>\r\n                <th>Address</th>\r\n                <th>Options</th>\r\n              </tr>\r\n            </thead>\r\n          <tbody>\r\n        {this.props.buildings?.map((building, index) => (\r\n          <BuildingItem\r\n            key={index}\r\n            building={building}\r\n          />\r\n        )\r\n      )\r\n    }\r\n        </tbody>\r\n       </table>\r\n\r\n       <button\r\n            title=\"See report\"\r\n            className={styles.btnStyle}\r\n            onClick={() => this.props.handleShowGraph()}\r\n          >\r\n            <i class=\"fas fa-chart-pie\"></i>\r\n          </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n//proptypes\r\nBuildings.propTypes = {\r\n  buildings: PropTypes.array.isRequired,\r\n  editBuilding: PropTypes.func.isRequired,\r\n  showAddModal: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default Buildings;","import React, {Component} from 'react';\r\nimport  {Pie} from 'react-chartjs-2';\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass Chart extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      chartData:props.chartData\r\n    }\r\n  }\r\n\r\n  static defaultProps = {\r\n    displayTitle:true,\r\n    displayLegend: true,\r\n    legendPosition:'right',\r\n  }\r\n\r\n  render(){\r\n    return (\r\n      <div className={styles.Chart}>\r\n        {/* <Bar\r\n          data={this.state.chartData}\r\n          options={{\r\n            title:{\r\n              display:this.props.displayTitle,\r\n              text:'Largest Cities In '+this.props.location,\r\n              fontSize:25\r\n            },\r\n            legend:{\r\n              display:this.props.displayLegend,\r\n              position:this.props.legendPosition\r\n            }\r\n          }}\r\n        />\r\n\r\n        <Line\r\n          data={this.state.chartData}\r\n          options={{\r\n            title:{\r\n              display:this.props.displayTitle,\r\n              text:'Largest Cities In '+this.props.location,\r\n              fontSize:25\r\n            },\r\n            legend:{\r\n              display:this.props.displayLegend,\r\n              position:this.props.legendPosition\r\n            }\r\n          }}\r\n        /> */}\r\n\r\n        <Pie\r\n          data={this.state.chartData}\r\n          options={{\r\n            title:{\r\n              display:this.props.displayTitle,\r\n              text:'ACTIVE CLIENTS ',\r\n              fontSize:25\r\n            },\r\n            legend:{\r\n              display:this.props.displayLegend,\r\n              position:this.props.legendPosition\r\n            }\r\n          }}\r\n        />\r\n        <button\r\n          title=\"Back\"\r\n          className={styles.btnBackStyle}\r\n          onClick={() => this.props.handleShowGraph()}\r\n        >\r\n          <i class=\"fas fa-chevron-circle-left\"></i>\r\n        </button>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Chart;","import { requestGet,requestPost,requestPut,requestDelete } from '../../utils/request';\r\nimport {\r\n    GET_BUILDING_FETCHING,\r\n    GET_BUILDING_FULFILLED,\r\n    GET_BUILDING_REJECTED,\r\n    ADD_BUILDING_FETCHING,\r\n    ADD_BUILDING_FULFILLED,\r\n    ADD_BUILDING_REJECTED,\r\n    DEL_BUILDING_FETCHING,\r\n    DEL_BUILDING_FULFILLED,\r\n    DEL_BUILDING_REJECTED,\r\n    EDIT_BUILDING_FETCHING,\r\n    EDIT_BUILDING_FULFILLED,\r\n    EDIT_BUILDING_REJECTED\r\n} from '../types/types-buildings.js'\r\n\r\n//DECLARATE CONST AND IMPORT API \r\nconst URL= \"https://app-caldar-gm4.herokuapp.com/api/buildings\";\r\n\r\n//ACTION TO GET BUILDING DATA\r\n\r\nconst getBuildingFetching = () => ({\r\n    type: GET_BUILDING_FETCHING,\r\n});\r\n\r\nconst getBuildingFulfilled = (payload) => ({\r\n    type: GET_BUILDING_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst getBuildingRejected = () => ({\r\n    type: GET_BUILDING_REJECTED,\r\n});\r\n\r\nexport const getBuildings = () => dispatch =>{\r\n    dispatch(getBuildingFetching());\r\n    return requestGet(URL)\r\n        .then((data)=>data.json())\r\n        .then((response)=>{\r\n            dispatch(getBuildingFulfilled(response));\r\n        })\r\n        .catch(() =>{\r\n            dispatch(getBuildingRejected())\r\n        });\r\n};\r\n\r\n//ACTION TO ADD BUILDING DATA\r\n\r\nconst addBuildingFetching = () => ({\r\n    type: ADD_BUILDING_FETCHING,\r\n});\r\n\r\nconst addBuildingFulfilled = (payload) => ({\r\n    type: ADD_BUILDING_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst addBuildingRejected = () => ({\r\n    type: ADD_BUILDING_REJECTED,\r\n});\r\n\r\nexport const addBuilding = (\r\n    boilersId,\r\n    businessName,\r\n    email,\r\n    phone,\r\n    adress\r\n) => (dispatch) => {\r\n    dispatch(addBuildingFetching());\r\n    const dataSend = {\r\n        boilersId,\r\n        businessName,\r\n        email,\r\n        phone,\r\n        adress\r\n    }; \r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n    };\r\n    return requestPost(URL, requestOptions)\r\n        .then((data)=> data.json())\r\n        .then((response) =>{\r\n            dispatch(addBuildingFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getBuildings()))\r\n        .catch(() =>{\r\n            dispatch(addBuildingRejected())\r\n        });\r\n};\r\n\r\n//ACTION TO DELETE BUILDING DATA\r\n\r\nconst delBuildingFetching = () => ({\r\n    type: DEL_BUILDING_FETCHING,\r\n});\r\n\r\nconst delBuildingFulfilled = (payload) => ({\r\n    type: DEL_BUILDING_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst delBuildingRejected = () => ({\r\n    type: DEL_BUILDING_REJECTED,\r\n});\r\n\r\nexport const delBuilding = (_id) => (dispatch) =>{\r\n    dispatch(delBuildingFetching());\r\n    const dataSend = {_id};\r\n    const requestOptions = {\r\n        method: \"DELETE\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n    };\r\n    return requestDelete(`${URL}/${_id}`, requestOptions)\r\n        .then((data) => data.json())\r\n        .then((response) => {\r\n            dispatch(delBuildingFulfilled(_id));\r\n        })\r\n        .catch(() =>{\r\n            dispatch(delBuildingRejected());\r\n        });\r\n};\r\n\r\n//ACTION TO EDIT BUILDING DATA\r\n\r\nconst editBuildingFetching = () => ({\r\n    type: EDIT_BUILDING_FETCHING,\r\n});\r\n\r\nconst editBuildingFulfilled = (payload) => ({\r\n    type: EDIT_BUILDING_FULFILLED,\r\n    payload,\r\n\r\n});\r\n\r\nconst editBuildingRejected = () => ({\r\n    type: EDIT_BUILDING_REJECTED,\r\n});\r\n\r\nexport const editBuilding = (\r\n        _id,\r\n        boilersId,\r\n        businessName,\r\n        email,\r\n        phone,\r\n        adress\r\n) => (dispatch) =>{\r\n    dispatch(editBuildingFetching());\r\n\r\n    const dataSend= {\r\n        _id,\r\n        boilersId,\r\n        businessName,\r\n        email,\r\n        phone,\r\n        adress\r\n    }\r\n    const requestOptions = {\r\n        method: 'PUT',\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n    }\r\n    return requestPut(`${URL}/${_id}`, requestOptions )\r\n    .then((data)=> data.json())\r\n        .then((response) =>{\r\n            dispatch(editBuildingFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getBuildings()))\r\n        .catch(() =>{\r\n            dispatch(editBuildingRejected())\r\n        });\r\n};\r\n","import React, { Component} from 'react';\r\nimport BuildingsList from './BuildingsList';\r\nimport Chart from './Chart'\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport { connect} from 'react-redux';\r\nimport {\r\n  getBuildings as getBuildingActions,\r\n      } from '../../redux/actions/buildingsActions';\r\nimport {showModal as showModalAction} from '../../redux/actions/modalActions'\r\nimport modalTypes from '../../redux/types/types-modals';\r\n\r\n\r\n//Set Building Object\r\nclass Buildings extends Component {\r\n\r\n\r\n  state = {\r\n    buildingEdit: null,\r\n    showForm: false,\r\n    showGraph: false,\r\n    chartData:{},\r\n  };\r\n\r\n  componentWillMount(){\r\n     this.getChartData();\r\n   }\r\n\r\n   getChartData(){\r\n    this.setState({\r\n      chartData:{\r\n        labels: ['Business', 'Particular'],\r\n        datasets:[\r\n          {\r\n            label:'Boilers',\r\n            data:[\r\n              1,\r\n              7\r\n            ],\r\n            backgroundColor:[\r\n              'rgba(255, 99, 132, 0.6)',\r\n              'rgba(54, 162, 235, 0.6)'\r\n            ]\r\n          }\r\n        ]\r\n      }\r\n    });\r\n  }\r\n\r\n  //Get data from API\r\n  componentDidMount() {\r\n    this.props.getBuildings();\r\n  }\r\n\r\n  // Edit Building\r\n  editBuilding = (building) => {\r\n    this.setState({\r\n      buildingEdit: building,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  //Showadd Modal\r\n  showAddModal = () =>{\r\n    this.props.showModal(modalTypes.ADD_BUILDING);\r\n  };\r\n\r\n// Show GRAPH\r\nhandleShowGraph = () => {\r\n  this.setState({\r\n    showGraph: !this.state.showGraph,\r\n  });\r\n  window.scrollTo(0, 0);\r\n};\r\n\r\n  render() { \r\n      return (\r\n        <div className={styles.info}>\r\n         {this.state.showGraph? (\r\n            <Chart\r\n            handleShowGraph={this.handleShowGraph}\r\n            showGraph={this.state.showGraph}\r\n            chartData={this.state.chartData}\r\n             legendPosition=\"bottom\"\r\n             buildings={this.props.buildings}\r\n\r\n            />\r\n         ):(\r\n            <BuildingsList\r\n              buildings={this.props.buildings}\r\n              editBuilding={this.editBuilding}\r\n              showAddModal={this.showAddModal}\r\n              handleShowGraph={this.handleShowGraph}\r\n              showGraph={this.state.showGraph}\r\n            />\r\n         )\r\n         }\r\n        </div>\r\n      );\r\n    }\r\n  }  \r\n  \r\n  const mapDispatchToProps = (dispatch) =>({\r\n    showModal: (modalType) =>dispatch(showModalAction(modalType)),\r\n      getBuildings: () => dispatch(getBuildingActions()),\r\n    });\r\n    \r\n    const mapStateToProps = (state) =>({\r\n      buildings: state.buildings.list,\r\n    });\r\n    \r\n\r\n    \r\n    export default connect(mapStateToProps, mapDispatchToProps)(Buildings);\r\n\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class CustomerItem extends Component {\r\n  render() {\r\n    const {\r\n      _id,\r\n      customerType,\r\n      email,\r\n      buildingsIds,\r\n      fiscalAddress,\r\n    } = this.props.customer;\r\n    return (\r\n      <tr className={styles.table}>\r\n        <td>{_id}</td>\r\n        <td>{customerType}</td>\r\n        <td>{email}</td>\r\n        <td>{buildingsIds}</td>\r\n        <td>{fiscalAddress}</td>\r\n        <td>\r\n          <button\r\n            title=\"Edit\"\r\n            onClick={this.props.editCustomer.bind(this, this.props.customer)}\r\n            className={styles.btnStyle}\r\n          >\r\n            <i className=\"far fa-edit\"></i>\r\n          </button>\r\n          <button\r\n            title=\"Delete\"\r\n            className={styles.btnStyle}\r\n            onClick={this.props.delCustomer.bind(this, _id)}\r\n          >\r\n            <i className=\"far fa-trash-alt\"></i>\r\n          </button>\r\n        </td>\r\n      </tr>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nCustomerItem.propTypes = {\r\n  customer: PropTypes.object.isRequired,\r\n  delCustomer: PropTypes.func.isRequired,\r\n  editCustomer: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default CustomerItem;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport CustomerItem from \"./CustomerItem\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass Customers extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Customers{\" \"}\r\n            <button\r\n              title=\"Add\"\r\n              className={styles.btnStyle}\r\n              onClick={() => this.props.handleShowForm()}\r\n            >\r\n              <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n            <tr className={styles.listHead}>\r\n              <th>Id</th>\r\n              <th>Type</th>\r\n              <th>Email</th>\r\n              <th>Buildings Ids</th>\r\n              <th>Fiscal address</th>\r\n              <th>Options</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.customers?.map((customer, index) => (\r\n              <CustomerItem\r\n                key={index}\r\n                customer={customer}\r\n                delCustomer={this.props.delCustomer}\r\n                editCustomer={this.props.editCustomer}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nCustomers.propTypes = {\r\n  customers: PropTypes.array.isRequired,\r\n  delCustomer: PropTypes.func.isRequired,\r\n  editCustomer: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  showForm: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default Customers;\r\n","import React, { Component } from \"react\";\r\nimport PropTypes from \"prop-types\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class AddCustomer extends Component {\r\n  state = {\r\n    _id: \"\",\r\n    customerType: \"\",\r\n    email: \"\",\r\n    buildingsIds: \"\",\r\n    fiscalAddress: \"\",\r\n  };\r\n\r\n  componentDidMount() {\r\n    if (this.props.customerEdit) {\r\n      this.handleEdit(this.props.customerEdit);\r\n    }\r\n  }\r\n\r\n  handleCleanForm = () => {\r\n    this.setState({\r\n      _id: \"\",\r\n      typeId: \"\",\r\n      maintainceRate: \"\",\r\n      hourMaintainceCost: \"\",\r\n      hourEventualCost: \"\",\r\n    });\r\n    this.props.handleShowForm();\r\n  };\r\n\r\n  handleEdit = (customerEdit) => {\r\n    this.setState({\r\n      _id: customerEdit._id,\r\n      customerType: customerEdit.customerType,\r\n      email: customerEdit.email,\r\n      buildingsIds: customerEdit.buildingsIds.toString(),\r\n      fiscalAddress: customerEdit.fiscalAddress,\r\n    });\r\n  };\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    if (this.state._id) {\r\n      this.props.updateCustomer(\r\n        this.state._id,\r\n        this.state.customerType,\r\n        this.state.email,\r\n        this.state.buildingsIds,\r\n        this.state.fiscalAddress\r\n      );\r\n    } else {\r\n      this.props.addCustomer(\r\n        this.state.customerType,\r\n        this.state.email,\r\n        this.state.buildingsIds,\r\n        this.state.fiscalAddress\r\n      );\r\n    }\r\n    this.handleCleanForm();\r\n  };\r\n\r\n  onChange = (e) => this.setState({ [e.target.name]: e.target.value });\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>{this.state._id ? \"Edit customer\" : \"Add new customer\"}</h1>\r\n        <form onSubmit={this.onSubmit}>\r\n          <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n          <input\r\n            type=\"text\"\r\n            name=\"customerType\"\r\n            className={styles.input}\r\n            placeholder=\"Type customer...\"\r\n            value={this.state.customerType}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"email\"\r\n            className={styles.input}\r\n            placeholder=\"Email ...\"\r\n            value={this.state.email}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"buildingsIds\"\r\n            className={styles.input}\r\n            placeholder=\"Buildings separated by commas...\"\r\n            value={this.state.buildingsIds}\r\n            onChange={this.onChange}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            name=\"fiscalAddress\"\r\n            className={styles.input}\r\n            placeholder=\"Fiscal address ...\"\r\n            value={this.state.fiscalAddress}\r\n            onChange={this.onChange}\r\n          />\r\n          <div  className={styles.formsBtn}>\r\n            {this.state._id ?\r\n              <button\r\n                title=\"Save\"\r\n                className={styles.btnStyle}\r\n              >\r\n                <i className=\"far fa-save\"></i>\r\n              </button>\r\n              :\r\n              <button\r\n                title=\"Add\"\r\n                className={styles.btnStyle}\r\n              >\r\n                <i className=\"fas fa-plus\"></i>\r\n              </button>\r\n            }\r\n            <div>\r\n              <button\r\n                title=\"Cancel\"\r\n                className={styles.btnStyle}\r\n                onClick={this.handleCleanForm}\r\n              >\r\n                <i className=\"fas fa-ban\"></i>\r\n              </button>\r\n            </div>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nAddCustomer.propTypes = {\r\n  addCustomer: PropTypes.func.isRequired,\r\n  updateCustomer: PropTypes.func.isRequired,\r\n  handleShowForm: PropTypes.func.isRequired,\r\n  customerEdit: PropTypes.object,\r\n};\r\n\r\nexport default AddCustomer;\r\n","import { requestGet,requestPost,requestPut,requestDelete } from '../../utils/request';\r\nimport {\r\n  GET_CUSTOMER_FETCHING,\r\n  GET_CUSTOMER_FULFILLED,\r\n  GET_CUSTOMER_REJECTED,\r\n  ADD_CUSTOMER_FETCHING,\r\n  ADD_CUSTOMER_FULFILLED,\r\n  ADD_CUSTOMER_REJECTED,\r\n  DEL_CUSTOMER_FETCHING,\r\n  DEL_CUSTOMER_FULFILLED,\r\n  DEL_CUSTOMER_REJECTED,\r\n  EDIT_CUSTOMER_FETCHING,\r\n  EDIT_CUSTOMER_FULFILLED,\r\n  EDIT_CUSTOMER_REJECTED,\r\n} from \"../types/types-customers\";\r\n\r\n//DECLARATE CONST AND IMPORT API\r\nconst URL = \"https://app-caldar-gm4.herokuapp.com/api/customers\";\r\n\r\n//ACTION TO GET CUSTOMER DATA\r\n\r\nconst getCustomerFetching = () => ({\r\n  type: GET_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst getCustomerFulfilled = (payload) => ({\r\n  type: GET_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst getCustomerRejected = () => ({\r\n  type: GET_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const getCustomers = () => (dispatch) => {\r\n  dispatch(getCustomerFetching());\r\n  return requestGet(URL)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(getCustomerFulfilled(response));\r\n    })\r\n    .catch(() => {\r\n      dispatch(getCustomerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO ADD CUSTOMER DATA\r\nconst addCustomerFetching = () => ({\r\n  type: ADD_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst addCustomerFulfilled = (payload) => ({\r\n  type: ADD_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst addCustomerRejected = () => ({\r\n  type: ADD_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const addCustomer = (\r\n  customerType,\r\n  email,\r\n  buildingsIds,\r\n  fiscalAddress\r\n) => (dispatch) => {\r\n  dispatch(addCustomerFetching());\r\n  const dataSend = { customerType, email, buildingsIds, fiscalAddress };\r\n  const requestOptions = {\r\n    method: \"POST\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return requestPost(URL, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(addCustomerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getCustomers()))\r\n    .catch(() => {\r\n      dispatch(addCustomerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO DELETE CUSTOMER DATA\r\n\r\nconst delCustomerFetching = () => ({\r\n  type: DEL_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst delCustomerFulfilled = (payload) => ({\r\n  type: DEL_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst delCustomerRejected = () => ({\r\n  type: DEL_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const delCustomer = (_id) => (dispatch) => {\r\n  dispatch(delCustomerFetching());\r\n  const dataSend = { _id };\r\n  const requestOptions = {\r\n    method: \"DELETE\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return requestDelete(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(delCustomerFulfilled(_id));\r\n    })\r\n    .then(() => dispatch(getCustomers()))\r\n    .catch(() => {\r\n      dispatch(delCustomerRejected());\r\n    });\r\n};\r\n\r\n//ACTION TO EDIT CUSTOMER DATA\r\n\r\nconst editCustomerFetching = () => ({\r\n  type: EDIT_CUSTOMER_FETCHING,\r\n});\r\n\r\nconst editCustomerFulfilled = (payload) => ({\r\n  type: EDIT_CUSTOMER_FULFILLED,\r\n  payload,\r\n});\r\n\r\nconst editCustomerRejected = () => ({\r\n  type: EDIT_CUSTOMER_REJECTED,\r\n});\r\n\r\nexport const editCustomer = (\r\n  _id,\r\n  customerType,\r\n  email,\r\n  buildingsIds,\r\n  fiscalAddress\r\n) => (dispatch) => {\r\n  dispatch(editCustomerFetching());\r\n\r\n  const dataSend = { _id, customerType, email, buildingsIds, fiscalAddress };\r\n  const requestOptions = {\r\n    method: \"PUT\",\r\n    headers: { \"Content-Type\": \"application/json\" },\r\n    body: JSON.stringify(dataSend),\r\n  };\r\n\r\n  return requestPut(`${URL}/${_id}`, requestOptions)\r\n    .then((data) => data.json())\r\n    .then((response) => {\r\n      dispatch(editCustomerFulfilled(response));\r\n    })\r\n    .then(() => dispatch(getCustomers()))\r\n    .catch(() => {\r\n      dispatch(editCustomerRejected());\r\n    });\r\n};\r\n","import React, { Component } from \"react\";\r\nimport CustomersList from \"./CustomersList\";\r\nimport AddCustomer from \"./AddCustomer\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getCustomers as getCustomersActions,\r\n  delCustomer as delCustomerActions,\r\n  addCustomer as addCustomerActions,\r\n  editCustomer as updateCustomerActions,\r\n} from \"../../redux/actions/customersActions\";\r\n\r\nclass Customers extends Component {\r\n  state = {\r\n    customerEdit: null,\r\n    showForm: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getCustomers();\r\n  }\r\n\r\n  // Show form\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      customerEdit: null,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // Edit Customer\r\n  editCustomer = (customer) => {\r\n    this.setState({\r\n      customerEdit: customer,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.info}>\r\n        {this.state.showForm ? (\r\n          <AddCustomer\r\n            addCustomer={this.props.addCustomer}\r\n            updateCustomer={this.props.updateCustomer}\r\n            customerEdit={this.state.customerEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n        ) : (\r\n          <CustomersList\r\n            customers={this.props.customers}\r\n            delCustomer={this.props.delCustomer}\r\n            editCustomer={this.editCustomer}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getCustomers: () => dispatch(getCustomersActions()),\r\n  delCustomer: (_id) => dispatch(delCustomerActions(_id)),\r\n  addCustomer: (customerType, email, buildingsIds, fiscalAddress) =>\r\n    dispatch(\r\n      addCustomerActions(customerType, email, buildingsIds, fiscalAddress)\r\n    ),\r\n  updateCustomer: (_id, customerType, email, buildingsIds, fiscalAddress) =>\r\n    dispatch(\r\n      updateCustomerActions(\r\n        _id,\r\n        customerType,\r\n        email,\r\n        buildingsIds,\r\n        fiscalAddress\r\n      )\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  customers: state.customers.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Customers);","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class Technicianitem extends Component {\r\n\r\n    render() {\r\n        const { _id, firstName, lastName, email, typeIds, skillsId, hour_rate, daily_capacity} = this.props.technician;\r\n        return (\r\n            <tr className={styles.table}>\r\n                <td>{_id}</td>\r\n                <td>{firstName}</td>\r\n                <td>{lastName}</td>\r\n                <td>{email}</td>\r\n                <td>{typeIds}</td>\r\n                <td>{skillsId}</td>\r\n                <td>{hour_rate}</td>\r\n                <td>{daily_capacity}</td>\r\n                <button\r\n                        title=\"Edit\"\r\n                        onClick={this.props.editTechnician.bind(this, this.props.technician)}\r\n                        className={styles.btnStyle}\r\n                    >\r\n                        <i className=\"far fa-edit\"></i>\r\n                    </button>\r\n                    <button\r\n                        title=\"Delete\"\r\n                        className={styles.btnStyle}\r\n                        onClick={this.props.delTechnician.bind(this, _id)}\r\n                    >\r\n                        <i className=\"far fa-trash-alt\"></i>\r\n                    </button>\r\n            </tr>\r\n        )\r\n    }\r\n}\r\n\r\n// Prop types\r\nTechnicianitem.propTypes = {\r\n    technician: PropTypes.object.isRequired,\r\n    delTechnician: PropTypes.func.isRequired,\r\n    editTechnician: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default Technicianitem\r\n","import React, { Component } from 'react';\r\nimport TechnicianItem from './TechnicianItem';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass TechniciansList extends Component {\r\n  render() {\r\n    return (\r\n      <div>\r\n        <h1>Technicians{\" \"}\r\n            <button\r\n              title=\"Add\"\r\n              className={styles.btnStyle}\r\n              onClick={() => this.props.handleShowForm()}\r\n            >\r\n              <i className=\"fas fa-plus\"></i>\r\n            </button>\r\n        </h1>\r\n        <table className={styles.table}>\r\n          <thead>\r\n            <tr className={styles.listHead}>\r\n              <th>Id</th>\r\n              <th>First Name</th>\r\n              <th>Last Name</th>\r\n              <th>Email</th>\r\n              <th>Type Ids</th>\r\n              <th>Skills Id</th>\r\n              <th>Hour Rate</th>\r\n              <th>Daily Capacity</th>\r\n              <th>Options</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {this.props.technicians.map((technician, index) => (\r\n              <TechnicianItem\r\n                key={index}\r\n                technician={technician}\r\n                editTechnician={this.props.editTechnician}\r\n                delTechnician={this.props.delTechnician}\r\n              />\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// Prop types\r\nTechniciansList.propTypes = {\r\n    technicians: PropTypes.array.isRequired,\r\n    delTechnician: PropTypes.func.isRequired,\r\n    editTechnician: PropTypes.func.isRequired,\r\n    handleShowForm: PropTypes.func.isRequired,\r\n    showForm: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default TechniciansList;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nexport class AddTechnician extends Component {\r\n    state = {\r\n        _id:\"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        typeIds: \"\",\r\n        skillsId: \"\",\r\n        hour_rate: \"\",\r\n        daily_capacity: \"\",\r\n      };\r\n\r\n    componentDidMount(){\r\n      if (this.props.technicianEdit) {\r\n      this.handleEdit(this.props.technicianEdit);\r\n    }\r\n  }\r\n    handleCleanForm = () => {\r\n      this.setState({\r\n        _id:\"\",\r\n        firstName: \"\",\r\n        lastName: \"\",\r\n        email: \"\",\r\n        typeIds: \"\",\r\n        skillsId: \"\",\r\n        hour_rate: \"\",\r\n        daily_capacity: \"\",\r\n        });\r\n        this.props.handleShowForm();\r\n  }\r\n    \r\n    handleEdit = (technicianEdit) => {\r\n        this.setState({\r\n            _id: technicianEdit._id,\r\n            firstName: technicianEdit.firstName,\r\n            lastName: technicianEdit.lastName,\r\n            email: technicianEdit.email,\r\n            typeIds: technicianEdit.typeIds,\r\n            skillsId: technicianEdit.skillsId,\r\n            hour_rate: technicianEdit.hour_rate,\r\n            daily_capacity: technicianEdit.daily_capacity,\r\n        });\r\n    };\r\n\r\n\r\n      onSubmit = (e) => {\r\n        e.preventDefault();\r\n        if (this.state._id) {\r\n            this.props.updateTechnician(\r\n                this.state._id,\r\n                this.state.firstName,\r\n                this.state.lastName,\r\n                this.state.email,\r\n                this.state.typeIds,\r\n                this.state.skillsId,\r\n                this.state.hour_rate,\r\n                this.state.daily_capacity,\r\n            );\r\n        } else {\r\n            this.props.addTechnician(\r\n                this.state.firstName,\r\n                this.state.lastName,\r\n                this.state.email,\r\n                this.state.typeIds,\r\n                this.state.skillsId,\r\n                this.state.hour_rate,\r\n                this.state.daily_capacity,\r\n            );\r\n        }\r\n        this.handleCleanForm();\r\n    }\r\n\r\n    onChange = (e) => this.setState({ [e.target.name]: e.target.value});\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <h1>{this.state._id ? \"Edit Technician\" : \"Add new Technician\"}</h1>\r\n                <form onSubmit={this.onSubmit}>\r\n                    <input type=\"hidden\" name=\"_id\" value={this.state._id} />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"firstName\"\r\n                            className={styles.input}\r\n                            placeholder=\"First Name...\"\r\n                            value={this.state.firstName}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"lastName\"\r\n                            className={styles.input}\r\n                            placeholder=\"Last Name...\"\r\n                            value={this.state.lastName}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"email\"\r\n                            name=\"email\"\r\n                            className={styles.input}\r\n                            placeholder=\"Email...\"\r\n                            value={this.state.email}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"typeIds\"\r\n                            className={styles.input}\r\n                            placeholder=\"Type Ids...\"\r\n                            value={this.state.typeIds}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"skillsId\"\r\n                            className={styles.input}\r\n                            placeholder=\"Skills Id...\"\r\n                            value={this.state.skillsId}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"text\"\r\n                            name=\"hour_rate\"\r\n                            className={styles.input}\r\n                            placeholder=\"Hour rate...\"\r\n                            value={this.state.hour_rate}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <input\r\n                            type=\"number\"\r\n                            name=\"daily_capacity\"\r\n                            className={styles.input}\r\n                            placeholder=\"Daily capacity...\"\r\n                            value={this.state.daily_capacity}\r\n                            onChange={this.onChange}\r\n                        />\r\n                        <div  className={styles.formsBtn}>\r\n                            {this.state._id ?\r\n                                <button\r\n                                    title=\"Save\"\r\n                                    className={styles.btnStyle}\r\n                                >\r\n                                    <i className=\"far fa-save\"></i>\r\n                                </button>\r\n                                :\r\n                                <button\r\n                                    title=\"Add\"\r\n                                    className={styles.btnStyle}\r\n                                >\r\n                                        <i className=\"fas fa-plus\"></i>\r\n                                </button>\r\n                            }\r\n                            <div>\r\n                                <button\r\n                                    title=\"Cancel\"\r\n                                    className={styles.btnStyle}\r\n                                    onClick={this.handleCleanForm}\r\n                                >\r\n                                        <i className=\"fas fa-ban\"></i>\r\n                                </button>\r\n                            </div>\r\n                        </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n// Prop types\r\nAddTechnician.propTypes = {\r\n    addTechnician: PropTypes.func.isRequired,\r\n    updateTechnician: PropTypes.func.isRequired,\r\n    handleShowForm: PropTypes.func.isRequired,\r\n    technicianEdit: PropTypes.object,\r\n}\r\n\r\nexport default AddTechnician;","import { requestGet,requestPost,requestPut,requestDelete } from '../../utils/request';\r\nimport {\r\n    GET_TECHNICIANS_FETCHING,\r\n    GET_TECHNICIANS_FULFILLED,\r\n    GET_TECHNICIANS_REJECTED,\r\n    ADD_TECHNICIANS_FETCHING,\r\n    ADD_TECHNICIANS_FULFILLED,\r\n    ADD_TECHNICIANS_REJECTED,\r\n    DEL_TECHNICIANS_FETCHING,\r\n    DEL_TECHNICIANS_FULFILLED,\r\n    DEL_TECHNICIANS_REJECTED,\r\n    EDIT_TECHNICIANS_FETCHING,\r\n    EDIT_TECHNICIANS_FULFILLED,\r\n    EDIT_TECHNICIANS_REJECTED\r\n} from '../types/types-technicians';\r\n\r\nconst URL = 'https://app-caldar-gm4.herokuapp.com/api/technician';\r\n\r\nconst getTechniciansFetching = () => ({\r\n    type: GET_TECHNICIANS_FETCHING,\r\n});\r\n\r\nconst getTechniciansFulfilled = (payload) => ({\r\n    type: GET_TECHNICIANS_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst getTechniciansRejected = () => ({\r\n    type: GET_TECHNICIANS_REJECTED,\r\n});\r\n\r\nexport const getTechnicians = () => (dispatch) => {\r\n    dispatch(getTechniciansFetching());\r\n    return requestGet(URL)\r\n        .then(data => data.json())\r\n        .then(response => {\r\n            dispatch(getTechniciansFulfilled(response));\r\n        })\r\n        .catch(() => {\r\n            dispatch(getTechniciansRejected ());\r\n        })\r\n};\r\n\r\nconst addTechniciansFetching = () => ({\r\n    type: ADD_TECHNICIANS_FETCHING,\r\n});\r\n\r\nconst addTechniciansFulfilled = (payload) => ({\r\n    type: ADD_TECHNICIANS_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst addTechniciansRejected = () => ({\r\n    type: ADD_TECHNICIANS_REJECTED,\r\n});\r\n\r\nexport const addTechnicians = (\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    typeIds,\r\n    skillsId,\r\n    hour_rate,\r\n    daily_capacity,\r\n) => (dispatch) => {\r\n    dispatch(addTechniciansFetching());\r\n    const dataSend = {\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        typeIds,\r\n        skillsId,\r\n        hour_rate,\r\n        daily_capacity,\r\n    };\r\n    const requestOptions = {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n      };\r\n    return requestPost(URL, requestOptions)\r\n        .then(data=> data.json())\r\n        .then(response => {\r\n            dispatch(addTechniciansFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getTechnicians()))\r\n        .catch(() => {\r\n            dispatch(addTechniciansRejected ());\r\n        })\r\n};\r\n\r\nconst editTechniciansFetching = () => ({\r\n    type: EDIT_TECHNICIANS_FETCHING,\r\n});\r\n\r\nconst editTechniciansFulfilled = (payload) => ({\r\n    type: EDIT_TECHNICIANS_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst editTechniciansRejected = () => ({\r\n    type: EDIT_TECHNICIANS_REJECTED,\r\n});\r\n\r\nexport const editTechnicians = (\r\n    _id,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    typeIds,\r\n    skillsId,\r\n    hour_rate,\r\n    daily_capacity,\r\n) => (dispatch) => {\r\n    dispatch(editTechniciansFetching());\r\n    const dataSend = {\r\n        _id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        typeIds,\r\n        skillsId,\r\n        hour_rate,\r\n        daily_capacity,\r\n      };\r\n      const requestOptions = {\r\n        method: \"PUT\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(dataSend),\r\n      };\r\n    return requestPut(`${URL}/${_id}`, requestOptions)\r\n        .then(data=> data.json())\r\n        .then(response => {\r\n            dispatch(editTechniciansFulfilled(response));\r\n        })\r\n        .then(() => dispatch(getTechnicians()))\r\n        .catch(() => {\r\n            dispatch(editTechniciansRejected ());\r\n        })\r\n};\r\n\r\nconst delTechniciansFetching = () => ({\r\n    type: DEL_TECHNICIANS_FETCHING,\r\n});\r\n\r\nconst delTechniciansFulfilled = (payload) => ({\r\n    type: DEL_TECHNICIANS_FULFILLED,\r\n    payload,\r\n});\r\n\r\nconst delTechniciansRejected = () => ({\r\n    type: DEL_TECHNICIANS_REJECTED,\r\n});\r\n\r\nexport const delTechnicians = (_id) => (dispatch) => {\r\n    dispatch(delTechniciansFetching());\r\n    const dataSend = { _id };\r\n    const requestOptions = {\r\n      method: \"DELETE\",\r\n      headers: { \"Content-Type\": \"application/json\" },\r\n      body: JSON.stringify(dataSend),\r\n    };\r\n    return requestDelete(`${URL}/${_id}`, requestOptions)\r\n        .then(data => data.json())\r\n        .then(response => {\r\n            dispatch(delTechniciansFulfilled(_id));\r\n        })\r\n        .then(() => dispatch(getTechnicians()))\r\n        .catch(() => {\r\n            dispatch(delTechniciansRejected ());\r\n        })\r\n};\r\n\r\n","import React, { Component } from \"react\";\r\nimport TechniciansList from \"./TechniciansList\";\r\nimport AddTechnician from \"./AddTechnician\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\nimport { connect } from \"react-redux\";\r\nimport {\r\n  getTechnicians as getTechniciansActions,\r\n  delTechnicians as delTechniciansActions,\r\n  addTechnicians as addTechniciansActions,\r\n  editTechnicians as updateTechniciansActions,\r\n} from \"../../redux/actions/techniciansActions\";\r\n\r\nclass Technicians extends Component {\r\n  state = {\r\n    technicianEdit: null,\r\n    showForm: false,\r\n  };\r\n\r\n  componentDidMount() {\r\n    this.props.getTechnicians();\r\n  }\r\n\r\n  // Show form\r\n  handleShowForm = () => {\r\n    this.setState({\r\n      showForm: !this.state.showForm,\r\n      technicianEdit: null\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  // Edit Technician\r\n  editTechnician = (technician) => {\r\n    this.setState({\r\n      technicianEdit: technician,\r\n      showForm: true,\r\n    });\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div className={styles.info}>\r\n          {this.state.showForm ? (\r\n          <AddTechnician\r\n            addTechnician={this.props.addTechnicians}\r\n            updateTechnician={this.props.updateTechnicians}\r\n            technicianEdit={this.state.technicianEdit}\r\n            handleShowForm={this.handleShowForm}\r\n          />\r\n          ) : (\r\n          <TechniciansList\r\n            technicians={this.props.technicians}\r\n            delTechnician={this.props.delTechnicians}\r\n            editTechnician={this.editTechnician}\r\n            handleShowForm={this.handleShowForm}\r\n            showForm={this.state.showForm}\r\n          />\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  getTechnicians: () => dispatch(getTechniciansActions()),\r\n  delTechnicians: (_id) => dispatch(delTechniciansActions(_id)),\r\n  addTechnicians: (firstName, lastName, email, typeIds, skillsId, hour_rate, daily_capacity) =>\r\n    dispatch(\r\n      addTechniciansActions(\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        typeIds,\r\n        skillsId,\r\n        hour_rate,\r\n        daily_capacity,\r\n      )\r\n    ),\r\n  updateTechnicians: (\r\n    _id,\r\n    firstName,\r\n    lastName,\r\n    email,\r\n    typeIds,\r\n    skillsId,\r\n    hour_rate,\r\n    daily_capacity,\r\n  ) =>\r\n    dispatch(\r\n      updateTechniciansActions(\r\n        _id,\r\n        firstName,\r\n        lastName,\r\n        email,\r\n        typeIds,\r\n        skillsId,\r\n        hour_rate,\r\n        daily_capacity,\r\n      )\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({\r\n  technicians: state.technicians.list,\r\n});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Technicians);","import React from 'react';\r\nimport styles from \"../../layout/main/main.module.css\";\r\nconst TextInput = ({\r\n    input,\r\n    meta,\r\n    label,\r\n    placeholder,\r\n}) => (\r\n    <>\r\n    <label className={styles.textInputLabel}>{label}</label>\r\n    <input className={styles.textInput} {...input} type=\"text\" placeholder={placeholder}/>\r\n    { meta.error && meta.touched && <div className={styles.error}>{meta.error}</div>}\r\n    </>\r\n);\r\n\r\nexport default TextInput;","import React, { Component } from 'react'\r\nimport PropTypes from 'prop-types';\r\nimport styles from '../../layout/main/main.module.css';\r\nimport {Form, Field} from 'react-final-form';\r\nimport TextInput from \"../../SharedComponents/TextInput/TextInput\";\r\nimport { connect} from 'react-redux';\r\nimport {closeModal as closeModalActions,} from '../../redux/actions/modalActions'\r\n\r\nimport {\r\n  addBuilding as addBuildingActions,\r\n  editBuilding as updateBuildingActions,\r\n}from '../../redux/actions/buildingsActions';\r\n \r\nexport class AddBuilding extends Component {\r\n     \r\n\r\n     onSubmit = (values) => {\r\n         if (values._id) {\r\n            this.props.updateBuilding(\r\n                values._id,\r\n                values.boilersId,\r\n                values.businessName,\r\n                values.email,\r\n                values.adress,\r\n                values.phone,\r\n            );\r\n          } else {\r\n         this.props.addBuilding(\r\n           values.boilersId,\r\n           values.businessName,\r\n           values.email,\r\n           values.adress,\r\n           values.phone\r\n\r\n        );\r\n      }\r\n      this.props.closeModal();\r\n    };\r\n    \r\n    render(){\r\n      const buildingEdit = this.props.buildingEdit;\r\n        return(\r\n            <div>\r\n                <h1>\r\n                {buildingEdit && buildingEdit._id ? \"Edit building\" : \"Add new Building\"}</h1>\r\n                <Form\r\n                  onSubmit={this.onSubmit}\r\n                  initialValues={{\r\n                    _id: buildingEdit && buildingEdit._id,\r\n                    boilersId: buildingEdit && buildingEdit.boilersId,\r\n                    businessName: buildingEdit && buildingEdit.businessName,\r\n                    email: buildingEdit && buildingEdit.email,\r\n                    adress: buildingEdit && buildingEdit.adress,\r\n                    phone: buildingEdit && buildingEdit.phone,\r\n                  }}\r\n                  validate={(values)=>{\r\n                    const errors = {};\r\n\r\n                    if(!values.boilersId){\r\n                      errors.boilersId=\"Required\";\r\n                    } else if ((values.boilersId.length <24)){\r\n                        errors.boilersId = 'At least 24 characters, only numbers and letter. Example 5fef8b6c46090d0017049421'\r\n                    }\r\n                    if(!values.businessName){\r\n                      errors.businessName=\"Required\";\r\n                    }\r\n                    if(!values.email){\r\n                      errors.email=\"Required\";\r\n                    } else if (!/^[^@]+@[^@]+\\.[A-Z]{2,4}$/i.test(values.email)){\r\n                      errors.email = \"invalid e-mail the E-mail must contain @ and .com\"\r\n                    }\r\n\r\n                    if(!values.adress){\r\n                      errors.adress=\"Required\";\r\n                    } else if (!/[a-z]/i.test(values.adress) || !/\\d/g.test(values.adress) || (values.adress.length <5) || (values.adress.indexOf(\" \") === -1)){\r\n                      errors.adress = \"At least 5 characters, with letters, numbers and a space\"\r\n                    }\r\n                    if(!values.phone){\r\n                      errors.phone=\"Required\";\r\n                    } else if (!/^[+0-9]+[^-_()\\\\s]$/.test(values.phone) || (values.phone.length <7) || (values.phone.indexOf(\" \") !== -1) ){\r\n                      errors.phone = \"Number of at least 7 digits, do not accept spaces, hyphens or parentheses.\"\r\n                    }\r\n\r\n                    return errors;\r\n    }}\r\n                  render={({handleSubmit}) => (\r\n                        <form onSubmit={handleSubmit}>\r\n                          <Field \r\n                              name=\"_id\"\r\n                              component=\"input\"\r\n                              type=\"hidden\"\r\n                              placeholder=\"_Id\"\r\n                              className={styles.input}\r\n                            />\r\n                          <Field \r\n                                name=\"boilersId\"\r\n                                component={TextInput}\r\n                                type=\"text\"\r\n                                placeholder=\"Add boiler Id...\"\r\n                                className={styles.input}\r\n                            />\r\n                         \r\n                          <Field \r\n                                name=\"businessName\"\r\n                                component={TextInput}\r\n                                type=\"text\"\r\n                                placeholder=\"Add Business Name...\"\r\n                                className={styles.input}\r\n                              />\r\n          \r\n                          <Field \r\n                                name=\"email\"\r\n                                component={TextInput}\r\n                                type=\"text\"\r\n                                placeholder=\"Add email@email.com\"\r\n                                className={styles.input}\r\n                               \r\n                        \r\n                          />\r\n                          <Field \r\n                                name=\"adress\"\r\n                                component={TextInput}\r\n                                type=\"text\"\r\n                                placeholder=\"Add Address...\"\r\n                                className={styles.input}\r\n                                 \r\n                          />\r\n                          <Field \r\n                                name=\"phone\"\r\n                                component={TextInput}\r\n                                placeholder=\"Add phone number\"\r\n                                type=\"text\"\r\n                                className={styles.input} \r\n                          />\r\n                         <div  className={styles.formsBtn}>\r\n                      {buildingEdit && buildingEdit._id ? (\r\n                        <button type='submit' title=\"Save\" className={styles.btnStyle}>\r\n                          <i className=\"far fa-save\"></i>\r\n                        </button>\r\n                      ) : (\r\n                        <button type='submit' title=\"Add\" className={styles.btnStyle}\r\n                        >\r\n                          <i className=\"fas fa-plus\"></i>\r\n                        </button>\r\n                      )}\r\n                      <div>\r\n                        <button\r\n                          title=\"Cancel\"\r\n                          className={styles.btnStyle}\r\n                          onClick={this.props.closeModal}\r\n                        >\r\n                          <i className=\"fas fa-ban\"></i>\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                          \r\n                        </form>\r\n                      )}\r\n                  />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n//proptypes\r\nAddBuilding.propTypes = {\r\n   buildingEdit: PropTypes.object,\r\n  };\r\n\r\n  const mapDispatchToProps = (dispatch) =>({\r\n    closeModal: () => dispatch(closeModalActions()),\r\n    addBuilding: (boilersId, businessName,email,phone,adress) =>\r\n    dispatch(\r\n      addBuildingActions(\r\n        boilersId, \r\n        businessName,\r\n        email,\r\n        adress,\r\n        phone\r\n         )\r\n    ),\r\n\r\n    editBuilding: (\r\n      _id,\r\n      boilersId, \r\n        businessName,\r\n        email,\r\n        adress,\r\n        phone\r\n    ) =>\r\n    dispatch (\r\n      updateBuildingActions(\r\n        _id,\r\n        boilersId, \r\n        businessName,\r\n        email,\r\n        adress,\r\n        phone\r\n      )\r\n    ),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddBuilding) ","import React, { Component } from \"react\";\r\nimport { delBuilding as delBuildingActions } from \"../../redux/actions/buildingsActions\"\r\nimport { connect } from \"react-redux\";\r\nimport PropTypes from \"prop-types\";\r\nimport { closeModal as closeModalActions } from \"../../redux/actions/modalActions\";\r\nimport styles from \"../../layout/main/main.module.css\";\r\n\r\nclass RemoveBuildingMessage extends Component {\r\n  render() {\r\n\t\tconst handleDelete = () => {\r\n\t\t\tthis.props.delBuilding(this.props.buildingId);\r\n\t\t\tthis.props.closeModal();\r\n\t\t}\r\n    return (\r\n      <div>\r\n        <h1>Are you sure to delete this item?</h1>\r\n        <button\r\n          type=\"submit\"\r\n          title=\"Add\"\r\n          className={styles.btnStyle}\r\n          onClick={handleDelete}\r\n        >\r\n          <i className=\"fas fa-check\"></i>\r\n        </button>\r\n        <button\r\n          title=\"Cancel\"\r\n          className={styles.btnStyle}\r\n          onClick={this.props.closeModal}\r\n        >\r\n          <i className=\"fas fa-ban\"></i>\r\n        </button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n// PropTypes\r\nRemoveBuildingMessage.propTypes = {\r\n  buildingId: PropTypes.string,\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => ({\r\n  delBuilding: (_id) => dispatch(delBuildingActions(_id)),\r\n  closeModal: () => dispatch(closeModalActions()),\r\n});\r\n\r\nconst mapStateToProps = (state) => ({});\r\n\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(RemoveBuildingMessage);\r\n","import React from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MaterialModal from '@material-ui/core/Modal';\r\nimport { connect } from 'react-redux';\r\nimport { bindActionCreators } from 'redux';\r\nimport { closeModal as closeModalAction } from '../../redux/actions/modalActions';\r\nimport modalTypes from '../../redux/types/types-modals';\r\n\r\n// Components\r\nimport AppointmentForm from '../../components/Appointments/AppointmentForm';\r\nimport RemoveAppointmentMessage from '../../components/Appointments/RemoveAppointmentMessage';\r\nimport AddBoiler from '../../components/Boilers/AddBoiler';\r\nimport RemoveBoilerMessage from '../../components/Boilers/RemoveBoilerMessage';\r\nimport BoilerTypeForm from '../../components/BoilersTypes/BoilerTypeForm';\r\nimport RemoveBoilerTypeMessage from '../../components/BoilersTypes/RemoveBoilerTypeMessage';\r\nimport AddBuilding from '../../components/Buildings/AddBuilding';\r\nimport RemoveBuildingMessage from \"../../components/Buildings/RemoveBuildingMessage\";\r\n//import EditBuildingMessage from \"../../components/Buildings/EditBuildingMesagge\";\r\nimport CustomerForm from '../../components/Customers/CustomerForm';\r\nimport RemoveCustomerMessage from '../../components/Customers/RemoveCustomerMessage';\r\nimport TechnicianForm from '../../components/Technicians/TechnicianForm';\r\nimport RemoveTechnicianMessage from '../../components/Technicians/RemoveTechnicianMessage';\r\n\r\nfunction getModalStyle() {\r\n    const top = 50;\r\n    const left = 50;\r\n  \r\n    return {\r\n      top: `${top}%`,\r\n      left: `${left}%`,\r\n      transform: `translate(-${top}%, -${left}%)`,\r\n    };\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n      position: \"absolute\",\r\n      width: 600,\r\n      backgroundColor: theme.palette.background.paper,\r\n      border: \"2px solid #000\",\r\n      boxShadow: theme.shadows[5],\r\n      padding: theme.spacing(2, 4, 3),\r\n    },\r\n}));\r\n\r\n\r\nconst Modal = ({\r\n    show,\r\n    modalType,\r\n    meta,\r\n    closeModal,\r\n}) => {\r\n     const classes = useStyles();\r\n     const [modalStyle] = React.useState(getModalStyle);\r\n\r\n    \r\n    let modalComponent;\r\n    switch(modalType) {\r\n        case modalTypes.ADD_APPOINTMENT:\r\n            modalComponent = <AppointmentForm />\r\n            break;\r\n        case modalTypes.DEL_APPOINTMENT:\r\n            modalComponent = <RemoveAppointmentMessage appointmentId={meta.id} />\r\n            break;\r\n        case modalTypes.ADD_BOILER:\r\n            modalComponent = <AddBoiler />\r\n            break;\r\n        case modalTypes.DEL_BOILER:\r\n            modalComponent = <RemoveBoilerMessage boilerId={meta.id} />\r\n            break;       \r\n        case modalTypes.ADD_BOILERTYPE:\r\n            modalComponent = <BoilerTypeForm />\r\n            break;\r\n        case modalTypes.DEL_BOILERTYPE:\r\n            modalComponent = <RemoveBoilerTypeMessage boilerTypeId={meta.id} />\r\n            break;\r\n        case modalTypes.ADD_BUILDING:\r\n            modalComponent = <AddBuilding/>\r\n            break;\r\n        case modalTypes.DEL_BUILDING:\r\n            modalComponent = <RemoveBuildingMessage buildingId={meta.id} />\r\n            break;\r\n        /*case modalTypes.EDIT_BUILDING:\r\n            modalComponent = <EditBuildingMessage buildingId={meta.id} />\r\n            break;*/\r\n        case modalTypes.ADD_CUSTOMER:\r\n            modalComponent = <CustomerForm />\r\n            break;\r\n        case modalTypes.DEL_CUSTOMER:\r\n            modalComponent = <RemoveCustomerMessage customerId={meta.id} />\r\n            break;\r\n        case modalTypes.ADD_TECHNICIAN:\r\n            modalComponent = <TechnicianForm />\r\n            break;\r\n        case modalTypes.DEL_TECHNICIAN:\r\n            modalComponent = <RemoveTechnicianMessage technicianId={meta.id} />\r\n            break;\r\n        default:\r\n            modalComponent = null\r\n            break;\r\n    }\r\n\r\n    return (\r\n        <MaterialModal\r\n        open={show}\r\n        onClose={closeModal}\r\n        aria-labelledby=\"simple-modal-title\"\r\n        aria-describedby=\"simple-modal-description\"\r\n    >\r\n        <div style={modalStyle} className={classes.paper}>\r\n            {modalComponent}\r\n        </div>\r\n        </MaterialModal>\r\n    );\r\n};\r\n\r\nconst mapStateToProps = (state) =>{\r\n    return {\r\n        show: state.modal.show,\r\n        modalType: state.modal.modalType,\r\n        meta: state.modal.meta\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) =>{\r\n    return bindActionCreators (\r\n        {\r\n        closeModal: closeModalAction,\r\n        },\r\n        dispatch\r\n    );\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(Modal);  \r\n\r\n\r\n","import React from 'react';\r\nimport styles from './passInput.module.css';\r\n\r\nconst PassInput = ({\r\n    input,\r\n    meta,\r\n    label,\r\n    placeholder,\r\n}) => (\r\n    <>\r\n    <label className={styles.passInpuLabel}>{label}</label>\r\n    <input className={styles.passInput} {...input} type=\"password\" placeholder={placeholder}/>\r\n    { meta.error && meta.touched && <div className={styles.error}>{meta.error}</div>}\r\n    </>\r\n);\r\n\r\nexport default PassInput;","import React from \"react\";\r\nimport { Form, Field } from \"react-final-form\";\r\nimport { connect } from \"react-redux\";\r\nimport { bindActionCreators } from \"redux\";\r\nimport TextInput from \"../../SharedComponents/TextInput/TextInput\";\r\nimport PassInput from \"../../SharedComponents/PassInput/PassInput\";\r\nimport { loginWithFirebase } from \"../../redux/actions/authActions\";\r\nimport { Button } from \"@material-ui/core\";\r\n\r\nconst Login = ({ login }) => {\r\n  const onSubmitLogin = (values) => {\r\n    login(values);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        <h3>Login</h3>\r\n        <Form onSubmit={onSubmitLogin}>\r\n          {({ handleSubmit }) => (\r\n            <form onSubmit={handleSubmit}>\r\n              <div>\r\n                <Field\r\n                  name=\"email\"\r\n                  component={TextInput}\r\n                  placeholder=\"Email...\"\r\n                  label=\"Email\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Field\r\n                  name=\"password\"\r\n                  component={PassInput}\r\n                  placeholder=\"Password...\"\r\n                  label=\"Password\"\r\n                />\r\n              </div>\r\n              <div>\r\n                <Button type=\"submit\" > LOGIN </Button>\r\n              </div>\r\n            </form>\r\n          )}\r\n        </Form>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators(\r\n    {\r\n      login: loginWithFirebase,\r\n    },\r\n    dispatch\r\n  );\r\n};\r\n\r\nexport default connect(null, mapDispatchToProps)(Login);\r\n","import React, { useEffect } from 'react';\r\nimport styles from './App.module.css';\r\nimport Navbar from './layout/navbar/navbar';\r\nimport NavbarPublic from './layout/navbar/navbarpublic';\r\nimport Header from './layout/header/header';\r\nimport Appointments from './components/Appointments/Appointments';\r\nimport Boilers from './components/Boilers/Boilers';\r\nimport BoilersTypes from './components/BoilersTypes/BoilersTypes';\r\nimport Buildings from './components/Buildings/Buildings';\r\nimport Customers from './components/Customers/Customers';\r\nimport Technicians from './components/Technicians/Technicians';\r\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\r\nimport Modal from './SharedComponents/Modal/Modal';\r\nimport { bindActionCreators } from \"redux\";\r\nimport Login from \"./components/Login/Login\";\r\nimport { setAuthentication } from \"./redux/actions/authActions\";\r\nimport { tokenListener } from \"./firebase\";\r\nimport { connect } from \"react-redux\";\r\n\r\nconst App = ({\r\n  authenticated,\r\n  setAuthentication\r\n}) => {\r\n  useEffect(() => {\r\n    const token = localStorage.getItem(\"token\");\r\n    if (token){\r\n      setAuthentication();\r\n    }\r\n  }, [setAuthentication])\r\n\r\n  useEffect(() => {\r\n    tokenListener();\r\n  }, []);\r\n\r\n  if(authenticated){\r\n    return (\r\n      <Router>\r\n        <div className=\"App\">\r\n          <div className={styles.wrapper}>\r\n            <Navbar />\r\n            <Modal />\r\n            <div className={styles.mainContent}>\r\n              <Header/>\r\n              <Switch>\r\n                <Route path=\"/appointments\" component={Appointments}/>\r\n                <Route path=\"/boilers\" component={Boilers}/>\r\n                <Route path=\"/boilersTypes\" component={BoilersTypes}/>\r\n                <Route path=\"/buildings\" component={Buildings}/>\r\n                <Route path=\"/customers\" component={Customers}/>\r\n                <Route path=\"/technicians\" component={Technicians}/>\r\n              </Switch>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </Router>\r\n    );\r\n  }\r\n  return (\r\n    <Router>\r\n      <div className=\"App\">\r\n        <div className={styles.wrapper}>\r\n          <NavbarPublic />\r\n          <div className={styles.mainContent}>\r\n            <Header/>\r\n            <Switch>\r\n              <Route exact path=\"/\" component={Login}/>\r\n            </Switch>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </Router>\r\n  );\r\n}\r\n\r\nconst mapStateToProps = state => {\r\n  return {\r\n      authenticated: state.auth.authenticated\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return bindActionCreators({\r\n      setAuthentication,\r\n  }, dispatch);\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(App);","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { Provider } from \"react-redux\";\r\nimport App from \"./App\";\r\nimport { store } from \"./redux/store\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <App />\r\n    </Provider>\r\n    ,\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"info\":\"main_info__1GuZN\",\"table\":\"main_table__NJkH8\",\"input\":\"main_input__1rLHr\",\"btnStyle\":\"main_btnStyle__2uOLW\",\"btnReportStyle\":\"main_btnReportStyle__1ivYq\",\"btnBackStyle\":\"main_btnBackStyle__k0vhJ\",\"listHead\":\"main_listHead__gEXnW\",\"formsBtn\":\"main_formsBtn__2WcpM\",\"Chart\":\"main_Chart__1f64I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"App\":\"App_App__3t51x\",\"wrapper\":\"App_wrapper__2sBnr\",\"mainContent\":\"App_mainContent__1DwSM\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"headerContainer\":\"header_headerContainer__2KIXR\",\"headerContent\":\"header_headerContent__206sb\"};"],"sourceRoot":""}